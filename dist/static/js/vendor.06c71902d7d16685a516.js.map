{"version":3,"sources":["webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/es6.symbol.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_object-keys.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_iter-define.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_wks.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_wks-define.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_cof.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_object-dps.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_set-to-string-tag.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/fn/object/assign.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_object-keys-internal.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_to-integer.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_string-at.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/es7.symbol.observable.js","webpack:///./node_modules/vue/dist/vue.esm.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/es6.array.find-index.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_object-gops.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_ctx.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_shared.js","webpack:///./node_modules/@firebase/polyfill/dist/index.esm.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_object-gopn.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_array-species-create.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/es6.string.repeat.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_shared-key.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_meta.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_defined.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/fn/array/find-index.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/es6.string.iterator.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_object-assign.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_string-repeat.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_to-object.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_object-gopn-ext.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_array-species-constructor.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/web.dom.iterable.js","webpack:///./node_modules/@firebase/app/dist/index.cjs.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_array-methods.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_object-gopd.js","webpack:///./node_modules/@firebase/util/dist/index.cjs.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/es7.symbol.async-iterator.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_ie8-dom-define.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_wks-ext.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_descriptors.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_hide.js","webpack:///./node_modules/tslib/tslib.es6.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_array-includes.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_iter-step.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_redefine.js","webpack:///./node_modules/vue-loader/lib/component-normalizer.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_fails-is-regexp.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_fails.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_iter-create.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_add-to-unscopables.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_global.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/fn/string/repeat.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_to-length.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_a-function.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_uid.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/es6.array.find.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/es6.string.starts-with.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_string-context.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_html.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_iobject.js","webpack:///./node_modules/@firebase/logger/dist/index.esm.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_enum-keys.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_core.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/es6.array.iterator.js","webpack:///./node_modules/firebase/database/dist/index.esm.js","webpack:///./node_modules/@firebase/database/dist/index.cjs.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_has.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_enum-bug-keys.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/fn/symbol/index.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_is-object.js","webpack:///./node_modules/@firebase/polyfill/node_modules/whatwg-fetch/fetch.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_an-object.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_to-primitive.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_library.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_object-gpo.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_is-regexp.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/fn/symbol/iterator.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/es6.object.to-string.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_object-dp.js","webpack:///./node_modules/promise-polyfill/lib/polyfill.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_is-array.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_object-create.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/fn/string/starts-with.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/fn/array/find.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/es6.object.assign.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_property-desc.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_export.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_iterators.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_to-iobject.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_dom-create.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_classof.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_object-pie.js","webpack:///./node_modules/firebase/app/dist/index.cjs.js","webpack:///./node_modules/@firebase/polyfill/node_modules/core-js/modules/_to-absolute-index.js"],"names":["global","__webpack_require__","has","DESCRIPTORS","$export","redefine","META","KEY","$fails","shared","setToStringTag","uid","wks","wksExt","wksDefine","enumKeys","isArray","anObject","isObject","toIObject","toPrimitive","createDesc","_create","gOPNExt","$GOPD","$DP","$keys","gOPD","f","dP","gOPN","$Symbol","Symbol","$JSON","JSON","_stringify","stringify","HIDDEN","TO_PRIMITIVE","isEnum","propertyIsEnumerable","SymbolRegistry","AllSymbols","OPSymbols","ObjectProto","Object","USE_NATIVE","QObject","setter","findChild","setSymbolDesc","get","this","value","a","it","key","D","protoDesc","wrap","tag","sym","_k","isSymbol","iterator","$defineProperty","enumerable","$defineProperties","P","keys","i","l","length","$propertyIsEnumerable","E","call","$getOwnPropertyDescriptor","$getOwnPropertyNames","names","result","push","$getOwnPropertySymbols","IS_OP","TypeError","arguments","undefined","$set","configurable","set","name","G","W","F","es6Symbols","split","j","wellKnownSymbols","store","k","S","for","keyFor","useSetter","useSimple","create","defineProperty","defineProperties","getOwnPropertyDescriptor","getOwnPropertyNames","getOwnPropertySymbols","replacer","$replacer","args","apply","valueOf","Math","enumBugKeys","module","exports","O","LIBRARY","hide","Iterators","$iterCreate","getPrototypeOf","ITERATOR","BUGGY","returnThis","Base","NAME","Constructor","next","DEFAULT","IS_SET","FORCED","methods","IteratorPrototype","getMethod","kind","proto","TAG","DEF_VALUES","VALUES_BUG","prototype","$native","$default","$entries","$anyNative","entries","values","USE_SYMBOL","core","charAt","toString","slice","getKeys","Properties","def","stat","assign","arrayIndexOf","IE_PROTO","object","ceil","floor","isNaN","toInteger","defined","TO_STRING","that","pos","b","s","String","charCodeAt","emptyObject","freeze","isUndef","v","isDef","isTrue","isPrimitive","obj","_toString","isPlainObject","isRegExp","isValidArrayIndex","val","n","parseFloat","isFinite","isPromise","then","catch","Array","toNumber","makeMap","str","expectsLowerCase","map","list","toLowerCase","isBuiltInTag","isReservedAttribute","remove","arr","item","index","indexOf","splice","hasOwnProperty","hasOwn","cached","fn","cache","camelizeRE","camelize","replace","_","c","toUpperCase","capitalize","hyphenateRE","hyphenate","bind","Function","ctx","boundFn","_length","toArray","start","ret","extend","to","_from","toObject","res","noop","no","identity","looseEqual","isObjectA","isObjectB","isArrayA","isArrayB","every","e","Date","getTime","keysA","keysB","looseIndexOf","once","called","SSR_ATTR","ASSET_TYPES","LIFECYCLE_HOOKS","config","optionMergeStrategies","silent","productionTip","devtools","performance","errorHandler","warnHandler","ignoredElements","keyCodes","isReservedTag","isReservedAttr","isUnknownElement","getTagNamespace","parsePlatformTagName","mustUseProp","async","_lifecycleHooks","unicodeRegExp","isReserved","writable","bailRE","RegExp","_isServer","hasProto","inBrowser","window","inWeex","WXEnvironment","platform","weexPlatform","UA","navigator","userAgent","isIE","test","isIE9","isEdge","isIOS","isFF","match","nativeWatch","watch","supportsPassive","opts","addEventListener","isServerRendering","env","VUE_ENV","__VUE_DEVTOOLS_GLOBAL_HOOK__","isNative","Ctor","_Set","hasSymbol","Reflect","ownKeys","Set","add","clear","warn","Dep","id","subs","addSub","sub","removeSub","depend","target","addDep","notify","update","targetStack","pushTarget","popTarget","pop","VNode","data","children","text","elm","context","componentOptions","asyncFactory","ns","fnContext","fnOptions","fnScopeId","componentInstance","parent","raw","isStatic","isRootInsert","isComment","isCloned","isOnce","asyncMeta","isAsyncPlaceholder","prototypeAccessors","child","createEmptyVNode","node","createTextVNode","cloneVNode","vnode","cloned","arrayProto","arrayMethods","forEach","method","original","len","inserted","ob","__ob__","observeArray","dep","arrayKeys","shouldObserve","toggleObserving","Observer","src","vmCount","__proto__","copyAugment","walk","observe","asRootData","isExtensible","_isVue","defineReactive$$1","customSetter","shallow","property","getter","childOb","dependArray","newVal","max","del","items","strats","mergeData","from","toVal","fromVal","mergeDataOrFn","parentVal","childVal","vm","instanceData","defaultData","mergeHook","concat","hooks","dedupeHooks","mergeAssets","hook","type","key$1","props","inject","computed","provide","defaultStrat","mergeOptions","options","normalizeProps","normalized","normalizeInject","dirs","directives","def$$1","normalizeDirectives","_base","extends","mixins","mergeField","strat","resolveAsset","warnMissing","assets","camelizedId","PascalCaseId","validateProp","propOptions","propsData","prop","absent","booleanIndex","getTypeIndex","Boolean","stringIndex","default","$options","_props","getType","getPropDefaultValue","prevShouldObserve","isSameType","expectedTypes","handleError","err","info","cur","$parent","errorCaptured","globalHandleError","invokeWithErrorHandling","handler","logError","console","error","timerFunc","isUsingMicroTask","callbacks","pending","flushCallbacks","copies","Promise","p","resolve","setTimeout","MutationObserver","setImmediate","counter","observer","textNode","document","createTextNode","characterData","nextTick","cb","_resolve","seenObjects","traverse","_traverse","seen","isA","isFrozen","depId","normalizeEvent","passive","once$$1","capture","createFnInvoker","fns","invoker","arguments$1","updateListeners","on","oldOn","remove$$1","createOnceHandler","old","event","params","mergeVNodeHook","hookKey","oldHook","wrappedHook","merged","checkProp","hash","altKey","preserve","normalizeChildren","normalizeArrayChildren","nestedIndex","lastIndex","last","isTextNode","shift","_isVList","resolveInject","provideKey","source","_provided","provideDefault","resolveSlots","slots","attrs","slot","name$1","isWhitespace","normalizeScopedSlots","normalSlots","prevSlots","isStable","$stable","$key","_normalized","normalizeScopedSlot","key$2","proxyNormalSlot","proxy","renderList","render","done","renderSlot","fallback","bindObject","nodes","scopedSlotFn","$scopedSlots","$slots","$createElement","resolveFilter","isKeyNotMatch","expect","actual","checkKeyCodes","eventKeyCode","builtInKeyCode","eventKeyName","builtInKeyName","mappedKeyCode","bindObjectProps","asProp","isSync","loop","domProps","camelizedKey","$event","renderStatic","isInFor","_staticTrees","tree","markStatic","staticRenderFns","_renderProxy","markOnce","markStaticNode","bindObjectListeners","existing","ours","resolveScopedSlots","hasDynamicKeys","contentHashKey","bindDynamicKeys","baseObj","prependModifier","symbol","installRenderHelpers","_o","_n","_s","_l","_t","_q","_i","_m","_f","_b","_v","_e","_u","_g","_d","_p","FunctionalRenderContext","contextVm","this$1","_original","isCompiled","_compiled","needNormalization","listeners","injections","scopedSlots","_scopeId","_c","d","createElement","cloneAndMarkFunctionalResult","renderContext","clone","mergeProps","componentVNodeHooks","init","hydrating","_isDestroyed","keepAlive","mountedNode","prepatch","_isComponent","_parentVnode","inlineTemplate","createComponentInstanceForVnode","activeInstance","$mount","oldVnode","parentVnode","renderChildren","newScopedSlots","oldScopedSlots","hasDynamicScopedSlot","needsForceUpdate","_renderChildren","$vnode","_vnode","$attrs","$listeners","propKeys","_propKeys","oldListeners","_parentListeners","updateComponentListeners","$forceUpdate","updateChildComponent","insert","_isMounted","callHook","_inactive","activatedChildren","activateChildComponent","destroy","deactivateChildComponent","direct","_directInactive","isInInactiveTree","$children","$destroy","hooksToMerge","createComponent","baseCtor","cid","factory","errorComp","resolved","owner","currentRenderingInstance","owners","loading","loadingComp","sync","$on","forceRender","renderCompleted","ensureCtor","reject","reason","component","delay","timeout","resolveAsyncComponent","createAsyncPlaceholder","resolveConstructorOptions","model","callback","transformModel","extractPropsFromVNodeData","functional","vnodes","createFunctionalComponent","nativeOn","abstract","toMerge","_merged","mergeHook$1","installComponentHooks","f1","f2","SIMPLE_NORMALIZE","ALWAYS_NORMALIZE","normalizationType","alwaysNormalize","is","simpleNormalizeChildren","pre","applyNS","force","style","class","registerDeepBindings","_createElement","comp","base","__esModule","toStringTag","getFirstComponentChild","remove$1","$off","_target","onceHandler","setActiveInstance","prevActiveInstance","handlers","_hasHookEvent","$emit","queue","waiting","flushing","currentFlushTimestamp","getNow","now","flushSchedulerQueue","watcher","sort","before","run","activatedQueue","updatedQueue","callActivatedHooks","_watcher","callUpdatedHooks","emit","createEvent","timeStamp","uid$2","Watcher","expOrFn","isRenderWatcher","_watchers","deep","user","lazy","active","dirty","deps","newDeps","depIds","newDepIds","expression","path","segments","parsePath","cleanupDeps","tmp","queueWatcher","oldValue","evaluate","teardown","_isBeingDestroyed","sharedPropertyDefinition","sourceKey","initState","propsOptions","isRoot","initProps","initMethods","_data","getData","initData","watchers","_computedWatchers","isSSR","userDef","computedWatcherOptions","defineComputed","initComputed","createWatcher","initWatch","shouldCache","createComputedGetter","createGetterInvoker","$watch","uid$3","super","superOptions","modifiedOptions","modified","latest","sealed","sealedOptions","resolveModifiedOptions","extendOptions","components","Vue","_init","initExtend","Super","SuperId","cachedCtors","_Ctor","Sub","constructor","Comp","initProps$1","initComputed$1","mixin","use","getComponentName","matches","pattern","pruneCache","keepAliveInstance","filter","cachedNode","pruneCacheEntry","current","cached$$1","_uid","vnodeComponentOptions","_componentTag","initInternalComponent","_self","$root","$refs","initLifecycle","_events","initEvents","parentData","initRender","initInjections","initProvide","el","initMixin","dataDef","propsDef","$delete","immediate","stateMixin","hookRE","$once","i$1","cbs","eventsMixin","_update","prevEl","$el","prevVnode","restoreActiveInstance","__patch__","__vue__","lifecycleMixin","$nextTick","_render","ref","renderMixin","patternTypes","builtInComponents","KeepAlive","include","exclude","Number","created","destroyed","mounted","parseInt","configDef","util","defineReactive","delete","observable","plugin","installedPlugins","_installedPlugins","unshift","install","initUse","initMixin$1","definition","initAssetRegisters","initGlobalAPI","ssrContext","version","acceptValue","attr","isEnumeratedAttr","isValidContentEditableValue","convertEnumeratedValue","isFalsyAttrValue","isBooleanAttr","xlinkNS","isXlink","getXlinkProp","genClassForVnode","parentNode","childNode","mergeClassData","staticClass","dynamicClass","stringifyClass","renderClass","stringified","stringifyArray","stringifyObject","namespaceMap","svg","math","isHTMLTag","isSVG","unknownElementCache","isTextInputType","query","selected","querySelector","nodeOps","tagName","multiple","setAttribute","createElementNS","namespace","createComment","insertBefore","newNode","referenceNode","removeChild","appendChild","nextSibling","setTextContent","textContent","setStyleScope","scopeId","registerRef","isRemoval","refs","refInFor","emptyNode","sameVnode","typeA","typeB","sameInputType","createKeyToOldIdx","beginIdx","endIdx","updateDirectives","oldDir","dir","isCreate","isDestroy","oldDirs","normalizeDirectives$1","newDirs","dirsWithInsert","dirsWithPostpatch","oldArg","arg","callHook$1","componentUpdated","callInsert","emptyModifiers","modifiers","getRawDirName","rawName","join","baseModules","updateAttrs","inheritAttrs","oldAttrs","setAttr","removeAttributeNS","removeAttribute","baseSetAttr","setAttributeNS","__ieph","blocker","stopImmediatePropagation","removeEventListener","updateClass","oldData","cls","transitionClass","_transitionClasses","_prevClass","chr","index$1","expressionPos","expressionEndPos","klass","validDivisionCharRE","parseFilters","exp","prev","filters","inSingle","inDouble","inTemplateString","inRegex","curly","square","paren","lastFilterIndex","trim","pushFilter","wrapFilter","baseWarn","msg","range","pluckModuleFunction","modules","m","addProp","dynamic","rangeSetItem","plain","addAttr","dynamicAttrs","addRawAttr","attrsMap","attrsList","addDirective","isDynamicArg","prependModifierMarker","addHandler","important","events","right","middle","native","nativeEvents","newHandler","getRawBindingAttr","rawAttrsMap","getBindingAttr","getStatic","dynamicValue","getAndRemoveAttr","staticValue","removeFromMap","getAndRemoveAttrByRegex","end","genComponentModel","number","valueExpression","assignment","genAssignmentCode","lastIndexOf","eof","isStringStart","parseString","parseBracket","parseModel","inBracket","stringQuote","target$1","RANGE_TOKEN","CHECKBOX_RADIO_TOKEN","createOnceHandler$1","remove$2","useMicrotaskFix","add$1","attachedTimestamp","_wrapper","currentTarget","ownerDocument","updateDOMListeners","change","normalizeEvents","svgContainer","updateDOMProps","oldProps","childNodes","_value","strCur","shouldUpdateValue","innerHTML","firstChild","checkVal","composing","notInFocus","activeElement","isNotInFocusAndDirty","_vModifiers","isDirtyWithModifiers","parseStyleText","cssText","propertyDelimiter","normalizeStyleData","normalizeStyleBinding","staticStyle","bindingStyle","emptyStyle","cssVarRE","importantRE","setProp","setProperty","normalizedName","normalize","vendorNames","capName","updateStyle","oldStaticStyle","oldStyleBinding","normalizedStyle","oldStyle","newStyle","checkChild","styleData","getStyle","whitespaceRE","addClass","classList","getAttribute","removeClass","tar","resolveTransition","css","autoCssTransition","enterClass","enterToClass","enterActiveClass","leaveClass","leaveToClass","leaveActiveClass","hasTransition","TRANSITION","ANIMATION","transitionProp","transitionEndEvent","animationProp","animationEndEvent","ontransitionend","onwebkittransitionend","onanimationend","onwebkitanimationend","raf","requestAnimationFrame","nextFrame","addTransitionClass","transitionClasses","removeTransitionClass","whenTransitionEnds","expectedType","getTransitionInfo","propCount","ended","onEnd","transformRE","styles","getComputedStyle","transitionDelays","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationDurations","animationTimeout","hasTransform","delays","durations","toMs","enter","toggleDisplay","_leaveCb","cancelled","transition","_enterCb","nodeType","appearClass","appearToClass","appearActiveClass","beforeEnter","afterEnter","enterCancelled","beforeAppear","appear","afterAppear","appearCancelled","duration","transitionNode","isAppear","startClass","activeClass","toClass","beforeEnterHook","enterHook","afterEnterHook","enterCancelledHook","explicitEnterDuration","expectsCSS","userWantsControl","getHookArgumentsLength","show","pendingNode","_pending","isValidDuration","leave","rm","beforeLeave","afterLeave","leaveCancelled","delayLeave","explicitLeaveDuration","performLeave","invokerFns","_enter","patch","backend","removeNode","createElm","insertedVnodeQueue","parentElm","refElm","nested","ownerArray","isReactivated","initComponent","innerNode","activate","reactivateComponent","setScope","createChildren","invokeCreateHooks","pendingInsert","isPatchable","ref$$1","ancestor","addVnodes","startIdx","invokeDestroyHook","removeVnodes","ch","removeAndInvokeRemoveHook","childElm","createRmCb","findIdxInOld","oldCh","patchVnode","removeOnly","hydrate","newCh","oldKeyToIdx","idxInOld","vnodeToMove","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","canMove","updateChildren","postpatch","invokeInsertHook","initial","isRenderedModule","inVPre","hasChildNodes","childrenMatch","fullInvoke","isInitialPatch","isRealElement","hasAttribute","oldElm","patchable","i$2","createPatchFunction","vmodel","trigger","directive","binding","_vOptions","setSelected","getValue","onCompositionStart","onCompositionEnd","prevOptions","curOptions","some","o","hasNoMatchingOption","actuallySetSelected","isMultiple","option","selectedIndex","initEvent","dispatchEvent","locateNode","platformDirectives","transition$$1","originalDisplay","__vOriginalDisplay","display","unbind","transitionProps","mode","getRealChild","compOptions","extractTransitionData","placeholder","h","rawChild","isNotTextNode","isVShowDirective","Transition","hasParentTransition","_leaving","oldRawChild","oldChild","isSameChild","delayedLeave","moveClass","callPendingCbs","_moveCb","recordPosition","newPos","getBoundingClientRect","applyTranslation","oldPos","dx","left","dy","top","moved","transform","WebkitTransform","transitionDuration","platformComponents","TransitionGroup","beforeMount","kept","prevChildren","rawChildren","transitionData","removed","c$1","updated","hasMove","_reflow","body","offsetHeight","propertyName","_hasMove","cloneNode","HTMLUnknownElement","HTMLElement","mountComponent","defaultTagRE","regexEscapeRE","buildRegex","delimiters","open","close","parseText","tagRE","tokenValue","tokens","rawTokens","exec","@binding","klass$1","staticKeys","transformNode","classBinding","genData","decoder","style$1","styleBinding","he","html","isUnaryTag","canBeLeftOpenTag","isNonPhrasingTag","attribute","dynamicArgAttribute","ncname","qnameCapture","startTagOpen","startTagClose","endTag","doctype","comment","conditionalComment","isPlainTextElement","reCache","decodingMap","&lt;","&gt;","&quot;","&amp;","&#10;","&#9;","&#39;","encodedAttr","encodedAttrWithNewLines","isIgnoreNewlineTag","shouldIgnoreFirstNewline","decodeAttr","shouldDecodeNewlines","re","warn$2","transforms","preTransforms","postTransforms","platformIsPreTag","platformMustUseProp","platformGetTagNamespace","onRE","dirRE","forAliasRE","forIteratorRE","stripParensRE","dynamicArgRE","argRE","bindRE","modifierRE","slotRE","lineBreakRE","whitespaceRE$1","decodeHTMLCached","emptySlotScopeToken","createASTElement","makeAttrsMap","parse","template","isPreTag","root","currentParent","stack","preserveWhitespace","whitespaceOption","whitespace","inPre","closeElement","element","trimEndingWhitespace","processed","processElement","if","elseif","else","addIfCondition","block","forbidden","findPrevElement","slotScope","slotTarget","lastNode","lastTag","expectHTML","isUnaryTag$$1","canBeLeftOpenTag$$1","endTagLength","stackedTag","reStackedTag","rest$1","all","chars","parseEndTag","textEnd","commentEnd","shouldKeepComment","substring","advance","conditionalEnd","doctypeMatch","endTagMatch","curIndex","startTagMatch","parseStartTag","handleStartTag","rest","unarySlash","unary","shouldDecodeNewlinesForHref","lowerCasedTag","lowerCasedTagName","parseHTML","comments","outputSourceRange","start$1","ieNSBug","ieNSPrefix","guardIESVGBug","processPre","processRawAttrs","processFor","processIf","processOnce","end$1","processKey","checkInFor","slotTargetDynamic","slotBinding","getSlotName","slotBinding$1","ref$1","dynamic$1","slotContainer","processSlotContent","slotName","processSlotOutlet","processComponent","syncGen","isDynamic","hasBindings","parseModifiers","camel","argMatch","processAttrs","inMatch","alias","iteratorMatch","iterator1","iterator2","parseFor","condition","ifConditions","cloneASTElement","modules$1","preTransformNode","typeBinding","ifCondition","ifConditionExtra","hasElse","elseIfCondition","branch0","branch1","branch2","isStaticKey","isPlatformReservedTag","baseOptions","_warn","code","genSelect","valueBinding","trueValueBinding","falseValueBinding","genCheckboxModel","genRadioModel","needCompositionGuard","genDefaultModel","reduce","genStaticKeys","genStaticKeysCached","optimize","markStatic$1","static","isDirectChildOfTemplateFor","l$1","markStaticRoots","staticInFor","staticRoot","fnExpRE","fnInvokeRE","simplePathRE","esc","tab","space","up","down","keyNames","genGuard","modifierCode","stop","prevent","self","ctrl","alt","meta","genHandlers","prefix","staticHandlers","dynamicHandlers","handlerCode","genHandler","isMethodPath","isFunctionExpression","isFunctionInvocation","genModifierCode","keyModifier","genFilterCode","genKeyFilter","keyVal","keyCode","keyName","baseDirectives","wrapListeners","wrapData","cloak","CodegenState","dataGenFns","maybeComponent","onceId","generate","ast","state","genElement","staticProcessed","genStatic","onceProcessed","genOnce","forProcessed","genFor","ifProcessed","genIf","genChildren","genProps","bind$$1","genSlot","componentName","genData$2","genComponent","originalPreState","altGen","altEmpty","genIfConditions","conditions","genTernaryExp","altHelper","needRuntime","hasRuntime","gen","genDirectives","containsSlotChild","needsKey","generatedSlots","genScopedSlot","inlineRenderFns","genInlineTemplate","isLegacySyntax","reverseProxy","checkSkip","altGenElement","altGenNode","el$1","normalizationType$1","needsNormalization","getNormalizationType","genNode","transformSpecialNewlines","staticProps","dynamicProps","createFunction","errors","createCompileToFunctionFn","compile","compiled","fnGenErrors","baseCompile","div","finalOptions","tips","tip","compileToFunctions","getShouldDecode","href","idToTemplate","mount","documentElement","outerHTML","container","getOuterHTML","__webpack_exports__","$find","forced","findIndex","callbackfn","aFunction","__WEBPACK_IMPORTED_MODULE_0_whatwg_fetch__","__WEBPACK_IMPORTED_MODULE_1_promise_polyfill_lib_polyfill__","__WEBPACK_IMPORTED_MODULE_2_core_js_fn_array_find__","__WEBPACK_IMPORTED_MODULE_3_core_js_fn_array_find_index__","__WEBPACK_IMPORTED_MODULE_4_core_js_fn_object_assign__","__WEBPACK_IMPORTED_MODULE_5_core_js_fn_string_starts_with__","__WEBPACK_IMPORTED_MODULE_6_core_js_fn_string_repeat__","__WEBPACK_IMPORTED_MODULE_7_core_js_fn_symbol__","__WEBPACK_IMPORTED_MODULE_8_core_js_fn_symbol_iterator__","hiddenKeys","g","eval","speciesConstructor","repeat","setDesc","FREEZE","preventExtensions","setMeta","w","NEED","fastKey","getWeak","onFreeze","$at","iterated","point","gOPS","pIE","IObject","$assign","A","B","K","T","aLen","getSymbols","count","Infinity","RangeError","windowNames","getWindowNames","SPECIES","C","$iterators","TO_STRING_TAG","ArrayValues","DOMIterables","CSSRuleList","CSSStyleDeclaration","CSSValueList","ClientRectList","DOMRectList","DOMStringList","DOMTokenList","DataTransferItemList","FileList","HTMLAllCollection","HTMLCollection","HTMLFormElement","HTMLSelectElement","MediaList","MimeTypeArray","NamedNodeMap","NodeList","PaintRequestList","Plugin","PluginArray","SVGLengthList","SVGNumberList","SVGPathSegList","SVGPointList","SVGStringList","SVGTransformList","SourceBufferList","StyleSheetList","TextTrackCueList","TextTrackList","TouchList","collections","explicit","Collection","contains","DEFAULT_ENTRY_NAME","tokenListeners","FirebaseAppImpl","firebase_","isDeleted_","services_","name_","_automaticDataCollectionEnabled","automaticDataCollectionEnabled","options_","deepCopy","INTERNAL","getUid","getToken","addAuthTokenListener","removeAuthTokenListener","listener","checkDestroyed_","_this","removeApp","services","serviceKey","instanceKey","service","_getService","instanceIdentifier","instanceSpecifier","factories","extendApp","deepExtend","appErrors","log","ErrorFactory","no-app","bad-app-name","duplicate-app","app-deleted","duplicate-service","sa-not-supported","invalid-app-argument","isNode","process","firebase","createFirebaseNamespace","apps_","appHooks","initializeApp","rawConfig","name_1","app","callAppHooks","apps","SDK_VERSION","registerService","createService","serviceProperties","appHook","allowMultipleInstances","getApps","serviceNamespace","appArg","extendNamespace","createSubscribe","useAsService","eventName","serviceName","factoryName","useService","patchProperty","toLength","asc","TYPE","$create","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","NO_HOLES","$this","IE8_DOM_DEFINE","tslib_1","CONSTANTS","NODE_CLIENT","NODE_ADMIN","assert","assertion","message","assertionError","Error","stringToByteArray","out","base64","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","charToByteMapWebSafe_","ENCODED_VALS_BASE","ENCODED_VALS","ENCODED_VALS_WEBSAFE","HAS_NATIVE_SUPPORT","atob","encodeByteArray","input","opt_webSafe","init_","byteToCharMap","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","encodeString","btoa","decodeString","bytes","c1","fromCharCode","c2","u","c3","byteArrayToString","decodeStringToByteArray","charToByteMap","byte4","base64Decode","Deferred","promise","wrapCallback","getUA","ERROR_NAME","captureStackTrace","FirebaseError","fullCode","jsonEval","decode","token","header","claims","signature","parts","objTo","objFrom","findKey","opt_this","Sha1","_super","chain_","buf_","W_","pad_","inbuf_","total_","blockSize","reset","__extends","compress_","buf","opt_offset","t","opt_length","lengthMinusBlock","inbuf","digest","totalBits","ObserverProxy","executor","onNoObservers","observers","unsubscribes","observerCount","task","finalized","forEachObserver","complete","subscribe","nextOrObserver","methods_1","implementsAnyMethods","unsub","unsubscribeOne","finalError","sendOne","errorPrefix","fnName","argumentNumber","optional","argName","base64Encode","utf8Bytes","isMobileCordova","isNodeSdk","isReactNative","patchCapture","captureFake","isAdmin","issuedAtTime","isValidFormat","isValidTimestamp","validSince","validUntil","findValue","getAnyKey","getCount","rv","getValues","isEmpty","isNonNullObject","opt_obj","safeGet","querystring","querystringParams","arrayVal","encodeURIComponent","querystringDecode","onError","validateArgCount","minCount","maxCount","argCount","argError","validateCallback","validateContextObject","validateNamespace","stringLength","high","__","extendStatics","__assign","decorators","desc","r","decorate","paramIndex","decorator","metadataKey","metadataValue","metadata","thisArg","_arguments","generator","fulfilled","step","rejected","y","label","sent","trys","ops","verb","throw","return","op","__values","__read","ar","__await","asyncIterator","q","resume","fulfill","settle","cooked","mod","setPrototypeOf","toAbsoluteIndex","IS_INCLUDES","fromIndex","SRC","$toString","TPL","inspectSource","safe","isFunction","rawScriptExports","compiledTemplate","functionalTemplate","injectStyles","moduleIdentifier","esModule","scriptExports","__VUE_SSR_CONTEXT__","_registeredComponents","_ssrRegister","beforeCreate","_injectStyles","MATCH","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","clearTimeout","currentQueue","draining","queueIndex","cleanUpNextTick","drainQueue","marker","runClearTimeout","Item","array","title","browser","argv","versions","addListener","off","removeListener","removeAllListeners","prependListener","prependOnceListener","cwd","chdir","umask","descriptor","UNSCOPABLES","ArrayProto","__g","min","px","random","find","$startsWith","startsWith","searchString","search","cof","setLogLevel","Logger","LogLevel","instances","defaultLogLevel","INFO","defaultLogHandler","instance","logType","logLevel","toISOString","DEBUG","VERBOSE","WARN","ERROR","_logLevel","_logHandler","debug","level","inst","symbols","__e","addToUnscopables","Arguments","__WEBPACK_IMPORTED_MODULE_0__firebase_database__","ex","logger$1","DOMStorageWrapper","domStorage_","prefix_","removeItem","prefixedName_","setItem","storedVal","getItem","MemoryStorage","cache_","isInMemoryStorage","createStoragefor","domStorageName","domStorage","PersistentStorage","SessionStorage","logClient","LUIDGenerator","sha1","sha1Bytes","buildLogMessage_","var_args","logger","firstLog_","enableLogging","logger_","persistent","logWrapper","fatal","isInvalidJSONNumber","POSITIVE_INFINITY","NEGATIVE_INFINITY","MIN_NAME","MAX_NAME","nameCompare","aAsInt","tryParseInt","bAsInt","stringCompare","requireKey","ObjectToUniqueKey","splitStringBySize","segsize","dataSegs","each","doubleToIEEE754String","ln","bits","abs","pow","LN2","round","reverse","hexByteString","hexByte","substr","INTEGER_REGEXP_","intVal","exceptionGuard","beingCrawled","setTimeoutNonBlocking","time","Path","pathOrString","pieceNum","pieces_","copyTo","pieceNum_","getFront","getLength","popFront","getBack","pathString","toUrlEncodedString","begin","pieces","childPathObj","childPieces","relativePath","outerPath","innerPath","outer","inner","comparePaths","leftKeys","rightKeys","cmp","equals","other","ValidationPath","errorPrefix_","parts_","byteLength_","checkValid_","MAX_PATH_LENGTH_BYTES","MAX_PATH_DEPTH","toErrorString","LONG_POLLING","RepoInfo","host","secure","webSocketOnly","persistenceKey","domain","internalHost","needsQueryParam","isCustomHost","isCacheableHost","isDemoHost","updateHost","newHost","connectionURL","connURL","pairs","toURLString","PUSH_CHARS","lastPushTime","lastRandChars","__EMPTY_NODE","MAX_NODE","parseRepoInfo","dataURL","parsedUrl","parseURL","subdomain","location","protocol","scheme","repoInfo","port","colonInd","slashInd","questionMarkInd","pathStringDecoded","piece","decodeURIComponent","decodePath","queryParams","queryString","results","_a","segment","kv","decodeQuery","INVALID_KEY_REGEX_","INVALID_PATH_REGEX_","isValidKey","isValidPathString","isValidPriority","priority","validateFirebaseDataArg","validateFirebaseData","path_","hasDotValue_1","hasActualChild_1","validateFirebaseMergeDataArg","mergePaths","curPath","prevPath","validateFirebaseMergePaths","validatePriority","validateEventType","eventType","validateKey","validatePathString","validateWritablePath","validateUrl","isValidRootPathString","OnDisconnect","repo_","cancel","onComplete","deferred","onDisconnectCancel","onDisconnectSet","setWithPriority","onDisconnectSetWithPriority","objectToMerge","newObjectToMerge","onDisconnectUpdate","TransactionResult","committed","snapshot","toJSON","nextPushId","duplicateTime","timeStampChars","NamedNode","Wrap","Index","getCompare","compare","indexedValueChanged","oldNode","oldWrapped","newWrapped","minPost","MIN","KeyIndex","isDefinedOn","maxPost","makePost","indexValue","KEY_INDEX","__childrenNodeConstructor","nodeFromJSON","MAX_NODE$1","priorityHashText","validatePriorityNode","priorityNode","isLeafNode","getPriority","LeafNode","value_","priorityNode_","EMPTY_NODE","lazyHash_","updatePriority","newPriorityNode","getImmediateChild","childName","getChild","hasChild","getPredecessorChildName","updateImmediateChild","newChildNode","updateChild","front","numChildren","forEachChild","action","exportFormat",".value",".priority","toHash","compareTo","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","withIndex","isIndexed","_defaultIndexMap","PRIORITY_INDEX","PriorityIndex","aPriority","bPriority","indexCmp","SortedMapIterator","startKey","comparator","isReverse_","resultGenerator_","nodeStack_","getNext","hasNext","peek","LLRBNode","color","RED","SortedMap","copy","inorderTraversal","reverseTraversal","min_","minKey","maxKey","fixUp_","removeMin_","isRed_","moveRedLeft_","smallest","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","nl","nr","checkMaxDepth_","blackDepth","check_","BLACK","LLRBEmptyNode","comparator_","root_","getPredecessorKey","rightParent","getIterator","resultGenerator","getIteratorFrom","getReverseIteratorFrom","getReverseIterator","LOG_2","Base12Num","num","current_","mask","bits_","nextBitIsOne","buildChildSet","childList","keyFn","mapSortFn","buildBalancedTree","low","namedNode","base12","buildPennant","chunkSize","childTree","attachPennant","pennant","isOne","buildFrom12Array","fallbackObject","IndexMap","indexes_","indexSet_","indexKey","sortedMap","hasIndex","indexDefinition","addIndex","existingChildren","newIndex","sawIndexedValue","iter","indexName","newIndexSet","newIndexes","addToIndexes","indexedChildren","existingSnap","newChildren","removeFromIndexes","NAME_ONLY_COMPARATOR","NAME_COMPARATOR","ChildrenNode","children_","indexMap_","Default","newIndexMap","newImmediateChild","numKeys","allIntegerKeys","toHash_1","childHash","idx","resolveIndex_","predecessor","getFirstChildName","getFirstChild","getLastChildName","getLastChild","wrappedNode","startPost","endPost","MAX_NODE$2","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","MaxNode","MAX","setMaxNode$1","USE_HINZE","nodeFromJSON$1","json","node_1","jsonObj_1","childData","children_1","childrenHavePriority_1","hinzeJsonObj_1","childSet","sortedChildSet","setNodeFromJSON","__referenceConstructor","OperationType","VALUE_INDEX","ValueIndex","valueNode","PathIndex","indexPath_","extractChild","snap","aChild","bChild","DataSnapshot","node_","ref_","index_","exportVal","exists","childPathString","childPath","childRef","hasChildren","getKey","getRef","DataEvent","eventRegistration","prevName","getPath","getParent","getEventType","getEventRunner","CancelEvent","ValueEventRegistration","callback_","cancelCallback_","context_","respondsTo","getQueryParams","getIndex","snapshotNode","eventData","cancelCB_1","cb_1","createCancelEvent","hasAnyCallback","ChildEventRegistration","callbacks_","eventToCheck","cancelCB_2","cb_2","otherCount","otherKey","thisKey","Query","repo","queryParams_","orderByCalled_","validateQueryEndpoints_","startNode","endNode","hasStart","getIndexStartValue","hasEnd","getIndexEndValue","tooManyArgsError","wrongArgTypeError","getIndexStartName","getIndexEndName","validateLimit_","hasLimit","hasAnchoredLimit","validateNoPreviousOrderByCall_","cancelCallbackOrContext","getCancelAndContextArgs_","onValueEvent","onChildEvent","cancelCallback","addEventCallbackForQuery","removeEventCallbackForQuery","userCallback","cancelOrContext","firstCall","onceCallback","limitToFirst","limit","limitToLast","orderByChild","parsedPath","newParams","orderBy","orderByKey","orderByPriority","orderByValue","startAt","endAt","equalTo","queryObject","getQueryObject","queryIdentifier","isEqual","sameRepo","samePath","sameQueryIdentifier","CountedSet","SparseSnapshotTree","childKey","remember","forget","self_1","forEachTree","prefixPath","func","resolveDeferredValue","serverValues","resolveDeferredValueSnapshot","rawPri","leafNode","childrenNode","emptyChildrenSingleton","__referenceConstructor$1","OperationSource","fromUser","fromServer","queryId","tagged","User","Server","forServerTaggedQuery","AckUserWrite","affectedTree","revert","ACK_USER_WRITE","operationForChild","subtree","Empty","EmptyChildren","ImmutableTree","fromObject","childSnap","findRootMostMatchingPathAndValue","predicate","childExistingPathAndValue","findRootMostValueAndPath","toSet","newChild","setTree","newTree","fold","fold_","pathSoFar","accum","findOnPath","findOnPath_","pathToFollow","nextChild","foreachOnPath","foreachOnPath_","currentRelativePath","foreach","foreach_","foreachChild","ListenComplete","LISTEN_COMPLETE","Overwrite","OVERWRITE","Merge","MERGE","CacheNode","fullyInitialized_","filtered_","isFullyInitialized","isFiltered","isCompleteForPath","isCompleteForChild","getNode","ViewCache","eventCache_","serverCache_","updateEventSnap","eventSnap","filtered","updateServerSnap","serverSnap","getEventCache","getCompleteEventSnap","getServerCache","getCompleteServerSnap","Change","oldSnap","valueChange","VALUE","childAddedChange","CHILD_ADDED","childRemovedChange","CHILD_REMOVED","childChangedChange","newSnapshot","oldSnapshot","CHILD_CHANGED","childMovedChange","CHILD_MOVED","IndexedFilter","affectedPath","optChangeAccumulator","trackChildChange","updateFullNode","newSnap","newPriority","filtersNodes","getIndexedFilter","ChildChangeAccumulator","changeMap_","oldChange","oldType","getChanges","NO_COMPLETE_CHILD_SOURCE","NoCompleteChildSource_","getCompleteChild","getChildAfterChild","WriteTreeCompleteChildSource","writes_","viewCache_","optCompleteServerCache_","serverNode","calcCompleteChild","completeServerData","calcIndexedSlice","ProcessorResult","viewCache","changes","ViewProcessor","filter_","assertIndexed","applyOperation","oldViewCache","operation","writesCache","completeCache","newViewCache","filterServerNode","accumulator","overwrite","applyUserOverwrite_","applyServerOverwrite_","merge","applyUserMerge_","applyServerMerge_","ackUserWrite","revertUserWrite_","ackUserWrite_","listenComplete_","maybeAddValueEvent_","isLeafOrEmpty","oldCompleteSnap","generateEventCacheAfterServerEvent_","changePath","oldEventSnap","shadowingWrite","newEventCache","serverCache","completeChildren","completeEventChildren","calcCompleteEventChildren","completeNode","calcCompleteEventCache","oldEventNode","updatedPriority","calcEventCacheAfterServerOverwrite","childChangePath","newEventChild","eventChildUpdate","changedSnap","newServerCache","oldServerSnap","serverFilter","newServerNode","newEventSnap","cacheHasChild_","changedChildren","curViewCache","writePath","applyMerge_","viewMergeTree","serverChild","childMergeTree","isUnknownDeepMerge","ackPath","changedChildren_1","changedChildren_2","mergePath","serverCachePath","oldServerNode","completeServerCache","oldEventCache","serverChildren","EventGenerator","query_","generateEventsForChanges","eventCache","eventRegistrations","moves","generateEventsForType_","registrations","filteredChanges","compareChanges_","materializedChange","materializeSingleChange_","registration","aWrapped","bWrapped","View","initialViewCache","eventRegistrations_","indexFilter","getNodeFilter","processor_","initialServerCache","initialEventCache","eventGenerator_","getQuery","getCompleteServerCache","loadsAllData","addEventRegistration","removeEventRegistration","cancelError","cancelEvents","path_1","maybeEvent","remaining","generateEventsForChanges_","getInitialEvents","initialChanges","SyncPoint","views_","optCompleteServerCache","view","events_1","serverCacheComplete","eventCacheComplete","hadCompleteView","hasCompleteView","viewQueryId","getQueryViews","viewForQuery","getCompleteView","viewExistsForQuery","CompoundWrite","writeTree_","addWrite","rootmost","rootMostPath","addWrites","updates","newWrite","removeWrite","hasCompleteWrite","getCompleteNode","getCompleteChildren","childCompoundWrite","shadowingNode","applySubtreeWrite_","writeTree","priorityWrite_1","WriteTree","visibleWrites_","allWrites_","lastWriteId_","childWrites","WriteTreeRef","addOverwrite","writeId","visible","addMerge","getWrite","record","writeToRemove","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","recordContainsPath_","resetTree_","getCompleteWriteData","treePath","writeIdsToExclude","includeHiddenWrites","mergeAtPath","layerTree_","write","layeredCache","subMerge","completeServerChildren","topLevelSet","merge_1","existingEventSnap","existingServerSnap","childMerge","toIterate","writeRecord","DefaultFilter_","writes","treeRoot","compoundWrite","deepNode","treePath_","existingServerCache","SyncTree","listenProvider_","syncPointTree_","pendingWriteTree_","tagToQueryMap_","queryToTagMap_","applyUserOverwrite","newData","applyOperationToSyncPoints_","applyUserMerge","changeTree","affectedTree_1","applyServerOverwrite","applyServerMerge","applyListenComplete","applyTaggedQueryOverwrite","queryKey","queryKeyForTag_","parseQueryKey_","queryPath","applyTaggedOperation_","applyTaggedQueryMerge","applyTaggedListenComplete","foundAncestorDefaultView","pathToSyncPoint","sp","syncPoint","childSyncPoint","viewAlreadyExists","makeQueryKey_","getNextQueryTag_","setupListener_","maybeSyncPoint","removedAndEvents","removingDefault","covered","parentSyncPoint","newViews","collectDistinctViewsForSubTree_","newQuery","createListenerForView_","startListening","queryForListening_","tagForQuery_","hashFn","stopListening","queryToRemove","tagToRemove","removeTags_","maybeChildSyncPoint","childMap","views_1","childViews","queries","removedQuery","removedQueryKey","removedQueryTag","isDefault","queriesToStop","queries_1","childQueries","queryToStop","status","errorForServerCode","splitIndex","nextQueryTag_","applyOperationHelper_","syncPointTree","applyOperationDescendantsHelper_","childOperation","childServerCache","childWritesCache","SnapshotHolder","rootNode_","updateSnapshot","newSnapshotNode","AuthTokenProvider","app_","forceRefresh","addTokenChangeListener","removeTokenChangeListener","notifyForInvalidToken","errorMessage","StatsCollection","counters_","incrementCounter","amount","StatsManager","getCollection","hashString","collections_","getOrCreateReporter","creatorFunction","reporters_","StatsListener","collection_","last_","newStats","delta","FIRST_STATS_MIN_TIME","FIRST_STATS_MAX_TIME","StatsReporter","collection","server_","statsToReport_","statsListener_","reportStats_","includeStat","stats","reportedStats","haveStatsToReport","reportStats","EventQueue","eventLists_","recursionDepth_","queueEvents","eventDataList","currList","eventPath","EventList","raiseEventsAtPath","raiseQueuedEventsMatchingPredicate_","raiseEventsForChangedPath","changedPath","sentAll","eventList","raise","events_","eventFn","EventEmitter","allowedEvents_","listeners_","validateEventType_","getInitialEvent","et","VisibilityMonitor","hidden","visibilityChange","visible_","getInstance","OnlineMonitor","online_","currentlyOnline","PacketReceiver","onMessage_","pendingResponses","currentResponseNum","closeAfterResponse","onClose","closeAfter","responseNum","handleResponse","requestNum","_loop_1","toProcess","this_1","_loop_2","FIREBASE_LONGPOLL_COMMAND_CB_NAME","FIREBASE_LONGPOLL_DATA_CB_NAME","BrowserPollConnection","connId","transportSessionId","lastSessionId","bytesSent","bytesReceived","everConnected_","log_","stats_","urlFn","onMessage","onDisconnect","curSegmentNum","onDisconnect_","myPacketOrderer","isClosed_","connectTimeoutTimer_","onClosed_","readyState","called_1","wrappedFn_1","attachEvent","executeWhenDOMReady","scriptTagHolder","FirebaseIFrameScriptHolder","command","arg1","arg2","incrementIncomingBytes_","password","sendNewPolls","pN","urlParams","uniqueCallbackIdentifier","connectURL","addTag","startLongPoll","addDisconnectPingFrame","forceAllow","forceAllow_","forceDisallow","forceDisallow_","isAvailable","Windows","UI","markConnectionHealthy","shutdown_","myDisconnFrame","send","dataStr","base64data","MAX_URL_DATA_SIZE","enqueueSegment","pw","dframe","commandCB","onMessageCB","outstandingRequests","pendingSegs","currentSerial","myIFrame","createIFrame_","script","iframeContents","doc","iframe","contentWindow","contentDocument","alive","myID","disconn","myPW","theURL","nodeRestRequest","newRequest_","curDataString","theSeg","seg","ts","addLongPollTag_","segnum","totalsegs","url","serial","doNewRequest","keepaliveTimeout","loadCB","doNodeLongPoll","newScript_1","onload","onreadystatechange","rstate","onerror","WebSocketImpl","MozWebSocket","WebSocket","WebSocketConnection","keepaliveTimer","frames","totalFrames","connectionURL_","device","headers","User-Agent","NODE_ENV","origin","mySock","onopen","onclose","onmessage","handleIncomingFrame","isOldAndroid","oldAndroidMatch","previouslyFailed","appendFrame_","fullMess","jsonMess","handleNewFrameCount_","frameCount","extractFrameCount_","mess","resetKeepAlive","remainingData","sendString_","clearInterval","setInterval","responsesRequiredToBeHealthy","healthyTimeout","TransportManager","initTransports_","isWebSocketsAvailable","isSkipPollConnection","transports_","transports_1","ALL_TRANSPORTS","transport","initialTransport","upgradeTransport","Connection","repoInfo_","onReady_","onKill_","connectionCount","pendingDataMessages","state_","transportManager_","start_","conn","conn_","nextTransportId_","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","tx_","rx_","secondaryConn_","isHealthy_","healthyTimeout_ms","healthyTimeout_","everConnected","onConnectionLost_","onSecondaryConnectionLost_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","sendRequest","dataMsg","sendData_","tryCleanupConnection","onSecondaryControl_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","proceedWithUpgrade_","onControl_","onDataMessage_","onPrimaryResponse_","payload","onHandshake_","onConnectionShutdown_","onReset_","sendPingOnPrimaryIfNecessary_","handshake","timestamp","sessionId","onConnectionEstablished_","tryStartUpgrade_","startUpgrade_","closeConnections_","ServerActions","put","refreshAuthToken","onDisconnectPut","onDisconnectMerge","RECONNECT_MIN_DELAY","RECONNECT_MAX_DELAY_DEFAULT","PersistentConnection","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","authTokenProvider_","authOverride_","nextPersistentConnectionId_","interruptReasons_","listens_","outstandingPuts_","outstandingPutCount_","onDisconnectRequestQueue_","connected_","reconnectDelay_","maxReconnectDelay_","securityDebugCallback_","establishConnectionTimer_","requestCBHash_","requestNumber_","realtime_","authToken_","forceTokenRefresh_","invalidAuthTokenCount_","firstConnection_","lastConnectionAttemptTime_","lastConnectionEstablishedTime_","scheduleConnect_","onVisible_","onOnline_","onResponse","curReqNum","listen","currentHashFn","listenSpec","sendListen_","req","warnOnListenWarnings_","removeListen_","warnings","indexSpec","indexPath","tryAuth","reduceReconnectDelayIfAdminCredential_","credential","token_1","authMethod","requestData","cred","onAuthRevoked_","unlisten","sendUnlisten_","queryObj","sendOnDisconnect_","request","response","putInternal","sendPut_","queued","errorReason","reqNum","onDataPush_","onListenRevoked_","onSecurityDebugPacket_","handleTimestamp_","sendConnectStats_","restoreState_","establishConnection_","online","onRealtimeDisconnect_","cancelSentTransactions_","shouldReconnect_","timeSinceLastConnectAttempt","reconnectDelay","onDataMessage_1","onReady_1","onDisconnect_1","connId_1","nextConnectionId_","lastSessionId_1","canceled_1","connection_1","closeFn_1","accessToken","interrupt","serverTimeOffset","normalizedPathString","statusCode","explanation","clientName","ReadonlyRestClient","getListenId_","listenId","thisListen","queryStringParameters","toRestQueryStringParameters","restRequest_","authTokenData","authToken","xhr","XMLHttpRequest","responseText","Repo","forceRestClient","dataUpdateCount","eventQueue_","nextWriteId_","interceptServerDataCallback_","persistentConnection_","authTokenProvider","authOverride","statsReporter_","transactions_init_","infoData_","infoSyncTree_","infoEvents","updateInfo_","serverSyncTree_","serverTime","offset","generateServerValues","isMerge","taggedChildren","taggedSnap","rerunTransactions_","interceptServerData_","connectStatus","runOnDisconnectEvents_","getNextWriteId_","newNodeUnresolved","success","clearEvents","callOnCompleteCallback","abortTransactions_","childrenToMerge","empty","changedKey","changedValue","writeId_1","resolvedTree","resolveDeferredValueTree","showDelta","longestName","previousValue","currentValue","statsIncrementCounter","metric","__database","Database","RangedFilter","indexedFilter_","startPost_","getStartPost_","endPost_","getEndPost_","getStartPost","getEndPost","startName","endName","LimitedFilter","rangedFilter_","limit_","getLimit","reverse_","isViewFromLeft","fullLimitUpdateChild_","indexCompare_1","foundStartPost","changeAccumulator","indexCmp_1","newChildNamedNode","windowBoundary","inRange","oldChildSnap","compareNext","QueryParams","limitSet_","startSet_","startNameSet_","endSet_","endNameSet_","viewFrom_","indexStartValue_","indexStartName_","indexEndValue_","indexEndName_","WIRE_PROTOCOL_CONSTANTS_","VIEW_FROM_LEFT","copy_","newLimit","VIEW_FROM_RIGHT","WIRE_PROTOCOL_CONSTANTS","INDEX_START_VALUE","INDEX_START_NAME","INDEX_END_VALUE","INDEX_END_NAME","LIMIT","viewFrom","VIEW_FROM","INDEX","REST_CONSTANTS","REST_QUERY_CONSTANTS_","qs","ORDER_BY","START_AT","END_AT","LIMIT_TO_FIRST","LIMIT_TO_LAST","Reference","validateRootPathString","parentPath","getRoot","databaseProp","database","transaction","transactionUpdate","applyLocally","bool","validateBoolean","startTransaction","setPriority","thennablePushRef","pushRef","TransactionStatus","TreeNode","childCount","Tree","parent_","subTree","pathObj","setValue","updateParents_","forEachDescendant","includeSelf","childrenFirst","forEachAncestor","forEachImmediateDescendantWithValue","updateChild_","childEmpty","childExists","MAX_TRANSACTION_RETRIES_","transactionQueueTree_","valueCallback","watchRef","order","retryCount","unwatcher","abortReason","currentWriteId","currentInputSnapshot","currentOutputSnapshotRaw","currentOutputSnapshotResolved","currentState","getLatestState_","RUN","queueNode","nodeQueue","priorityForNode","sendReadyTransactions_","excludeSets","pruneCompletedTransactionsBelowNode_","buildTransactionQueue_","sendTransactionQueue_","setsToIgnore","txn","latestState","snapToSend","latestHash","SENT","dataToSend","pathToSend","COMPLETED","SENT_NEEDS_ABORT","NEEDS_ABORT","rootMostTransactionNode","getAncestorTransactionNode_","rerunTransactionQueue_","abortTransaction","currentNode","newDataNode","oldWriteId","newNodeResolved","lastInput","transactionNode","transactionQueue","aggregateTransactionQueuesForNode_","abortTransactionsOnNode_","lastSent","_staticInstance","RepoManager","repos_","useRestClient_","appName","dbUrl","databaseFromApp","createRepo","deleteRepo","appRepos","DatabaseInternals","checkDeleted_","refFromURL","apiName","parsedURL","goOffline","goOnline","ServerValue","TIMESTAMP",".sv","__awaiter","__generator","forceLongPolling","forceWebSockets","setSecurityDebugCallback","interceptServerData","DataConnection","simpleListen","echo","onEcho","RealTimeConnection","ConnectionTarget","TEST_ACCESS","hijackHash","newHash","oldPut","opt_onComplete","opt_hash","listens","firebaseRef","registerDatabase","unused","fetch","support","searchParams","iterable","blob","Blob","formData","arrayBuffer","viewClasses","isDataView","DataView","isPrototypeOf","isArrayBufferView","ArrayBuffer","isView","Headers","append","normalizeName","normalizeValue","iteratorFor","Request","_bodyInit","Body","Response","statusText","redirectStatuses","redirect","rawHeaders","getAllResponseHeaders","line","responseURL","ontimeout","credentials","withCredentials","responseType","setRequestHeader","polyfill","consumed","bodyUsed","fileReaderReady","reader","readBlobAsArrayBuffer","FileReader","readAsArrayBuffer","bufferClone","Uint8Array","byteLength","buffer","_initBody","_bodyText","_bodyBlob","FormData","_bodyFormData","URLSearchParams","_bodyArrayBuffer","readAsText","readArrayBufferAsText","upcased","referrer","form","bodyInit","ok","classof","Attributes","setTimeoutFunc","_state","_handled","_deferreds","doResolve","handle","_immediateFn","onFulfilled","onRejected","newValue","finale","_unhandledRejectionFn","prom","race","globalNS","dPs","createDict","iframeDocument","lt","bitmap","own","IS_FORCED","IS_GLOBAL","IS_STATIC","IS_PROTO","IS_BIND","expProto","U","R","ARG","tryGet","callee"],"mappings":"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","file":"static/js/vendor.06c71902d7d16685a516.js","sourcesContent":["'use strict';\n// ECMAScript 6 symbols shim\nvar global = require('./_global');\nvar has = require('./_has');\nvar DESCRIPTORS = require('./_descriptors');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar META = require('./_meta').KEY;\nvar $fails = require('./_fails');\nvar shared = require('./_shared');\nvar setToStringTag = require('./_set-to-string-tag');\nvar uid = require('./_uid');\nvar wks = require('./_wks');\nvar wksExt = require('./_wks-ext');\nvar wksDefine = require('./_wks-define');\nvar enumKeys = require('./_enum-keys');\nvar isArray = require('./_is-array');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar toIObject = require('./_to-iobject');\nvar toPrimitive = require('./_to-primitive');\nvar createDesc = require('./_property-desc');\nvar _create = require('./_object-create');\nvar gOPNExt = require('./_object-gopn-ext');\nvar $GOPD = require('./_object-gopd');\nvar $DP = require('./_object-dp');\nvar $keys = require('./_object-keys');\nvar gOPD = $GOPD.f;\nvar dP = $DP.f;\nvar gOPN = gOPNExt.f;\nvar $Symbol = global.Symbol;\nvar $JSON = global.JSON;\nvar _stringify = $JSON && $JSON.stringify;\nvar PROTOTYPE = 'prototype';\nvar HIDDEN = wks('_hidden');\nvar TO_PRIMITIVE = wks('toPrimitive');\nvar isEnum = {}.propertyIsEnumerable;\nvar SymbolRegistry = shared('symbol-registry');\nvar AllSymbols = shared('symbols');\nvar OPSymbols = shared('op-symbols');\nvar ObjectProto = Object[PROTOTYPE];\nvar USE_NATIVE = typeof $Symbol == 'function';\nvar QObject = global.QObject;\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDesc = DESCRIPTORS && $fails(function () {\n  return _create(dP({}, 'a', {\n    get: function () { return dP(this, 'a', { value: 7 }).a; }\n  })).a != 7;\n}) ? function (it, key, D) {\n  var protoDesc = gOPD(ObjectProto, key);\n  if (protoDesc) delete ObjectProto[key];\n  dP(it, key, D);\n  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);\n} : dP;\n\nvar wrap = function (tag) {\n  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);\n  sym._k = tag;\n  return sym;\n};\n\nvar isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  return it instanceof $Symbol;\n};\n\nvar $defineProperty = function defineProperty(it, key, D) {\n  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);\n  anObject(it);\n  key = toPrimitive(key, true);\n  anObject(D);\n  if (has(AllSymbols, key)) {\n    if (!D.enumerable) {\n      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));\n      it[HIDDEN][key] = true;\n    } else {\n      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;\n      D = _create(D, { enumerable: createDesc(0, false) });\n    } return setSymbolDesc(it, key, D);\n  } return dP(it, key, D);\n};\nvar $defineProperties = function defineProperties(it, P) {\n  anObject(it);\n  var keys = enumKeys(P = toIObject(P));\n  var i = 0;\n  var l = keys.length;\n  var key;\n  while (l > i) $defineProperty(it, key = keys[i++], P[key]);\n  return it;\n};\nvar $create = function create(it, P) {\n  return P === undefined ? _create(it) : $defineProperties(_create(it), P);\n};\nvar $propertyIsEnumerable = function propertyIsEnumerable(key) {\n  var E = isEnum.call(this, key = toPrimitive(key, true));\n  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;\n  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;\n};\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {\n  it = toIObject(it);\n  key = toPrimitive(key, true);\n  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;\n  var D = gOPD(it, key);\n  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;\n  return D;\n};\nvar $getOwnPropertyNames = function getOwnPropertyNames(it) {\n  var names = gOPN(toIObject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);\n  } return result;\n};\nvar $getOwnPropertySymbols = function getOwnPropertySymbols(it) {\n  var IS_OP = it === ObjectProto;\n  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);\n  } return result;\n};\n\n// 19.4.1.1 Symbol([description])\nif (!USE_NATIVE) {\n  $Symbol = function Symbol() {\n    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');\n    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);\n    var $set = function (value) {\n      if (this === ObjectProto) $set.call(OPSymbols, value);\n      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;\n      setSymbolDesc(this, tag, createDesc(1, value));\n    };\n    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });\n    return wrap(tag);\n  };\n  redefine($Symbol[PROTOTYPE], 'toString', function toString() {\n    return this._k;\n  });\n\n  $GOPD.f = $getOwnPropertyDescriptor;\n  $DP.f = $defineProperty;\n  require('./_object-gopn').f = gOPNExt.f = $getOwnPropertyNames;\n  require('./_object-pie').f = $propertyIsEnumerable;\n  require('./_object-gops').f = $getOwnPropertySymbols;\n\n  if (DESCRIPTORS && !require('./_library')) {\n    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);\n  }\n\n  wksExt.f = function (name) {\n    return wrap(wks(name));\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });\n\nfor (var es6Symbols = (\n  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14\n  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'\n).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);\n\nfor (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);\n\n$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {\n  // 19.4.2.1 Symbol.for(key)\n  'for': function (key) {\n    return has(SymbolRegistry, key += '')\n      ? SymbolRegistry[key]\n      : SymbolRegistry[key] = $Symbol(key);\n  },\n  // 19.4.2.5 Symbol.keyFor(sym)\n  keyFor: function keyFor(sym) {\n    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');\n    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;\n  },\n  useSetter: function () { setter = true; },\n  useSimple: function () { setter = false; }\n});\n\n$export($export.S + $export.F * !USE_NATIVE, 'Object', {\n  // 19.1.2.2 Object.create(O [, Properties])\n  create: $create,\n  // 19.1.2.4 Object.defineProperty(O, P, Attributes)\n  defineProperty: $defineProperty,\n  // 19.1.2.3 Object.defineProperties(O, Properties)\n  defineProperties: $defineProperties,\n  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,\n  // 19.1.2.7 Object.getOwnPropertyNames(O)\n  getOwnPropertyNames: $getOwnPropertyNames,\n  // 19.1.2.8 Object.getOwnPropertySymbols(O)\n  getOwnPropertySymbols: $getOwnPropertySymbols\n});\n\n// 24.3.2 JSON.stringify(value [, replacer [, space]])\n$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {\n  var S = $Symbol();\n  // MS Edge converts symbol values to JSON as {}\n  // WebKit converts symbol values to JSON as null\n  // V8 throws on boxed symbols\n  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';\n})), 'JSON', {\n  stringify: function stringify(it) {\n    var args = [it];\n    var i = 1;\n    var replacer, $replacer;\n    while (arguments.length > i) args.push(arguments[i++]);\n    $replacer = replacer = args[1];\n    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined\n    if (!isArray(replacer)) replacer = function (key, value) {\n      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);\n      if (!isSymbol(value)) return value;\n    };\n    args[1] = replacer;\n    return _stringify.apply($JSON, args);\n  }\n});\n\n// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)\n$Symbol[PROTOTYPE][TO_PRIMITIVE] || require('./_hide')($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);\n// 19.4.3.5 Symbol.prototype[@@toStringTag]\nsetToStringTag($Symbol, 'Symbol');\n// 20.2.1.9 Math[@@toStringTag]\nsetToStringTag(Math, 'Math', true);\n// 24.3.3 JSON[@@toStringTag]\nsetToStringTag(global.JSON, 'JSON', true);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/es6.symbol.js\n// module id = +vQ7\n// module chunks = 0","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = require('./_object-keys-internal');\nvar enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/_object-keys.js\n// module id = /9ax\n// module chunks = 0","'use strict';\nvar LIBRARY = require('./_library');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar $iterCreate = require('./_iter-create');\nvar setToStringTag = require('./_set-to-string-tag');\nvar getPrototypeOf = require('./_object-gpo');\nvar ITERATOR = require('./_wks')('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/_iter-define.js\n// module id = /F6Q\n// module chunks = 0","var store = require('./_shared')('wks');\nvar uid = require('./_uid');\nvar Symbol = require('./_global').Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/_wks.js\n// module id = /P5o\n// module chunks = 0","var global = require('./_global');\nvar core = require('./_core');\nvar LIBRARY = require('./_library');\nvar wksExt = require('./_wks-ext');\nvar defineProperty = require('./_object-dp').f;\nmodule.exports = function (name) {\n  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});\n  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/_wks-define.js\n// module id = 0CX4\n// module chunks = 0","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/_cof.js\n// module id = 0UGS\n// module chunks = 0","var dP = require('./_object-dp');\nvar anObject = require('./_an-object');\nvar getKeys = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/_object-dps.js\n// module id = 2Q0t\n// module chunks = 0","var def = require('./_object-dp').f;\nvar has = require('./_has');\nvar TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/_set-to-string-tag.js\n// module id = 2ee7\n// module chunks = 0","require('../../modules/es6.object.assign');\nmodule.exports = require('../../modules/_core').Object.assign;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/fn/object/assign.js\n// module id = 2oDD\n// module chunks = 0","var has = require('./_has');\nvar toIObject = require('./_to-iobject');\nvar arrayIndexOf = require('./_array-includes')(false);\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/_object-keys-internal.js\n// module id = 4Blm\n// module chunks = 0","// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/_to-integer.js\n// module id = 4s2u\n// module chunks = 0","var toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/_string-at.js\n// module id = 5UxM\n// module chunks = 0","require('./_wks-define')('observable');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/es7.symbol.observable.js\n// module id = 6+UF\n// module chunks = 0","/*!\n * Vue.js v2.6.8\n * (c) 2014-2019 Evan You\n * Released under the MIT License.\n */\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n// These helpers produce better VM code in JS engines due to their\n// explicitness and function inlining.\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n\n/**\n * Check if value is primitive.\n */\nfunction isPrimitive (value) {\n  return (\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    // $flow-disable-line\n    typeof value === 'symbol' ||\n    typeof value === 'boolean'\n  )\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Get the raw type string of a value, e.g., [object Object].\n */\nvar _toString = Object.prototype.toString;\n\nfunction toRawType (value) {\n  return _toString.call(value).slice(8, -1)\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Check if val is a valid array index.\n */\nfunction isValidArrayIndex (val) {\n  var n = parseFloat(String(val));\n  return n >= 0 && Math.floor(n) === n && isFinite(val)\n}\n\nfunction isPromise (val) {\n  return (\n    isDef(val) &&\n    typeof val.then === 'function' &&\n    typeof val.catch === 'function'\n  )\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : Array.isArray(val) || (isPlainObject(val) && val.toString === _toString)\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert an input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Check if an attribute is a reserved attribute.\n */\nvar isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');\n\n/**\n * Remove an item from an array.\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether an object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /\\B([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str.replace(hyphenateRE, '-$1').toLowerCase()\n});\n\n/**\n * Simple bind polyfill for environments that do not support it,\n * e.g., PhantomJS 1.x. Technically, we don't need this anymore\n * since native bind is now performant enough in most browsers.\n * But removing it would mean breaking code that was able to run in\n * PhantomJS 1.x, so this must be kept for backward compatibility.\n */\n\n/* istanbul ignore next */\nfunction polyfillBind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n\n  boundFn._length = fn.length;\n  return boundFn\n}\n\nfunction nativeBind (fn, ctx) {\n  return fn.bind(ctx)\n}\n\nvar bind = Function.prototype.bind\n  ? nativeBind\n  : polyfillBind;\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/* eslint-disable no-unused-vars */\n\n/**\n * Perform no operation.\n * Stubbing args to make Flow happy without leaving useless transpiled code\n * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/).\n */\nfunction noop (a, b, c) {}\n\n/**\n * Always return false.\n */\nvar no = function (a, b, c) { return false; };\n\n/* eslint-enable no-unused-vars */\n\n/**\n * Return the same value.\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a string containing static keys from compiler modules.\n */\nfunction genStaticKeys (modules) {\n  return modules.reduce(function (keys, m) {\n    return keys.concat(m.staticKeys || [])\n  }, []).join(',')\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  if (a === b) { return true }\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      var isArrayA = Array.isArray(a);\n      var isArrayB = Array.isArray(b);\n      if (isArrayA && isArrayB) {\n        return a.length === b.length && a.every(function (e, i) {\n          return looseEqual(e, b[i])\n        })\n      } else if (a instanceof Date && b instanceof Date) {\n        return a.getTime() === b.getTime()\n      } else if (!isArrayA && !isArrayB) {\n        var keysA = Object.keys(a);\n        var keysB = Object.keys(b);\n        return keysA.length === keysB.length && keysA.every(function (key) {\n          return looseEqual(a[key], b[key])\n        })\n      } else {\n        /* istanbul ignore next */\n        return false\n      }\n    } catch (e) {\n      /* istanbul ignore next */\n      return false\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\n/**\n * Return the first index at which a loosely equal value can be\n * found in the array (if value is a plain object, the array must\n * contain an object of the same shape), or -1 if it is not present.\n */\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar SSR_ATTR = 'data-server-rendered';\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated',\n  'errorCaptured',\n  'serverPrefetch'\n];\n\n/*  */\n\n\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  // $flow-disable-line\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Warn handler for watcher warns\n   */\n  warnHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  // $flow-disable-line\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Perform updates asynchronously. Intended to be used by Vue Test Utils\n   * This will significantly reduce performance if set to false.\n   */\n  async: true,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n});\n\n/*  */\n\n/**\n * unicode letters used for parsing html tags, component names and property paths.\n * using https://www.w3.org/TR/html53/semantics-scripting.html#potentialcustomelementname\n * skipping \\u10000-\\uEFFFF due to it freezing up PhantomJS\n */\nvar unicodeRegExp = /a-zA-Z\\u00B7\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u203F-\\u2040\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD/;\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = new RegExp((\"[^\" + (unicodeRegExp.source) + \".$_\\\\d]\"));\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;\nvar weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');\nvar isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\nvar isPhantomJS = UA && /phantomjs/.test(UA);\nvar isFF = UA && UA.match(/firefox\\/(\\d+)/);\n\n// Firefox has a \"watch\" function on Object.prototype...\nvar nativeWatch = ({}).watch;\n\nvar supportsPassive = false;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n        /* istanbul ignore next */\n        supportsPassive = true;\n      }\n    })); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && !inWeex && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'] && global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\nvar _Set;\n/* istanbul ignore if */ // $flow-disable-line\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = /*@__PURE__*/(function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = noop;\nvar generateComponentTrace = (noop); // work around flow check\nvar formatComponentName = (noop);\n\nif (process.env.NODE_ENV !== 'production') {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    var trace = vm ? generateComponentTrace(vm) : '';\n\n    if (config.warnHandler) {\n      config.warnHandler.call(null, msg, vm, trace);\n    } else if (hasConsole && (!config.silent)) {\n      console.error((\"[Vue warn]: \" + msg + trace));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var options = typeof vm === 'function' && vm.cid != null\n      ? vm.options\n      : vm._isVue\n        ? vm.$options || vm.constructor.options\n        : vm;\n    var name = options.name || options._componentTag;\n    var file = options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n    while (n) {\n      if (n % 2 === 1) { res += str; }\n      if (n > 1) { str += str; }\n      n >>= 1;\n    }\n    return res\n  };\n\n  generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n            ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n            : formatComponentName(vm))); })\n        .join('\\n')\n    } else {\n      return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n    }\n  };\n}\n\n/*  */\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  if (process.env.NODE_ENV !== 'production' && !config.async) {\n    // subs aren't sorted in scheduler if not running async\n    // we need to sort them now to make sure they fire in correct\n    // order\n    subs.sort(function (a, b) { return a.id - b.id; });\n  }\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// The current target watcher being evaluated.\n// This is globally unique because only one watcher\n// can be evaluated at a time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (target) {\n  targetStack.push(target);\n  Dep.target = target;\n}\n\nfunction popTarget () {\n  targetStack.pop();\n  Dep.target = targetStack[targetStack.length - 1];\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions,\n  asyncFactory\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.fnContext = undefined;\n  this.fnOptions = undefined;\n  this.fnScopeId = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n  this.asyncFactory = asyncFactory;\n  this.asyncMeta = undefined;\n  this.isAsyncPlaceholder = false;\n};\n\nvar prototypeAccessors = { child: { configurable: true } };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function (text) {\n  if ( text === void 0 ) text = '';\n\n  var node = new VNode();\n  node.text = text;\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    // #7975\n    // clone children array to avoid mutating original in case of cloning\n    // a child.\n    vnode.children && vnode.children.slice(),\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions,\n    vnode.asyncFactory\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.fnContext = vnode.fnContext;\n  cloned.fnOptions = vnode.fnOptions;\n  cloned.fnScopeId = vnode.fnScopeId;\n  cloned.asyncMeta = vnode.asyncMeta;\n  cloned.isCloned = true;\n  return cloned\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);\n\nvar methodsToPatch = [\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n];\n\n/**\n * Intercept mutating methods and emit events\n */\nmethodsToPatch.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * In some cases we may want to disable observation inside a component's\n * update computation.\n */\nvar shouldObserve = true;\n\nfunction toggleObserving (value) {\n  shouldObserve = value;\n}\n\n/**\n * Observer class that is attached to each observed\n * object. Once attached, the observer converts the target\n * object's property keys into getter/setters that\n * collect dependencies and dispatch updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    if (hasProto) {\n      protoAugment(value, arrayMethods);\n    } else {\n      copyAugment(value, arrayMethods, arrayKeys);\n    }\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through all properties and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive$$1(obj, keys[i]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment a target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment a target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value) || value instanceof VNode) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    shouldObserve &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive$$1 (\n  obj,\n  key,\n  val,\n  customSetter,\n  shallow\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n  if ((!getter || setter) && arguments.length === 2) {\n    val = obj[key];\n  }\n\n  var childOb = !shallow && observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n          if (Array.isArray(value)) {\n            dependArray(value);\n          }\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (process.env.NODE_ENV !== 'production' && customSetter) {\n        customSetter();\n      }\n      // #7981: for accessor properties without setter\n      if (getter && !setter) { return }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = !shallow && observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (process.env.NODE_ENV !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot set reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (key in target && !(key in Object.prototype)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive$$1(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (process.env.NODE_ENV !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot delete reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (process.env.NODE_ENV !== 'production') {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n\n  var keys = hasSymbol\n    ? Reflect.ownKeys(from)\n    : Object.keys(from);\n\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    // in case the object is already observed...\n    if (key === '__ob__') { continue }\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (\n      toVal !== fromVal &&\n      isPlainObject(toVal) &&\n      isPlainObject(fromVal)\n    ) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nfunction mergeDataOrFn (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        typeof childVal === 'function' ? childVal.call(this, this) : childVal,\n        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal\n      )\n    }\n  } else {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm, vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm, vm)\n        : parentVal;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n}\n\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    if (childVal && typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n\n      return parentVal\n    }\n    return mergeDataOrFn(parentVal, childVal)\n  }\n\n  return mergeDataOrFn(parentVal, childVal, vm)\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  var res = childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal;\n  return res\n    ? dedupeHooks(res)\n    : res\n}\n\nfunction dedupeHooks (hooks) {\n  var res = [];\n  for (var i = 0; i < hooks.length; i++) {\n    if (res.indexOf(hooks[i]) === -1) {\n      res.push(hooks[i]);\n    }\n  }\n  return res\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  var res = Object.create(parentVal || null);\n  if (childVal) {\n    process.env.NODE_ENV !== 'production' && assertObjectType(key, childVal, vm);\n    return extend(res, childVal)\n  } else {\n    return res\n  }\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  // work around Firefox's Object.prototype.watch...\n  if (parentVal === nativeWatch) { parentVal = undefined; }\n  if (childVal === nativeWatch) { childVal = undefined; }\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key$1 in childVal) {\n    var parent = ret[key$1];\n    var child = childVal[key$1];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key$1] = parent\n      ? parent.concat(child)\n      : Array.isArray(child) ? child : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.inject =\nstrats.computed = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  if (childVal && process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  if (childVal) { extend(ret, childVal); }\n  return ret\n};\nstrats.provide = mergeDataOrFn;\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    validateComponentName(key);\n  }\n}\n\nfunction validateComponentName (name) {\n  if (!new RegExp((\"^[a-zA-Z][\\\\-\\\\.0-9_\" + (unicodeRegExp.source) + \"]*$\")).test(name)) {\n    warn(\n      'Invalid component name: \"' + name + '\". Component names ' +\n      'should conform to valid custom element name in html5 specification.'\n    );\n  }\n  if (isBuiltInTag(name) || config.isReservedTag(name)) {\n    warn(\n      'Do not use built-in or reserved HTML elements as component ' +\n      'id: ' + name\n    );\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options, vm) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      \"Invalid value for option \\\"props\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(props)) + \".\",\n      vm\n    );\n  }\n  options.props = res;\n}\n\n/**\n * Normalize all injections into Object-based format\n */\nfunction normalizeInject (options, vm) {\n  var inject = options.inject;\n  if (!inject) { return }\n  var normalized = options.inject = {};\n  if (Array.isArray(inject)) {\n    for (var i = 0; i < inject.length; i++) {\n      normalized[inject[i]] = { from: inject[i] };\n    }\n  } else if (isPlainObject(inject)) {\n    for (var key in inject) {\n      var val = inject[key];\n      normalized[key] = isPlainObject(val)\n        ? extend({ from: key }, val)\n        : { from: val };\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      \"Invalid value for option \\\"inject\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(inject)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def$$1 = dirs[key];\n      if (typeof def$$1 === 'function') {\n        dirs[key] = { bind: def$$1, update: def$$1 };\n      }\n    }\n  }\n}\n\nfunction assertObjectType (name, value, vm) {\n  if (!isPlainObject(value)) {\n    warn(\n      \"Invalid value for option \\\"\" + name + \"\\\": expected an Object, \" +\n      \"but got \" + (toRawType(value)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child, vm);\n  normalizeInject(child, vm);\n  normalizeDirectives(child);\n\n  // Apply extends and mixins on the child options,\n  // but only if it is a raw options object that isn't\n  // the result of another mergeOptions call.\n  // Only merged options has the _base property.\n  if (!child._base) {\n    if (child.extends) {\n      parent = mergeOptions(parent, child.extends, vm);\n    }\n    if (child.mixins) {\n      for (var i = 0, l = child.mixins.length; i < l; i++) {\n        parent = mergeOptions(parent, child.mixins[i], vm);\n      }\n    }\n  }\n\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\n\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // boolean casting\n  var booleanIndex = getTypeIndex(Boolean, prop.type);\n  if (booleanIndex > -1) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (value === '' || value === hyphenate(key)) {\n      // only cast empty string / same name to boolean if\n      // boolean has higher priority\n      var stringIndex = getTypeIndex(String, prop.type);\n      if (stringIndex < 0 || booleanIndex < stringIndex) {\n        value = true;\n      }\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldObserve = shouldObserve;\n    toggleObserving(true);\n    observe(value);\n    toggleObserving(prevShouldObserve);\n  }\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    // skip validation for weex recycle-list child component props\n    !(false)\n  ) {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (process.env.NODE_ENV !== 'production' && isObject(def)) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n\n  if (!valid) {\n    warn(\n      getInvalidTypeMessage(name, value, expectedTypes),\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;\n\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    var t = typeof value;\n    valid = t === expectedType.toLowerCase();\n    // for primitive wrapper objects\n    if (!valid && t === 'object') {\n      valid = value instanceof type;\n    }\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : ''\n}\n\nfunction isSameType (a, b) {\n  return getType(a) === getType(b)\n}\n\nfunction getTypeIndex (type, expectedTypes) {\n  if (!Array.isArray(expectedTypes)) {\n    return isSameType(expectedTypes, type) ? 0 : -1\n  }\n  for (var i = 0, len = expectedTypes.length; i < len; i++) {\n    if (isSameType(expectedTypes[i], type)) {\n      return i\n    }\n  }\n  return -1\n}\n\nfunction getInvalidTypeMessage (name, value, expectedTypes) {\n  var message = \"Invalid prop: type check failed for prop \\\"\" + name + \"\\\".\" +\n    \" Expected \" + (expectedTypes.map(capitalize).join(', '));\n  var expectedType = expectedTypes[0];\n  var receivedType = toRawType(value);\n  var expectedValue = styleValue(value, expectedType);\n  var receivedValue = styleValue(value, receivedType);\n  // check if we need to specify expected value\n  if (expectedTypes.length === 1 &&\n      isExplicable(expectedType) &&\n      !isBoolean(expectedType, receivedType)) {\n    message += \" with value \" + expectedValue;\n  }\n  message += \", got \" + receivedType + \" \";\n  // check if we need to specify received value\n  if (isExplicable(receivedType)) {\n    message += \"with value \" + receivedValue + \".\";\n  }\n  return message\n}\n\nfunction styleValue (value, type) {\n  if (type === 'String') {\n    return (\"\\\"\" + value + \"\\\"\")\n  } else if (type === 'Number') {\n    return (\"\" + (Number(value)))\n  } else {\n    return (\"\" + value)\n  }\n}\n\nfunction isExplicable (value) {\n  var explicitTypes = ['string', 'number', 'boolean'];\n  return explicitTypes.some(function (elem) { return value.toLowerCase() === elem; })\n}\n\nfunction isBoolean () {\n  var args = [], len = arguments.length;\n  while ( len-- ) args[ len ] = arguments[ len ];\n\n  return args.some(function (elem) { return elem.toLowerCase() === 'boolean'; })\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  // Deactivate deps tracking while processing error handler to avoid possible infinite rendering.\n  // See: https://github.com/vuejs/vuex/issues/1505\n  pushTarget();\n  try {\n    if (vm) {\n      var cur = vm;\n      while ((cur = cur.$parent)) {\n        var hooks = cur.$options.errorCaptured;\n        if (hooks) {\n          for (var i = 0; i < hooks.length; i++) {\n            try {\n              var capture = hooks[i].call(cur, err, vm, info) === false;\n              if (capture) { return }\n            } catch (e) {\n              globalHandleError(e, cur, 'errorCaptured hook');\n            }\n          }\n        }\n      }\n    }\n    globalHandleError(err, vm, info);\n  } finally {\n    popTarget();\n  }\n}\n\nfunction invokeWithErrorHandling (\n  handler,\n  context,\n  args,\n  vm,\n  info\n) {\n  var res;\n  try {\n    res = args ? handler.apply(context, args) : handler.call(context);\n    if (res && !res._isVue && isPromise(res)) {\n      // issue #9511\n      // reassign to res to avoid catch triggering multiple times when nested calls\n      res = res.catch(function (e) { return handleError(e, vm, info + \" (Promise/async)\"); });\n    }\n  } catch (e) {\n    handleError(e, vm, info);\n  }\n  return res\n}\n\nfunction globalHandleError (err, vm, info) {\n  if (config.errorHandler) {\n    try {\n      return config.errorHandler.call(null, err, vm, info)\n    } catch (e) {\n      // if the user intentionally throws the original error in the handler,\n      // do not log it twice\n      if (e !== err) {\n        logError(e, null, 'config.errorHandler');\n      }\n    }\n  }\n  logError(err, vm, info);\n}\n\nfunction logError (err, vm, info) {\n  if (process.env.NODE_ENV !== 'production') {\n    warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n  }\n  /* istanbul ignore else */\n  if ((inBrowser || inWeex) && typeof console !== 'undefined') {\n    console.error(err);\n  } else {\n    throw err\n  }\n}\n\n/*  */\n\nvar isUsingMicroTask = false;\n\nvar callbacks = [];\nvar pending = false;\n\nfunction flushCallbacks () {\n  pending = false;\n  var copies = callbacks.slice(0);\n  callbacks.length = 0;\n  for (var i = 0; i < copies.length; i++) {\n    copies[i]();\n  }\n}\n\n// Here we have async deferring wrappers using microtasks.\n// In 2.5 we used (macro) tasks (in combination with microtasks).\n// However, it has subtle problems when state is changed right before repaint\n// (e.g. #6813, out-in transitions).\n// Also, using (macro) tasks in event handler would cause some weird behaviors\n// that cannot be circumvented (e.g. #7109, #7153, #7546, #7834, #8109).\n// So we now use microtasks everywhere, again.\n// A major drawback of this tradeoff is that there are some scenarios\n// where microtasks have too high a priority and fire in between supposedly\n// sequential events (e.g. #4521, #6690, which have workarounds)\n// or even between bubbling of the same event (#6566).\nvar timerFunc;\n\n// The nextTick behavior leverages the microtask queue, which can be accessed\n// via either native Promise.then or MutationObserver.\n// MutationObserver has wider support, however it is seriously bugged in\n// UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n// completely stops working after triggering a few times... so, if native\n// Promise is available, we will use it:\n/* istanbul ignore next, $flow-disable-line */\nif (typeof Promise !== 'undefined' && isNative(Promise)) {\n  var p = Promise.resolve();\n  timerFunc = function () {\n    p.then(flushCallbacks);\n    // In problematic UIWebViews, Promise.then doesn't completely break, but\n    // it can get stuck in a weird state where callbacks are pushed into the\n    // microtask queue but the queue isn't being flushed, until the browser\n    // needs to do some other work, e.g. handle a timer. Therefore we can\n    // \"force\" the microtask queue to be flushed by adding an empty timer.\n    if (isIOS) { setTimeout(noop); }\n  };\n  isUsingMicroTask = true;\n} else if (!isIE && typeof MutationObserver !== 'undefined' && (\n  isNative(MutationObserver) ||\n  // PhantomJS and iOS 7.x\n  MutationObserver.toString() === '[object MutationObserverConstructor]'\n)) {\n  // Use MutationObserver where native Promise is not available,\n  // e.g. PhantomJS, iOS7, Android 4.4\n  // (#6466 MutationObserver is unreliable in IE11)\n  var counter = 1;\n  var observer = new MutationObserver(flushCallbacks);\n  var textNode = document.createTextNode(String(counter));\n  observer.observe(textNode, {\n    characterData: true\n  });\n  timerFunc = function () {\n    counter = (counter + 1) % 2;\n    textNode.data = String(counter);\n  };\n  isUsingMicroTask = true;\n} else if (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {\n  // Fallback to setImmediate.\n  // Techinically it leverages the (macro) task queue,\n  // but it is still a better choice than setTimeout.\n  timerFunc = function () {\n    setImmediate(flushCallbacks);\n  };\n} else {\n  // Fallback to setTimeout.\n  timerFunc = function () {\n    setTimeout(flushCallbacks, 0);\n  };\n}\n\nfunction nextTick (cb, ctx) {\n  var _resolve;\n  callbacks.push(function () {\n    if (cb) {\n      try {\n        cb.call(ctx);\n      } catch (e) {\n        handleError(e, ctx, 'nextTick');\n      }\n    } else if (_resolve) {\n      _resolve(ctx);\n    }\n  });\n  if (!pending) {\n    pending = true;\n    timerFunc();\n  }\n  // $flow-disable-line\n  if (!cb && typeof Promise !== 'undefined') {\n    return new Promise(function (resolve) {\n      _resolve = resolve;\n    })\n  }\n}\n\n/*  */\n\nvar mark;\nvar measure;\n\nif (process.env.NODE_ENV !== 'production') {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      // perf.clearMeasures(name)\n    };\n  }\n}\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (process.env.NODE_ENV !== 'production') {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      'referenced during render. Make sure that this property is reactive, ' +\n      'either in the data option, or for class-based components, by ' +\n      'initializing the property. ' +\n      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',\n      target\n    );\n  };\n\n  var warnReservedPrefix = function (target, key) {\n    warn(\n      \"Property \\\"\" + key + \"\\\" must be accessed with \\\"$data.\" + key + \"\\\" because \" +\n      'properties starting with \"$\" or \"_\" are not proxied in the Vue instance to ' +\n      'prevent conflicts with Vue internals' +\n      'See: https://vuejs.org/v2/api/#data',\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' && isNative(Proxy);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) ||\n        (typeof key === 'string' && key.charAt(0) === '_' && !(key in target.$data));\n      if (!has && !isAllowed) {\n        if (key in target.$data) { warnReservedPrefix(target, key); }\n        else { warnNonPresent(target, key); }\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        if (key in target.$data) { warnReservedPrefix(target, key); }\n        else { warnNonPresent(target, key); }\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar seenObjects = new _Set();\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nfunction traverse (val) {\n  _traverse(val, seenObjects);\n  seenObjects.clear();\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns, vm) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      var cloned = fns.slice();\n      for (var i = 0; i < cloned.length; i++) {\n        invokeWithErrorHandling(cloned[i], null, arguments$1, vm, \"v-on handler\");\n      }\n    } else {\n      // return handler return value for single handlers\n      return invokeWithErrorHandling(fns, null, arguments, vm, \"v-on handler\")\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  createOnceHandler,\n  vm\n) {\n  var name, def$$1, cur, old, event;\n  for (name in on) {\n    def$$1 = cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    if (isUndef(cur)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur, vm);\n      }\n      if (isTrue(event.once)) {\n        cur = on[name] = createOnceHandler(event.name, cur, event.capture);\n      }\n      add(event.name, cur, event.capture, event.passive, event.params);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  if (def instanceof VNode) {\n    def = def.data.hook || (def.data.hook = {});\n  }\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (isUndef(oldHook)) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (process.env.NODE_ENV !== 'production') {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, lastIndex, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    lastIndex = res.length - 1;\n    last = res[lastIndex];\n    //  nested\n    if (Array.isArray(c)) {\n      if (c.length > 0) {\n        c = normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i));\n        // merge adjacent text nodes\n        if (isTextNode(c[0]) && isTextNode(last)) {\n          res[lastIndex] = createTextVNode(last.text + (c[0]).text);\n          c.shift();\n        }\n        res.push.apply(res, c);\n      }\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        res[lastIndex] = createTextVNode(last.text + c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[lastIndex] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    toggleObserving(false);\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        defineReactive$$1(vm, key, result[key], function () {\n          warn(\n            \"Avoid mutating an injected value directly since the changes will be \" +\n            \"overwritten whenever the provided component re-renders. \" +\n            \"injection being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        });\n      } else {\n        defineReactive$$1(vm, key, result[key]);\n      }\n    });\n    toggleObserving(true);\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    var result = Object.create(null);\n    var keys = hasSymbol\n      ? Reflect.ownKeys(inject)\n      : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      // #6574 in case the inject object is observed...\n      if (key === '__ob__') { continue }\n      var provideKey = inject[key].from;\n      var source = vm;\n      while (source) {\n        if (source._provided && hasOwn(source._provided, provideKey)) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n      if (!source) {\n        if ('default' in inject[key]) {\n          var provideDefault = inject[key].default;\n          result[key] = typeof provideDefault === 'function'\n            ? provideDefault.call(vm)\n            : provideDefault;\n        } else if (process.env.NODE_ENV !== 'production') {\n          warn((\"Injection \\\"\" + key + \"\\\" not found\"), vm);\n        }\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\n\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  if (!children || !children.length) {\n    return {}\n  }\n  var slots = {};\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    var data = child.data;\n    // remove slot attribute if the node is resolved as a Vue slot node\n    if (data && data.attrs && data.attrs.slot) {\n      delete data.attrs.slot;\n    }\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.fnContext === context) &&\n      data && data.slot != null\n    ) {\n      var name = data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children || []);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      (slots.default || (slots.default = [])).push(child);\n    }\n  }\n  // ignore slots that contains only whitespace\n  for (var name$1 in slots) {\n    if (slots[name$1].every(isWhitespace)) {\n      delete slots[name$1];\n    }\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return (node.isComment && !node.asyncFactory) || node.text === ' '\n}\n\n/*  */\n\nfunction normalizeScopedSlots (\n  slots,\n  normalSlots,\n  prevSlots\n) {\n  var res;\n  var isStable = slots ? !!slots.$stable : true;\n  var key = slots && slots.$key;\n  if (!slots) {\n    res = {};\n  } else if (slots._normalized) {\n    // fast path 1: child component re-render only, parent did not change\n    return slots._normalized\n  } else if (\n    isStable &&\n    prevSlots &&\n    prevSlots !== emptyObject &&\n    key === prevSlots.$key &&\n    Object.keys(normalSlots).length === 0\n  ) {\n    // fast path 2: stable scoped slots w/ no normal slots to proxy,\n    // only need to normalize once\n    return prevSlots\n  } else {\n    res = {};\n    for (var key$1 in slots) {\n      if (slots[key$1] && key$1[0] !== '$') {\n        res[key$1] = normalizeScopedSlot(normalSlots, key$1, slots[key$1]);\n      }\n    }\n  }\n  // expose normal slots on scopedSlots\n  for (var key$2 in normalSlots) {\n    if (!(key$2 in res)) {\n      res[key$2] = proxyNormalSlot(normalSlots, key$2);\n    }\n  }\n  // avoriaz seems to mock a non-extensible $scopedSlots object\n  // and when that is passed down this would cause an error\n  if (slots && Object.isExtensible(slots)) {\n    (slots)._normalized = res;\n  }\n  def(res, '$stable', isStable);\n  def(res, '$key', key);\n  return res\n}\n\nfunction normalizeScopedSlot(normalSlots, key, fn) {\n  var normalized = function () {\n    var res = arguments.length ? fn.apply(null, arguments) : fn({});\n    res = res && typeof res === 'object' && !Array.isArray(res)\n      ? [res] // single vnode\n      : normalizeChildren(res);\n    return res && res.length === 0\n      ? undefined\n      : res\n  };\n  // this is a slot using the new v-slot syntax without scope. although it is\n  // compiled as a scoped slot, render fn users would expect it to be present\n  // on this.$slots because the usage is semantically a normal slot.\n  if (fn.proxy) {\n    Object.defineProperty(normalSlots, key, {\n      get: normalized,\n      enumerable: true,\n      configurable: true\n    });\n  }\n  return normalized\n}\n\nfunction proxyNormalSlot(slots, key) {\n  return function () { return slots[key]; }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    if (hasSymbol && val[Symbol.iterator]) {\n      ret = [];\n      var iterator = val[Symbol.iterator]();\n      var result = iterator.next();\n      while (!result.done) {\n        ret.push(render(result.value, ret.length));\n        result = iterator.next();\n      }\n    } else {\n      keys = Object.keys(val);\n      ret = new Array(keys.length);\n      for (i = 0, l = keys.length; i < l; i++) {\n        key = keys[i];\n        ret[i] = render(val[key], key, i);\n      }\n    }\n  }\n  if (!isDef(ret)) {\n    ret = [];\n  }\n  (ret)._isVList = true;\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  var nodes;\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      if (process.env.NODE_ENV !== 'production' && !isObject(bindObject)) {\n        warn(\n          'slot v-bind without argument expects an Object',\n          this\n        );\n      }\n      props = extend(extend({}, bindObject), props);\n    }\n    nodes = scopedSlotFn(props) || fallback;\n  } else {\n    nodes = this.$slots[name] || fallback;\n  }\n\n  var target = props && props.slot;\n  if (target) {\n    return this.$createElement('template', { slot: target }, nodes)\n  } else {\n    return nodes\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\nfunction isKeyNotMatch (expect, actual) {\n  if (Array.isArray(expect)) {\n    return expect.indexOf(actual) === -1\n  } else {\n    return expect !== actual\n  }\n}\n\n/**\n * Runtime helper for checking keyCodes from config.\n * exposed as Vue.prototype._k\n * passing in eventKeyName as last argument separately for backwards compat\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInKeyCode,\n  eventKeyName,\n  builtInKeyName\n) {\n  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;\n  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {\n    return isKeyNotMatch(builtInKeyName, eventKeyName)\n  } else if (mappedKeyCode) {\n    return isKeyNotMatch(mappedKeyCode, eventKeyCode)\n  } else if (eventKeyName) {\n    return hyphenate(eventKeyName) !== key\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp,\n  isSync\n) {\n  if (value) {\n    if (!isObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      var loop = function ( key ) {\n        if (\n          key === 'class' ||\n          key === 'style' ||\n          isReservedAttribute(key)\n        ) {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        var camelizedKey = camelize(key);\n        if (!(key in hash) && !(camelizedKey in hash)) {\n          hash[key] = value[key];\n\n          if (isSync) {\n            var on = data.on || (data.on = {});\n            on[(\"update:\" + camelizedKey)] = function ($event) {\n              value[key] = $event;\n            };\n          }\n        }\n      };\n\n      for (var key in value) loop( key );\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var cached = this._staticTrees || (this._staticTrees = []);\n  var tree = cached[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree.\n  if (tree && !isInFor) {\n    return tree\n  }\n  // otherwise, render a fresh tree.\n  tree = cached[index] = this.$options.staticRenderFns[index].call(\n    this._renderProxy,\n    null,\n    this // for render fns generated for functional component templates\n  );\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction bindObjectListeners (data, value) {\n  if (value) {\n    if (!isPlainObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-on without argument expects an Object value',\n        this\n      );\n    } else {\n      var on = data.on = data.on ? extend({}, data.on) : {};\n      for (var key in value) {\n        var existing = on[key];\n        var ours = value[key];\n        on[key] = existing ? [].concat(existing, ours) : ours;\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  res,\n  // the following are added in 2.6\n  hasDynamicKeys,\n  contentHashKey\n) {\n  res = res || { $stable: !hasDynamicKeys };\n  for (var i = 0; i < fns.length; i++) {\n    var slot = fns[i];\n    if (Array.isArray(slot)) {\n      resolveScopedSlots(slot, res, hasDynamicKeys);\n    } else if (slot) {\n      // marker for reverse proxying v-slot without scope on this.$slots\n      if (slot.proxy) {\n        slot.fn.proxy = true;\n      }\n      res[slot.key] = slot.fn;\n    }\n  }\n  if (contentHashKey) {\n    (res).$key = contentHashKey;\n  }\n  return res\n}\n\n/*  */\n\nfunction bindDynamicKeys (baseObj, values) {\n  for (var i = 0; i < values.length; i += 2) {\n    var key = values[i];\n    if (typeof key === 'string' && key) {\n      baseObj[values[i]] = values[i + 1];\n    } else if (process.env.NODE_ENV !== 'production' && key !== '' && key !== null) {\n      // null is a speical value for explicitly removing a binding\n      warn(\n        (\"Invalid value for dynamic directive argument (expected string or null): \" + key),\n        this\n      );\n    }\n  }\n  return baseObj\n}\n\n// helper to dynamically append modifier runtime markers to event names.\n// ensure only append when value is already string, otherwise it will be cast\n// to string and cause the type check to miss.\nfunction prependModifier (value, symbol) {\n  return typeof value === 'string' ? symbol + value : value\n}\n\n/*  */\n\nfunction installRenderHelpers (target) {\n  target._o = markOnce;\n  target._n = toNumber;\n  target._s = toString;\n  target._l = renderList;\n  target._t = renderSlot;\n  target._q = looseEqual;\n  target._i = looseIndexOf;\n  target._m = renderStatic;\n  target._f = resolveFilter;\n  target._k = checkKeyCodes;\n  target._b = bindObjectProps;\n  target._v = createTextVNode;\n  target._e = createEmptyVNode;\n  target._u = resolveScopedSlots;\n  target._g = bindObjectListeners;\n  target._d = bindDynamicKeys;\n  target._p = prependModifier;\n}\n\n/*  */\n\nfunction FunctionalRenderContext (\n  data,\n  props,\n  children,\n  parent,\n  Ctor\n) {\n  var this$1 = this;\n\n  var options = Ctor.options;\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var contextVm;\n  if (hasOwn(parent, '_uid')) {\n    contextVm = Object.create(parent);\n    // $flow-disable-line\n    contextVm._original = parent;\n  } else {\n    // the context vm passed in is a functional context as well.\n    // in this case we want to make sure we are able to get a hold to the\n    // real context instance.\n    contextVm = parent;\n    // $flow-disable-line\n    parent = parent._original;\n  }\n  var isCompiled = isTrue(options._compiled);\n  var needNormalization = !isCompiled;\n\n  this.data = data;\n  this.props = props;\n  this.children = children;\n  this.parent = parent;\n  this.listeners = data.on || emptyObject;\n  this.injections = resolveInject(options.inject, parent);\n  this.slots = function () {\n    if (!this$1.$slots) {\n      normalizeScopedSlots(\n        data.scopedSlots,\n        this$1.$slots = resolveSlots(children, parent)\n      );\n    }\n    return this$1.$slots\n  };\n\n  Object.defineProperty(this, 'scopedSlots', ({\n    enumerable: true,\n    get: function get () {\n      return normalizeScopedSlots(data.scopedSlots, this.slots())\n    }\n  }));\n\n  // support for compiled functional template\n  if (isCompiled) {\n    // exposing $options for renderStatic()\n    this.$options = options;\n    // pre-resolve slots for renderSlot()\n    this.$slots = this.slots();\n    this.$scopedSlots = normalizeScopedSlots(data.scopedSlots, this.$slots);\n  }\n\n  if (options._scopeId) {\n    this._c = function (a, b, c, d) {\n      var vnode = createElement(contextVm, a, b, c, d, needNormalization);\n      if (vnode && !Array.isArray(vnode)) {\n        vnode.fnScopeId = options._scopeId;\n        vnode.fnContext = parent;\n      }\n      return vnode\n    };\n  } else {\n    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };\n  }\n}\n\ninstallRenderHelpers(FunctionalRenderContext.prototype);\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  contextVm,\n  children\n) {\n  var options = Ctor.options;\n  var props = {};\n  var propOptions = options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || emptyObject);\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n\n  var renderContext = new FunctionalRenderContext(\n    data,\n    props,\n    children,\n    contextVm,\n    Ctor\n  );\n\n  var vnode = options.render.call(null, renderContext._c, renderContext);\n\n  if (vnode instanceof VNode) {\n    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options, renderContext)\n  } else if (Array.isArray(vnode)) {\n    var vnodes = normalizeChildren(vnode) || [];\n    var res = new Array(vnodes.length);\n    for (var i = 0; i < vnodes.length; i++) {\n      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options, renderContext);\n    }\n    return res\n  }\n}\n\nfunction cloneAndMarkFunctionalResult (vnode, data, contextVm, options, renderContext) {\n  // #7817 clone node before setting fnContext, otherwise if the node is reused\n  // (e.g. it was from a cached normal slot) the fnContext causes named slots\n  // that should not be matched to match.\n  var clone = cloneVNode(vnode);\n  clone.fnContext = contextVm;\n  clone.fnOptions = options;\n  if (process.env.NODE_ENV !== 'production') {\n    (clone.devtoolsMeta = clone.devtoolsMeta || {}).renderContext = renderContext;\n  }\n  if (data.slot) {\n    (clone.data || (clone.data = {})).slot = data.slot;\n  }\n  return clone\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n/*  */\n\n/*  */\n\n/*  */\n\n// inline hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (vnode, hydrating) {\n    if (\n      vnode.componentInstance &&\n      !vnode.componentInstance._isDestroyed &&\n      vnode.data.keepAlive\n    ) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    } else {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  var asyncFactory;\n  if (isUndef(Ctor.cid)) {\n    asyncFactory = Ctor;\n    Ctor = resolveAsyncComponent(asyncFactory, baseCtor);\n    if (Ctor === undefined) {\n      // return a placeholder node for async component, which is rendered\n      // as a comment node but preserves all the raw information for the node.\n      // the information will be used for async server-rendering and hydration.\n      return createAsyncPlaceholder(\n        asyncFactory,\n        data,\n        context,\n        children,\n        tag\n      )\n    }\n  }\n\n  data = data || {};\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag);\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  // so it gets processed during parent component patch.\n  data.on = data.nativeOn;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners & slot\n\n    // work around flow\n    var slot = data.slot;\n    data = {};\n    if (slot) {\n      data.slot = slot;\n    }\n  }\n\n  // install component management hooks onto the placeholder node\n  installComponentHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },\n    asyncFactory\n  );\n\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent // activeInstance in lifecycle state\n) {\n  var options = {\n    _isComponent: true,\n    _parentVnode: vnode,\n    parent: parent\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnode.componentOptions.Ctor(options)\n}\n\nfunction installComponentHooks (data) {\n  var hooks = data.hook || (data.hook = {});\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    var existing = hooks[key];\n    var toMerge = componentVNodeHooks[key];\n    if (existing !== toMerge && !(existing && existing._merged)) {\n      hooks[key] = existing ? mergeHook$1(toMerge, existing) : toMerge;\n    }\n  }\n}\n\nfunction mergeHook$1 (f1, f2) {\n  var merged = function (a, b) {\n    // flow complains about extra args which is why we use any\n    f1(a, b);\n    f2(a, b);\n  };\n  merged._merged = true;\n  return merged\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input'\n  ;(data.attrs || (data.attrs = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  var existing = on[event];\n  var callback = data.model.callback;\n  if (isDef(existing)) {\n    if (\n      Array.isArray(existing)\n        ? existing.indexOf(callback) === -1\n        : existing !== callback\n    ) {\n      on[event] = [callback].concat(existing);\n    }\n  } else {\n    on[event] = callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  // object syntax in v-bind\n  if (isDef(data) && isDef(data.is)) {\n    tag = data.is;\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // warn against non-primitive key\n  if (process.env.NODE_ENV !== 'production' &&\n    isDef(data) && isDef(data.key) && !isPrimitive(data.key)\n  ) {\n    {\n      warn(\n        'Avoid using non-primitive value as key, ' +\n        'use string/number value instead.',\n        context\n      );\n    }\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if ((!data || !data.pre) && isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (Array.isArray(vnode)) {\n    return vnode\n  } else if (isDef(vnode)) {\n    if (isDef(ns)) { applyNS(vnode, ns); }\n    if (isDef(data)) { registerDeepBindings(data); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns, force) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    ns = undefined;\n    force = true;\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && (\n        isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {\n        applyNS(child, ns, force);\n      }\n    }\n  }\n}\n\n// ref #5318\n// necessary to ensure parent re-render when deep bindings like :style and\n// :class are used on slot nodes\nfunction registerDeepBindings (data) {\n  if (isObject(data.style)) {\n    traverse(data.style);\n  }\n  if (isObject(data.class)) {\n    traverse(data.class);\n  }\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null; // v-once cached trees\n  var options = vm.$options;\n  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n\n  // $attrs & $listeners are exposed for easier HOC creation.\n  // they need to be reactive so that HOCs using them are always updated\n  var parentData = parentVnode && parentVnode.data;\n\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== 'production') {\n    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$attrs is readonly.\", vm);\n    }, true);\n    defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$listeners is readonly.\", vm);\n    }, true);\n  } else {\n    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, null, true);\n    defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, null, true);\n  }\n}\n\nvar currentRenderingInstance = null;\n\nfunction renderMixin (Vue) {\n  // install runtime convenience helpers\n  installRenderHelpers(Vue.prototype);\n\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var _parentVnode = ref._parentVnode;\n\n    if (_parentVnode) {\n      vm.$scopedSlots = normalizeScopedSlots(\n        _parentVnode.data.scopedSlots,\n        vm.$slots,\n        vm.$scopedSlots\n      );\n    }\n\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      // There's no need to maintain a stack becaues all render fns are called\n      // separately from one another. Nested component's render fns are called\n      // when parent component is patched.\n      currentRenderingInstance = vm;\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production' && vm.$options.renderError) {\n        try {\n          vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);\n        } catch (e) {\n          handleError(e, vm, \"renderError\");\n          vnode = vm._vnode;\n        }\n      } else {\n        vnode = vm._vnode;\n      }\n    } finally {\n      currentRenderingInstance = null;\n    }\n    // if the returned array contains only a single node, allow it\n    if (Array.isArray(vnode) && vnode.length === 1) {\n      vnode = vnode[0];\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (process.env.NODE_ENV !== 'production' && Array.isArray(vnode)) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  if (\n    comp.__esModule ||\n    (hasSymbol && comp[Symbol.toStringTag] === 'Module')\n  ) {\n    comp = comp.default;\n  }\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction createAsyncPlaceholder (\n  factory,\n  data,\n  context,\n  children,\n  tag\n) {\n  var node = createEmptyVNode();\n  node.asyncFactory = factory;\n  node.asyncMeta = { data: data, context: context, children: children, tag: tag };\n  return node\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  var owner = currentRenderingInstance;\n  if (isDef(factory.owners) && factory.owners.indexOf(owner) === -1) {\n    // already pending\n    factory.owners.push(owner);\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  if (!isDef(factory.owners)) {\n    var owners = factory.owners = [owner];\n    var sync = true\n\n    ;(owner).$on('hook:destroyed', function () { return remove(owners, owner); });\n\n    var forceRender = function (renderCompleted) {\n      for (var i = 0, l = owners.length; i < l; i++) {\n        (owners[i]).$forceUpdate();\n      }\n\n      if (renderCompleted) {\n        owners.length = 0;\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender(true);\n      } else {\n        owners.length = 0;\n      }\n    });\n\n    var reject = once(function (reason) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender(true);\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (isPromise(res)) {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isPromise(res.component)) {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            setTimeout(function () {\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender(false);\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          setTimeout(function () {\n            if (isUndef(factory.resolved)) {\n              reject(\n                process.env.NODE_ENV !== 'production'\n                  ? (\"timeout (\" + (res.timeout) + \"ms)\")\n                  : null\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction isAsyncPlaceholder (node) {\n  return node.isComment && node.asyncFactory\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn) {\n  target.$on(event, fn);\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction createOnceHandler (event, fn) {\n  var _target = target;\n  return function onceHandler () {\n    var res = fn.apply(null, arguments);\n    if (res !== null) {\n      _target.$off(event, onceHandler);\n    }\n  }\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, createOnceHandler, vm);\n  target = undefined;\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        vm.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {\n        vm.$off(event[i$1], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (!fn) {\n      vm._events[event] = null;\n      return vm\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        cbs.splice(i, 1);\n        break\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (process.env.NODE_ENV !== 'production') {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      var info = \"event handler for \\\"\" + event + \"\\\"\";\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        invokeWithErrorHandling(cbs[i], vm, args, vm, info);\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\nvar activeInstance = null;\nvar isUpdatingChildComponent = false;\n\nfunction setActiveInstance(vm) {\n  var prevActiveInstance = activeInstance;\n  activeInstance = vm;\n  return function () {\n    activeInstance = prevActiveInstance;\n  }\n}\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var restoreActiveInstance = setActiveInstance(vm);\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(vm.$el, vnode, hydrating, false /* removeOnly */);\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    restoreActiveInstance();\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // release circular reference (#6759)\n    if (vm.$vnode) {\n      vm.$vnode.parent = null;\n    }\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n    updateComponent = function () {\n      var name = vm._name;\n      var id = vm._uid;\n      var startTag = \"vue-perf-start:\" + id;\n      var endTag = \"vue-perf-end:\" + id;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((\"vue \" + name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((\"vue \" + name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  // we set this to vm._watcher inside the watcher's constructor\n  // since the watcher's initial patch may call $forceUpdate (e.g. inside child\n  // component's mounted hook), which relies on vm._watcher being already defined\n  new Watcher(vm, updateComponent, noop, {\n    before: function before () {\n      if (vm._isMounted && !vm._isDestroyed) {\n        callHook(vm, 'beforeUpdate');\n      }\n    }\n  }, true /* isRenderWatcher */);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = true;\n  }\n\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren.\n\n  // check if there are dynamic scopedSlots (hand-written or compiled but with\n  // dynamic slot names). Static scoped slots compiled from template has the\n  // \"$stable\" marker.\n  var newScopedSlots = parentVnode.data.scopedSlots;\n  var oldScopedSlots = vm.$scopedSlots;\n  var hasDynamicScopedSlot = !!(\n    (newScopedSlots && !newScopedSlots.$stable) ||\n    (oldScopedSlots !== emptyObject && !oldScopedSlots.$stable) ||\n    (newScopedSlots && vm.$scopedSlots.$key !== newScopedSlots.$key)\n  );\n\n  // Any static slot children from the parent may have changed during parent's\n  // update. Dynamic scoped slots may also have changed. In such cases, a forced\n  // update is necessary to ensure correctness.\n  var needsForceUpdate = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    hasDynamicScopedSlot\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update $attrs and $listeners hash\n  // these are also reactive so they may trigger child update if the child\n  // used them during render\n  vm.$attrs = parentVnode.data.attrs || emptyObject;\n  vm.$listeners = listeners || emptyObject;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    toggleObserving(false);\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      var propOptions = vm.$options.props; // wtf flow?\n      props[key] = validateProp(key, propOptions, propsData, vm);\n    }\n    toggleObserving(true);\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n\n  // update listeners\n  listeners = listeners || emptyObject;\n  var oldListeners = vm.$options._parentListeners;\n  vm.$options._parentListeners = listeners;\n  updateComponentListeners(vm, listeners, oldListeners);\n\n  // resolve slots + force update if has children\n  if (needsForceUpdate) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = false;\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  // #7573 disable dep collection when invoking lifecycle hooks\n  pushTarget();\n  var handlers = vm.$options[hook];\n  var info = hook + \" hook\";\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      invokeWithErrorHandling(handlers[i], vm, null, vm, info);\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n  popTarget();\n}\n\n/*  */\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  if (process.env.NODE_ENV !== 'production') {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n// Async edge case #6566 requires saving the timestamp when event listeners are\n// attached. However, calling performance.now() has a perf overhead especially\n// if the page has thousands of event listeners. Instead, we take a timestamp\n// every time the scheduler flushes and use that for all event listeners\n// attached during that flush.\nvar currentFlushTimestamp = 0;\n\n// Async edge case fix requires storing an event listener's attach timestamp.\nvar getNow = Date.now;\n\n// Determine what event timestamp the browser is using. Annoyingly, the\n// timestamp can either be hi-res (relative to page load) or low-res\n// (relative to UNIX epoch), so in order to compare time we have to use the\n// same timestamp type when saving the flush timestamp.\nif (inBrowser && getNow() > document.createEvent('Event').timeStamp) {\n  // if the low-res timestamp which is bigger than the event timestamp\n  // (which is evaluated AFTER) it means the event is using a hi-res timestamp,\n  // and we need to use the hi-res version for event listeners as well.\n  getNow = function () { return performance.now(); };\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  currentFlushTimestamp = getNow();\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    if (watcher.before) {\n      watcher.before();\n    }\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdatedHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdatedHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted && !vm._isDestroyed) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n\n      if (process.env.NODE_ENV !== 'production' && !config.async) {\n        flushSchedulerQueue();\n        return\n      }\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\n\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options,\n  isRenderWatcher\n) {\n  this.vm = vm;\n  if (isRenderWatcher) {\n    vm._watcher = this;\n  }\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n    this.before = options.before;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression = process.env.NODE_ENV !== 'production'\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = noop;\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  try {\n    value = this.getter.call(vm, vm);\n  } catch (e) {\n    if (this.user) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    } else {\n      throw e\n    }\n  } finally {\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n    popTarget();\n    this.cleanupDeps();\n  }\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this.deps[i];\n    if (!this.newDepIds.has(dep.id)) {\n      dep.removeSub(this);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n  var i = this.deps.length;\n  while (i--) {\n    this.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].removeSub(this);\n    }\n    this.active = false;\n  }\n};\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch && opts.watch !== nativeWatch) {\n    initWatch(vm, opts.watch);\n  }\n}\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  if (!isRoot) {\n    toggleObserving(false);\n  }\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      var hyphenatedKey = hyphenate(key);\n      if (isReservedAttribute(hyphenatedKey) ||\n          config.isReservedAttr(hyphenatedKey)) {\n        warn(\n          (\"\\\"\" + hyphenatedKey + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive$$1(props, key, value, function () {\n        if (!isRoot && !isUpdatingChildComponent) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive$$1(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  toggleObserving(true);\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    process.env.NODE_ENV !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var methods = vm.$options.methods;\n  var i = keys.length;\n  while (i--) {\n    var key = keys[i];\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods && hasOwn(methods, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a data property.\"),\n          vm\n        );\n      }\n    }\n    if (props && hasOwn(props, key)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"The data property \\\"\" + key + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(key)) {\n      proxy(vm, \"_data\", key);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  // #7573 disable dep collection when invoking data getters\n  pushTarget();\n  try {\n    return data.call(vm, vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  } finally {\n    popTarget();\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  // $flow-disable-line\n  var watchers = vm._computedWatchers = Object.create(null);\n  // computed properties are just getters during SSR\n  var isSSR = isServerRendering();\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if (process.env.NODE_ENV !== 'production' && getter == null) {\n      warn(\n        (\"Getter is missing for computed property \\\"\" + key + \"\\\".\"),\n        vm\n      );\n    }\n\n    if (!isSSR) {\n      // create internal watcher for the computed property.\n      watchers[key] = new Watcher(\n        vm,\n        getter || noop,\n        noop,\n        computedWatcherOptions\n      );\n    }\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (process.env.NODE_ENV !== 'production') {\n      if (key in vm.$data) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed (\n  target,\n  key,\n  userDef\n) {\n  var shouldCache = !isServerRendering();\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = shouldCache\n      ? createComputedGetter(key)\n      : createGetterInvoker(userDef);\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? shouldCache && userDef.cache !== false\n        ? createComputedGetter(key)\n        : createGetterInvoker(userDef.get)\n      : noop;\n    sharedPropertyDefinition.set = userDef.set || noop;\n  }\n  if (process.env.NODE_ENV !== 'production' &&\n      sharedPropertyDefinition.set === noop) {\n    sharedPropertyDefinition.set = function () {\n      warn(\n        (\"Computed property \\\"\" + key + \"\\\" was assigned to but it has no setter.\"),\n        this\n      );\n    };\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction createGetterInvoker(fn) {\n  return function computedGetter () {\n    return fn.call(this, this)\n  }\n}\n\nfunction initMethods (vm, methods) {\n  var props = vm.$options.props;\n  for (var key in methods) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof methods[key] !== 'function') {\n        warn(\n          \"Method \\\"\" + key + \"\\\" has type \\\"\" + (typeof methods[key]) + \"\\\" in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n      if ((key in vm) && isReserved(key)) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" conflicts with an existing Vue instance method. \" +\n          \"Avoid defining component methods that start with _ or $.\"\n        );\n      }\n    }\n    vm[key] = typeof methods[key] !== 'function' ? noop : bind(methods[key], vm);\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (\n  vm,\n  expOrFn,\n  handler,\n  options\n) {\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  return vm.$watch(expOrFn, handler, options)\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (process.env.NODE_ENV !== 'production') {\n    dataDef.set = function () {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    if (isPlainObject(cb)) {\n      return createWatcher(vm, expOrFn, cb, options)\n    }\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      try {\n        cb.call(vm, watcher.value);\n      } catch (error) {\n        handleError(error, vm, (\"callback for immediate watcher \\\"\" + (watcher.expression) + \"\\\"\"));\n      }\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nvar uid$3 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$3++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      startTag = \"vue-perf-start:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure((\"vue \" + (vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  var parentVnode = options._parentVnode;\n  opts.parent = options.parent;\n  opts._parentVnode = parentVnode;\n\n  var vnodeComponentOptions = parentVnode.componentOptions;\n  opts.propsData = vnodeComponentOptions.propsData;\n  opts._parentListeners = vnodeComponentOptions.listeners;\n  opts._renderChildren = vnodeComponentOptions.children;\n  opts._componentTag = vnodeComponentOptions.tag;\n\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = latest[key];\n    }\n  }\n  return modified\n}\n\nfunction Vue (options) {\n  if (process.env.NODE_ENV !== 'production' &&\n    !(this instanceof Vue)\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nrenderMixin(Vue);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));\n    if (installedPlugins.indexOf(plugin) > -1) {\n      return this\n    }\n\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    installedPlugins.push(plugin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production' && name) {\n      validateComponentName(name);\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production' && type === 'component') {\n          validateComponentName(id);\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\n\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (Array.isArray(pattern)) {\n    return pattern.indexOf(name) > -1\n  } else if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (keepAliveInstance, filter) {\n  var cache = keepAliveInstance.cache;\n  var keys = keepAliveInstance.keys;\n  var _vnode = keepAliveInstance._vnode;\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        pruneCacheEntry(cache, key, keys, _vnode);\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (\n  cache,\n  key,\n  keys,\n  current\n) {\n  var cached$$1 = cache[key];\n  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {\n    cached$$1.componentInstance.$destroy();\n  }\n  cache[key] = null;\n  remove(keys, key);\n}\n\nvar patternTypes = [String, RegExp, Array];\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes,\n    max: [String, Number]\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n    this.keys = [];\n  },\n\n  destroyed: function destroyed () {\n    for (var key in this.cache) {\n      pruneCacheEntry(this.cache, key, this.keys);\n    }\n  },\n\n  mounted: function mounted () {\n    var this$1 = this;\n\n    this.$watch('include', function (val) {\n      pruneCache(this$1, function (name) { return matches(val, name); });\n    });\n    this.$watch('exclude', function (val) {\n      pruneCache(this$1, function (name) { return !matches(val, name); });\n    });\n  },\n\n  render: function render () {\n    var slot = this.$slots.default;\n    var vnode = getFirstComponentChild(slot);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      var ref = this;\n      var include = ref.include;\n      var exclude = ref.exclude;\n      if (\n        // not included\n        (include && (!name || !matches(include, name))) ||\n        // excluded\n        (exclude && name && matches(exclude, name))\n      ) {\n        return vnode\n      }\n\n      var ref$1 = this;\n      var cache = ref$1.cache;\n      var keys = ref$1.keys;\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (cache[key]) {\n        vnode.componentInstance = cache[key].componentInstance;\n        // make current key freshest\n        remove(keys, key);\n        keys.push(key);\n      } else {\n        cache[key] = vnode;\n        keys.push(key);\n        // prune oldest entry\n        if (this.max && keys.length > parseInt(this.max)) {\n          pruneCacheEntry(cache, keys[0], keys, this._vnode);\n        }\n      }\n\n      vnode.data.keepAlive = true;\n    }\n    return vnode || (slot && slot[0])\n  }\n};\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n};\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (process.env.NODE_ENV !== 'production') {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive$$1\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  // 2.6 explicit observable API\n  Vue.observable = function (obj) {\n    observe(obj);\n    return obj\n  };\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue);\n\nObject.defineProperty(Vue.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode && this.$vnode.ssrContext\n  }\n});\n\n// expose FunctionalRenderContext for ssr runtime helper installation\nObject.defineProperty(Vue, 'FunctionalRenderContext', {\n  value: FunctionalRenderContext\n});\n\nVue.version = '2.6.8';\n\n/*  */\n\n// these are reserved for web because they are directly compiled away\n// during template compilation\nvar isReservedAttr = makeMap('style,class');\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select,progress');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isValidContentEditableValue = makeMap('events,caret,typing,plaintext-only');\n\nvar convertEnumeratedValue = function (key, value) {\n  return isFalsyAttrValue(value) || value === 'false'\n    ? 'false'\n    // allow arbitrary string value for contenteditable\n    : key === 'contenteditable' && isValidContentEditableValue(value)\n      ? value\n      : 'true'\n};\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (isDef(childNode.componentInstance)) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode && childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while (isDef(parentNode = parentNode.parent)) {\n    if (parentNode && parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return renderClass(data.staticClass, data.class)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: isDef(child.class)\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction renderClass (\n  staticClass,\n  dynamicClass\n) {\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (Array.isArray(value)) {\n    return stringifyArray(value)\n  }\n  if (isObject(value)) {\n    return stringifyObject(value)\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction stringifyArray (value) {\n  var res = '';\n  var stringified;\n  for (var i = 0, l = value.length; i < l; i++) {\n    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n      if (res) { res += ' '; }\n      res += stringified;\n    }\n  }\n  return res\n}\n\nfunction stringifyObject (value) {\n  var res = '';\n  for (var key in value) {\n    if (value[key]) {\n      if (res) { res += ' '; }\n      res += key;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template,blockquote,iframe,tfoot'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\nvar isPreTag = function (tag) { return tag === 'pre'; };\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\nvar isTextInputType = makeMap('text,number,password,search,email,tel,url');\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setStyleScope (node, scopeId) {\n  node.setAttribute(scopeId, '');\n}\n\nvar nodeOps = /*#__PURE__*/Object.freeze({\n  createElement: createElement$1,\n  createElementNS: createElementNS,\n  createTextNode: createTextNode,\n  createComment: createComment,\n  insertBefore: insertBefore,\n  removeChild: removeChild,\n  appendChild: appendChild,\n  parentNode: parentNode,\n  nextSibling: nextSibling,\n  tagName: tagName,\n  setTextContent: setTextContent,\n  setStyleScope: setStyleScope\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n};\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!isDef(key)) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (!Array.isArray(refs[key])) {\n        refs[key] = [ref];\n      } else if (refs[key].indexOf(ref) < 0) {\n        // $flow-disable-line\n        refs[key].push(ref);\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction sameVnode (a, b) {\n  return (\n    a.key === b.key && (\n      (\n        a.tag === b.tag &&\n        a.isComment === b.isComment &&\n        isDef(a.data) === isDef(b.data) &&\n        sameInputType(a, b)\n      ) || (\n        isTrue(a.isAsyncPlaceholder) &&\n        a.asyncFactory === b.asyncFactory &&\n        isUndef(b.asyncFactory.error)\n      )\n    )\n  )\n}\n\nfunction sameInputType (a, b) {\n  if (a.tag !== 'input') { return true }\n  var i;\n  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;\n  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;\n  return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB)\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]]);\n      }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove$$1 () {\n      if (--remove$$1.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove$$1.listeners = listeners;\n    return remove$$1\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  function isUnknownElement$$1 (vnode, inVPre) {\n    return (\n      !inVPre &&\n      !vnode.ns &&\n      !(\n        config.ignoredElements.length &&\n        config.ignoredElements.some(function (ignore) {\n          return isRegExp(ignore)\n            ? ignore.test(vnode.tag)\n            : ignore === vnode.tag\n        })\n      ) &&\n      config.isUnknownElement(vnode.tag)\n    )\n  }\n\n  var creatingElmInVPre = 0;\n\n  function createElm (\n    vnode,\n    insertedVnodeQueue,\n    parentElm,\n    refElm,\n    nested,\n    ownerArray,\n    index\n  ) {\n    if (isDef(vnode.elm) && isDef(ownerArray)) {\n      // This vnode was used in a previous render!\n      // now it's used as a new node, overwriting its elm would cause\n      // potential patch errors down the road when it's used as an insertion\n      // reference node. Instead, we clone the node on-demand before creating\n      // associated DOM element for it.\n      vnode = ownerArray[index] = cloneVNode(vnode);\n    }\n\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (data && data.pre) {\n          creatingElmInVPre++;\n        }\n        if (isUnknownElement$$1(vnode, creatingElmInVPre)) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (process.env.NODE_ENV !== 'production' && data && data.pre) {\n        creatingElmInVPre--;\n      }\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        insert(parentElm, vnode.elm, refElm);\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n      vnode.data.pendingInsert = null;\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref$$1) {\n    if (isDef(parent)) {\n      if (isDef(ref$$1)) {\n        if (nodeOps.parentNode(ref$$1) === parent) {\n          nodeOps.insertBefore(parent, elm, ref$$1);\n        }\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      if (process.env.NODE_ENV !== 'production') {\n        checkDuplicateKeys(children);\n      }\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true, children, i);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(String(vnode.text)));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (isDef(i.create)) { i.create(emptyNode, vnode); }\n      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    if (isDef(i = vnode.fnScopeId)) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    } else {\n      var ancestor = vnode;\n      while (ancestor) {\n        if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n          nodeOps.setStyleScope(vnode.elm, i);\n        }\n        ancestor = ancestor.parent;\n      }\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n      i !== vnode.context &&\n      i !== vnode.fnContext &&\n      isDef(i = i.$options._scopeId)\n    ) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm, false, vnodes, startIdx);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      var i;\n      var listeners = cbs.remove.length + 1;\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, vnodeToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    if (process.env.NODE_ENV !== 'production') {\n      checkDuplicateKeys(newCh);\n    }\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue, newCh, newEndIdx);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue, newCh, newEndIdx);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key)\n          ? oldKeyToIdx[newStartVnode.key]\n          : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n        } else {\n          vnodeToMove = oldCh[idxInOld];\n          if (sameVnode(vnodeToMove, newStartVnode)) {\n            patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm);\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n          }\n        }\n        newStartVnode = newCh[++newStartIdx];\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function checkDuplicateKeys (children) {\n    var seenKeys = {};\n    for (var i = 0; i < children.length; i++) {\n      var vnode = children[i];\n      var key = vnode.key;\n      if (isDef(key)) {\n        if (seenKeys[key]) {\n          warn(\n            (\"Duplicate keys detected: '\" + key + \"'. This may cause an update error.\"),\n            vnode.context\n          );\n        } else {\n          seenKeys[key] = true;\n        }\n      }\n    }\n  }\n\n  function findIdxInOld (node, oldCh, start, end) {\n    for (var i = start; i < end; i++) {\n      var c = oldCh[i];\n      if (isDef(c) && sameVnode(node, c)) { return i }\n    }\n  }\n\n  function patchVnode (\n    oldVnode,\n    vnode,\n    insertedVnodeQueue,\n    ownerArray,\n    index,\n    removeOnly\n  ) {\n    if (oldVnode === vnode) {\n      return\n    }\n\n    if (isDef(vnode.elm) && isDef(ownerArray)) {\n      // clone reused vnode\n      vnode = ownerArray[index] = cloneVNode(vnode);\n    }\n\n    var elm = vnode.elm = oldVnode.elm;\n\n    if (isTrue(oldVnode.isAsyncPlaceholder)) {\n      if (isDef(vnode.asyncFactory.resolved)) {\n        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);\n      } else {\n        vnode.isAsyncPlaceholder = true;\n      }\n      return\n    }\n\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (isTrue(vnode.isStatic) &&\n      isTrue(oldVnode.isStatic) &&\n      vnode.key === oldVnode.key &&\n      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))\n    ) {\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n\n    var i;\n    var data = vnode.data;\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (process.env.NODE_ENV !== 'production') {\n          checkDuplicateKeys(ch);\n        }\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var hydrationBailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  // Note: style is excluded because it relies on initial clone for future\n  // deep updates (#7063).\n  var isRenderedModule = makeMap('attrs,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue, inVPre) {\n    var i;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    inVPre = inVPre || (data && data.pre);\n    vnode.elm = elm;\n\n    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {\n      vnode.isAsyncPlaceholder = true;\n      return true\n    }\n    // assert node match\n    if (process.env.NODE_ENV !== 'production') {\n      if (!assertNodeMatch(elm, vnode, inVPre)) {\n        return false\n      }\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          // v-html and domProps: innerHTML\n          if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {\n            if (i !== elm.innerHTML) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('server innerHTML: ', i);\n                console.warn('client innerHTML: ', elm.innerHTML);\n              }\n              return false\n            }\n          } else {\n            // iterate and compare children lists\n            var childrenMatch = true;\n            var childNode = elm.firstChild;\n            for (var i$1 = 0; i$1 < children.length; i$1++) {\n              if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue, inVPre)) {\n                childrenMatch = false;\n                break\n              }\n              childNode = childNode.nextSibling;\n            }\n            // if childNode is not null, it means the actual childNodes list is\n            // longer than the virtual children list.\n            if (!childrenMatch || childNode) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n              }\n              return false\n            }\n          }\n        }\n      }\n      if (isDef(data)) {\n        var fullInvoke = false;\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            fullInvoke = true;\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n        if (!fullInvoke && data['class']) {\n          // ensure collecting deps for deep class bindings for future updates\n          traverse(data['class']);\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode, inVPre) {\n    if (isDef(vnode.tag)) {\n      return vnode.tag.indexOf('vue-component') === 0 || (\n        !isUnknownElement$$1(vnode, inVPre) &&\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, null, null, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {\n            oldVnode.removeAttribute(SSR_ATTR);\n            hydrating = true;\n          }\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (process.env.NODE_ENV !== 'production') {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm = nodeOps.parentNode(oldElm);\n\n        // create new node\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        // update parent placeholder node element, recursively\n        if (isDef(vnode.parent)) {\n          var ancestor = vnode.parent;\n          var patchable = isPatchable(vnode);\n          while (ancestor) {\n            for (var i = 0; i < cbs.destroy.length; ++i) {\n              cbs.destroy[i](ancestor);\n            }\n            ancestor.elm = vnode.elm;\n            if (patchable) {\n              for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n                cbs.create[i$1](emptyNode, ancestor);\n              }\n              // #6513\n              // invoke insert hooks that may have been merged by create hooks.\n              // e.g. for directives that uses the \"inserted\" hook.\n              var insert = ancestor.data.hook.insert;\n              if (insert.merged) {\n                // start at index 1 to avoid re-invoking component mounted hook\n                for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {\n                  insert.fns[i$2]();\n                }\n              }\n            } else {\n              registerRef(ancestor);\n            }\n            ancestor = ancestor.parent;\n          }\n        }\n\n        // destroy old node\n        if (isDef(parentElm)) {\n          removeVnodes(parentElm, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n};\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      dir.oldArg = oldDir.arg;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode, 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode, 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    // $flow-disable-line\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      // $flow-disable-line\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  // $flow-disable-line\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    try {\n      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n    } catch (e) {\n      handleError(e, vnode.context, (\"directive \" + (dir.name) + \" \" + hook + \" hook\"));\n    }\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n];\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  var opts = vnode.componentOptions;\n  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {\n    return\n  }\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(attrs.__ob__)) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  // #6666: IE/Edge forces progress value down to 1 before setting a max\n  /* istanbul ignore if */\n  if ((isIE || isEdge) && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (isUndef(attrs[key])) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (el.tagName.indexOf('-') > -1) {\n    baseSetAttr(el, key, value);\n  } else if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      // technically allowfullscreen is a boolean attribute for <iframe>,\n      // but Flash expects a value of \"true\" when used on <embed> tag\n      value = key === 'allowfullscreen' && el.tagName === 'EMBED'\n        ? 'true'\n        : key;\n      el.setAttribute(key, value);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, convertEnumeratedValue(key, value));\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    baseSetAttr(el, key, value);\n  }\n}\n\nfunction baseSetAttr (el, key, value) {\n  if (isFalsyAttrValue(value)) {\n    el.removeAttribute(key);\n  } else {\n    // #7138: IE10 & 11 fires input event when setting placeholder on\n    // <textarea>... block the first input event and remove the blocker\n    // immediately.\n    /* istanbul ignore if */\n    if (\n      isIE && !isIE9 &&\n      el.tagName === 'TEXTAREA' &&\n      key === 'placeholder' && value !== '' && !el.__ieph\n    ) {\n      var blocker = function (e) {\n        e.stopImmediatePropagation();\n        el.removeEventListener('input', blocker);\n      };\n      el.addEventListener('input', blocker);\n      // $flow-disable-line\n      el.__ieph = true; /* IE placeholder patched */\n    }\n    el.setAttribute(key, value);\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n};\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (\n    isUndef(data.staticClass) &&\n    isUndef(data.class) && (\n      isUndef(oldData) || (\n        isUndef(oldData.staticClass) &&\n        isUndef(oldData.class)\n      )\n    )\n  ) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (isDef(transitionClass)) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n};\n\n/*  */\n\nvar validDivisionCharRE = /[\\w).+\\-_$\\]]/;\n\nfunction parseFilters (exp) {\n  var inSingle = false;\n  var inDouble = false;\n  var inTemplateString = false;\n  var inRegex = false;\n  var curly = 0;\n  var square = 0;\n  var paren = 0;\n  var lastFilterIndex = 0;\n  var c, prev, i, expression, filters;\n\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n    if (inSingle) {\n      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }\n    } else if (inDouble) {\n      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }\n    } else if (inTemplateString) {\n      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }\n    } else if (inRegex) {\n      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }\n    } else if (\n      c === 0x7C && // pipe\n      exp.charCodeAt(i + 1) !== 0x7C &&\n      exp.charCodeAt(i - 1) !== 0x7C &&\n      !curly && !square && !paren\n    ) {\n      if (expression === undefined) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22: inDouble = true; break         // \"\n        case 0x27: inSingle = true; break         // '\n        case 0x60: inTemplateString = true; break // `\n        case 0x28: paren++; break                 // (\n        case 0x29: paren--; break                 // )\n        case 0x5B: square++; break                // [\n        case 0x5D: square--; break                // ]\n        case 0x7B: curly++; break                 // {\n        case 0x7D: curly--; break                 // }\n      }\n      if (c === 0x2f) { // /\n        var j = i - 1;\n        var p = (void 0);\n        // find first non-whitespace prev char\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== ' ') { break }\n        }\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n\n  if (expression === undefined) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  function pushFilter () {\n    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n\n  if (filters) {\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i]);\n    }\n  }\n\n  return expression\n}\n\nfunction wrapFilter (exp, filter) {\n  var i = filter.indexOf('(');\n  if (i < 0) {\n    // _f: resolveFilter\n    return (\"_f(\\\"\" + filter + \"\\\")(\" + exp + \")\")\n  } else {\n    var name = filter.slice(0, i);\n    var args = filter.slice(i + 1);\n    return (\"_f(\\\"\" + name + \"\\\")(\" + exp + (args !== ')' ? ',' + args : args))\n  }\n}\n\n/*  */\n\n\n\n/* eslint-disable no-unused-vars */\nfunction baseWarn (msg, range) {\n  console.error((\"[Vue compiler]: \" + msg));\n}\n/* eslint-enable no-unused-vars */\n\nfunction pluckModuleFunction (\n  modules,\n  key\n) {\n  return modules\n    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })\n    : []\n}\n\nfunction addProp (el, name, value, range, dynamic) {\n  (el.props || (el.props = [])).push(rangeSetItem({ name: name, value: value, dynamic: dynamic }, range));\n  el.plain = false;\n}\n\nfunction addAttr (el, name, value, range, dynamic) {\n  var attrs = dynamic\n    ? (el.dynamicAttrs || (el.dynamicAttrs = []))\n    : (el.attrs || (el.attrs = []));\n  attrs.push(rangeSetItem({ name: name, value: value, dynamic: dynamic }, range));\n  el.plain = false;\n}\n\n// add a raw attr (use this in preTransforms)\nfunction addRawAttr (el, name, value, range) {\n  el.attrsMap[name] = value;\n  el.attrsList.push(rangeSetItem({ name: name, value: value }, range));\n}\n\nfunction addDirective (\n  el,\n  name,\n  rawName,\n  value,\n  arg,\n  isDynamicArg,\n  modifiers,\n  range\n) {\n  (el.directives || (el.directives = [])).push(rangeSetItem({\n    name: name,\n    rawName: rawName,\n    value: value,\n    arg: arg,\n    isDynamicArg: isDynamicArg,\n    modifiers: modifiers\n  }, range));\n  el.plain = false;\n}\n\nfunction prependModifierMarker (symbol, name, dynamic) {\n  return dynamic\n    ? (\"_p(\" + name + \",\\\"\" + symbol + \"\\\")\")\n    : symbol + name // mark the event as captured\n}\n\nfunction addHandler (\n  el,\n  name,\n  value,\n  modifiers,\n  important,\n  warn,\n  range,\n  dynamic\n) {\n  modifiers = modifiers || emptyObject;\n  // warn prevent and passive modifier\n  /* istanbul ignore if */\n  if (\n    process.env.NODE_ENV !== 'production' && warn &&\n    modifiers.prevent && modifiers.passive\n  ) {\n    warn(\n      'passive and prevent can\\'t be used together. ' +\n      'Passive handler can\\'t prevent default event.',\n      range\n    );\n  }\n\n  // normalize click.right and click.middle since they don't actually fire\n  // this is technically browser-specific, but at least for now browsers are\n  // the only target envs that have right/middle clicks.\n  if (modifiers.right) {\n    if (dynamic) {\n      name = \"(\" + name + \")==='click'?'contextmenu':(\" + name + \")\";\n    } else if (name === 'click') {\n      name = 'contextmenu';\n      delete modifiers.right;\n    }\n  } else if (modifiers.middle) {\n    if (dynamic) {\n      name = \"(\" + name + \")==='click'?'mouseup':(\" + name + \")\";\n    } else if (name === 'click') {\n      name = 'mouseup';\n    }\n  }\n\n  // check capture modifier\n  if (modifiers.capture) {\n    delete modifiers.capture;\n    name = prependModifierMarker('!', name, dynamic);\n  }\n  if (modifiers.once) {\n    delete modifiers.once;\n    name = prependModifierMarker('~', name, dynamic);\n  }\n  /* istanbul ignore if */\n  if (modifiers.passive) {\n    delete modifiers.passive;\n    name = prependModifierMarker('&', name, dynamic);\n  }\n\n  var events;\n  if (modifiers.native) {\n    delete modifiers.native;\n    events = el.nativeEvents || (el.nativeEvents = {});\n  } else {\n    events = el.events || (el.events = {});\n  }\n\n  var newHandler = rangeSetItem({ value: value.trim(), dynamic: dynamic }, range);\n  if (modifiers !== emptyObject) {\n    newHandler.modifiers = modifiers;\n  }\n\n  var handlers = events[name];\n  /* istanbul ignore if */\n  if (Array.isArray(handlers)) {\n    important ? handlers.unshift(newHandler) : handlers.push(newHandler);\n  } else if (handlers) {\n    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];\n  } else {\n    events[name] = newHandler;\n  }\n\n  el.plain = false;\n}\n\nfunction getRawBindingAttr (\n  el,\n  name\n) {\n  return el.rawAttrsMap[':' + name] ||\n    el.rawAttrsMap['v-bind:' + name] ||\n    el.rawAttrsMap[name]\n}\n\nfunction getBindingAttr (\n  el,\n  name,\n  getStatic\n) {\n  var dynamicValue =\n    getAndRemoveAttr(el, ':' + name) ||\n    getAndRemoveAttr(el, 'v-bind:' + name);\n  if (dynamicValue != null) {\n    return parseFilters(dynamicValue)\n  } else if (getStatic !== false) {\n    var staticValue = getAndRemoveAttr(el, name);\n    if (staticValue != null) {\n      return JSON.stringify(staticValue)\n    }\n  }\n}\n\n// note: this only removes the attr from the Array (attrsList) so that it\n// doesn't get processed by processAttrs.\n// By default it does NOT remove it from the map (attrsMap) because the map is\n// needed during codegen.\nfunction getAndRemoveAttr (\n  el,\n  name,\n  removeFromMap\n) {\n  var val;\n  if ((val = el.attrsMap[name]) != null) {\n    var list = el.attrsList;\n    for (var i = 0, l = list.length; i < l; i++) {\n      if (list[i].name === name) {\n        list.splice(i, 1);\n        break\n      }\n    }\n  }\n  if (removeFromMap) {\n    delete el.attrsMap[name];\n  }\n  return val\n}\n\nfunction getAndRemoveAttrByRegex (\n  el,\n  name\n) {\n  var list = el.attrsList;\n  for (var i = 0, l = list.length; i < l; i++) {\n    var attr = list[i];\n    if (name.test(attr.name)) {\n      list.splice(i, 1);\n      return attr\n    }\n  }\n}\n\nfunction rangeSetItem (\n  item,\n  range\n) {\n  if (range) {\n    if (range.start != null) {\n      item.start = range.start;\n    }\n    if (range.end != null) {\n      item.end = range.end;\n    }\n  }\n  return item\n}\n\n/*  */\n\n/**\n * Cross-platform code generation for component v-model\n */\nfunction genComponentModel (\n  el,\n  value,\n  modifiers\n) {\n  var ref = modifiers || {};\n  var number = ref.number;\n  var trim = ref.trim;\n\n  var baseValueExpression = '$$v';\n  var valueExpression = baseValueExpression;\n  if (trim) {\n    valueExpression =\n      \"(typeof \" + baseValueExpression + \" === 'string'\" +\n      \"? \" + baseValueExpression + \".trim()\" +\n      \": \" + baseValueExpression + \")\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n  var assignment = genAssignmentCode(value, valueExpression);\n\n  el.model = {\n    value: (\"(\" + value + \")\"),\n    expression: JSON.stringify(value),\n    callback: (\"function (\" + baseValueExpression + \") {\" + assignment + \"}\")\n  };\n}\n\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\nfunction genAssignmentCode (\n  value,\n  assignment\n) {\n  var res = parseModel(value);\n  if (res.key === null) {\n    return (value + \"=\" + assignment)\n  } else {\n    return (\"$set(\" + (res.exp) + \", \" + (res.key) + \", \" + assignment + \")\")\n  }\n}\n\n/**\n * Parse a v-model expression into a base path and a final key segment.\n * Handles both dot-path and possible square brackets.\n *\n * Possible cases:\n *\n * - test\n * - test[key]\n * - test[test1[key]]\n * - test[\"a\"][key]\n * - xxx.test[a[a].test1[key]]\n * - test.xxx.a[\"asa\"][test1[key]]\n *\n */\n\nvar len, str, chr, index$1, expressionPos, expressionEndPos;\n\n\n\nfunction parseModel (val) {\n  // Fix https://github.com/vuejs/vue/pull/7730\n  // allow v-model=\"obj.val \" (trailing whitespace)\n  val = val.trim();\n  len = val.length;\n\n  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {\n    index$1 = val.lastIndexOf('.');\n    if (index$1 > -1) {\n      return {\n        exp: val.slice(0, index$1),\n        key: '\"' + val.slice(index$1 + 1) + '\"'\n      }\n    } else {\n      return {\n        exp: val,\n        key: null\n      }\n    }\n  }\n\n  str = val;\n  index$1 = expressionPos = expressionEndPos = 0;\n\n  while (!eof()) {\n    chr = next();\n    /* istanbul ignore if */\n    if (isStringStart(chr)) {\n      parseString(chr);\n    } else if (chr === 0x5B) {\n      parseBracket(chr);\n    }\n  }\n\n  return {\n    exp: val.slice(0, expressionPos),\n    key: val.slice(expressionPos + 1, expressionEndPos)\n  }\n}\n\nfunction next () {\n  return str.charCodeAt(++index$1)\n}\n\nfunction eof () {\n  return index$1 >= len\n}\n\nfunction isStringStart (chr) {\n  return chr === 0x22 || chr === 0x27\n}\n\nfunction parseBracket (chr) {\n  var inBracket = 1;\n  expressionPos = index$1;\n  while (!eof()) {\n    chr = next();\n    if (isStringStart(chr)) {\n      parseString(chr);\n      continue\n    }\n    if (chr === 0x5B) { inBracket++; }\n    if (chr === 0x5D) { inBracket--; }\n    if (inBracket === 0) {\n      expressionEndPos = index$1;\n      break\n    }\n  }\n}\n\nfunction parseString (chr) {\n  var stringQuote = chr;\n  while (!eof()) {\n    chr = next();\n    if (chr === stringQuote) {\n      break\n    }\n  }\n}\n\n/*  */\n\nvar warn$1;\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\nfunction model (\n  el,\n  dir,\n  _warn\n) {\n  warn$1 = _warn;\n  var value = dir.value;\n  var modifiers = dir.modifiers;\n  var tag = el.tag;\n  var type = el.attrsMap.type;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // inputs with type=\"file\" are read only and setting the input's\n    // value will throw an error.\n    if (tag === 'input' && type === 'file') {\n      warn$1(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" type=\\\"file\\\">:\\n\" +\n        \"File inputs are read only. Use a v-on:change listener instead.\",\n        el.rawAttrsMap['v-model']\n      );\n    }\n  }\n\n  if (el.component) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (tag === 'select') {\n    genSelect(el, value, modifiers);\n  } else if (tag === 'input' && type === 'checkbox') {\n    genCheckboxModel(el, value, modifiers);\n  } else if (tag === 'input' && type === 'radio') {\n    genRadioModel(el, value, modifiers);\n  } else if (tag === 'input' || tag === 'textarea') {\n    genDefaultModel(el, value, modifiers);\n  } else if (!config.isReservedTag(tag)) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn$1(\n      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n      \"v-model is not supported on this element type. \" +\n      'If you are working with contenteditable, it\\'s recommended to ' +\n      'wrap a library dedicated for that purpose inside a custom component.',\n      el.rawAttrsMap['v-model']\n    );\n  }\n\n  // ensure runtime directive metadata\n  return true\n}\n\nfunction genCheckboxModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';\n  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';\n  addProp(el, 'checked',\n    \"Array.isArray(\" + value + \")\" +\n    \"?_i(\" + value + \",\" + valueBinding + \")>-1\" + (\n      trueValueBinding === 'true'\n        ? (\":(\" + value + \")\")\n        : (\":_q(\" + value + \",\" + trueValueBinding + \")\")\n    )\n  );\n  addHandler(el, 'change',\n    \"var $$a=\" + value + \",\" +\n        '$$el=$event.target,' +\n        \"$$c=$$el.checked?(\" + trueValueBinding + \"):(\" + falseValueBinding + \");\" +\n    'if(Array.isArray($$a)){' +\n      \"var $$v=\" + (number ? '_n(' + valueBinding + ')' : valueBinding) + \",\" +\n          '$$i=_i($$a,$$v);' +\n      \"if($$el.checked){$$i<0&&(\" + (genAssignmentCode(value, '$$a.concat([$$v])')) + \")}\" +\n      \"else{$$i>-1&&(\" + (genAssignmentCode(value, '$$a.slice(0,$$i).concat($$a.slice($$i+1))')) + \")}\" +\n    \"}else{\" + (genAssignmentCode(value, '$$c')) + \"}\",\n    null, true\n  );\n}\n\nfunction genRadioModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  valueBinding = number ? (\"_n(\" + valueBinding + \")\") : valueBinding;\n  addProp(el, 'checked', (\"_q(\" + value + \",\" + valueBinding + \")\"));\n  addHandler(el, 'change', genAssignmentCode(value, valueBinding), null, true);\n}\n\nfunction genSelect (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var selectedVal = \"Array.prototype.filter\" +\n    \".call($event.target.options,function(o){return o.selected})\" +\n    \".map(function(o){var val = \\\"_value\\\" in o ? o._value : o.value;\" +\n    \"return \" + (number ? '_n(val)' : 'val') + \"})\";\n\n  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';\n  var code = \"var $$selectedVal = \" + selectedVal + \";\";\n  code = code + \" \" + (genAssignmentCode(value, assignment));\n  addHandler(el, 'change', code, null, true);\n}\n\nfunction genDefaultModel (\n  el,\n  value,\n  modifiers\n) {\n  var type = el.attrsMap.type;\n\n  // warn if v-bind:value conflicts with v-model\n  // except for inputs with v-bind:type\n  if (process.env.NODE_ENV !== 'production') {\n    var value$1 = el.attrsMap['v-bind:value'] || el.attrsMap[':value'];\n    var typeBinding = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];\n    if (value$1 && !typeBinding) {\n      var binding = el.attrsMap['v-bind:value'] ? 'v-bind:value' : ':value';\n      warn$1(\n        binding + \"=\\\"\" + value$1 + \"\\\" conflicts with v-model on the same element \" +\n        'because the latter already expands to a value binding internally',\n        el.rawAttrsMap[binding]\n      );\n    }\n  }\n\n  var ref = modifiers || {};\n  var lazy = ref.lazy;\n  var number = ref.number;\n  var trim = ref.trim;\n  var needCompositionGuard = !lazy && type !== 'range';\n  var event = lazy\n    ? 'change'\n    : type === 'range'\n      ? RANGE_TOKEN\n      : 'input';\n\n  var valueExpression = '$event.target.value';\n  if (trim) {\n    valueExpression = \"$event.target.value.trim()\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n\n  var code = genAssignmentCode(value, valueExpression);\n  if (needCompositionGuard) {\n    code = \"if($event.target.composing)return;\" + code;\n  }\n\n  addProp(el, 'value', (\"(\" + value + \")\"));\n  addHandler(el, event, code, null, true);\n  if (trim || number) {\n    addHandler(el, 'blur', '$forceUpdate()');\n  }\n}\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  /* istanbul ignore if */\n  if (isDef(on[RANGE_TOKEN])) {\n    // IE input[type=range] only supports `change` event\n    var event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  // This was originally intended to fix #4521 but no longer necessary\n  // after 2.5. Keeping it for backwards compat with generated code from < 2.4\n  /* istanbul ignore if */\n  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {\n    on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction createOnceHandler$1 (event, handler, capture) {\n  var _target = target$1; // save current target element in closure\n  return function onceHandler () {\n    var res = handler.apply(null, arguments);\n    if (res !== null) {\n      remove$2(event, onceHandler, capture, _target);\n    }\n  }\n}\n\n// #9446: Firefox <= 53 (in particular, ESR 52) has incorrect Event.timeStamp\n// implementation and does not fire microtasks in between event propagation, so\n// safe to exclude.\nvar useMicrotaskFix = isUsingMicroTask && !(isFF && Number(isFF[1]) <= 53);\n\nfunction add$1 (\n  name,\n  handler,\n  capture,\n  passive\n) {\n  // async edge case #6566: inner click event triggers patch, event handler\n  // attached to outer element during patch, and triggered again. This\n  // happens because browsers fire microtask ticks between event propagation.\n  // the solution is simple: we save the timestamp when a handler is attached,\n  // and the handler would only fire if the event passed to it was fired\n  // AFTER it was attached.\n  if (useMicrotaskFix) {\n    var attachedTimestamp = currentFlushTimestamp;\n    var original = handler;\n    handler = original._wrapper = function (e) {\n      if (\n        // no bubbling, should always fire.\n        // this is just a safety net in case event.timeStamp is unreliable in\n        // certain weird environments...\n        e.target === e.currentTarget ||\n        // event is fired after handler attachment\n        e.timeStamp >= attachedTimestamp ||\n        // #9462 bail for iOS 9 bug: event.timeStamp is 0 after history.pushState\n        e.timeStamp === 0 ||\n        // #9448 bail if event is fired in another document in a multi-page\n        // electron/nw.js app, since event.timeStamp will be using a different\n        // starting reference\n        e.target.ownerDocument !== document\n      ) {\n        return original.apply(this, arguments)\n      }\n    };\n  }\n  target$1.addEventListener(\n    name,\n    handler,\n    supportsPassive\n      ? { capture: capture, passive: passive }\n      : capture\n  );\n}\n\nfunction remove$2 (\n  name,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(\n    name,\n    handler._wrapper || handler,\n    capture\n  );\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, createOnceHandler$1, vnode.context);\n  target$1 = undefined;\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n};\n\n/*  */\n\nvar svgContainer;\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(props.__ob__)) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (isUndef(props[key])) {\n      elm[key] = '';\n    }\n  }\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n      // #6601 work around Chrome version <= 55 bug where single textNode\n      // replaced by innerHTML/textContent retains its parentNode property\n      if (elm.childNodes.length === 1) {\n        elm.removeChild(elm.childNodes[0]);\n      }\n    }\n\n    if (key === 'value' && elm.tagName !== 'PROGRESS') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = isUndef(cur) ? '' : String(cur);\n      if (shouldUpdateValue(elm, strCur)) {\n        elm.value = strCur;\n      }\n    } else if (key === 'innerHTML' && isSVG(elm.tagName) && isUndef(elm.innerHTML)) {\n      // IE doesn't support innerHTML for SVG elements\n      svgContainer = svgContainer || document.createElement('div');\n      svgContainer.innerHTML = \"<svg>\" + cur + \"</svg>\";\n      var svg = svgContainer.firstChild;\n      while (elm.firstChild) {\n        elm.removeChild(elm.firstChild);\n      }\n      while (svg.firstChild) {\n        elm.appendChild(svg.firstChild);\n      }\n    } else if (\n      // skip the update if old and new VDOM state is the same.\n      // `value` is handled separately because the DOM value may be temporarily\n      // out of sync with VDOM state due to focus, composition and modifiers.\n      // This  #4521 by skipping the unnecesarry `checked` update.\n      cur !== oldProps[key]\n    ) {\n      // some property updates can throw\n      // e.g. `value` on <progress> w/ non-finite value\n      try {\n        elm[key] = cur;\n      } catch (e) {}\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (elm, checkVal) {\n  return (!elm.composing && (\n    elm.tagName === 'OPTION' ||\n    isNotInFocusAndDirty(elm, checkVal) ||\n    isDirtyWithModifiers(elm, checkVal)\n  ))\n}\n\nfunction isNotInFocusAndDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is\n  // not equal to the updated value\n  var notInFocus = true;\n  // #6157\n  // work around IE bug when accessing document.activeElement in an iframe\n  try { notInFocus = document.activeElement !== elm; } catch (e) {}\n  return notInFocus && elm.value !== checkVal\n}\n\nfunction isDirtyWithModifiers (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if (isDef(modifiers)) {\n    if (modifiers.number) {\n      return toNumber(value) !== toNumber(newVal)\n    }\n    if (modifiers.trim) {\n      return value.trim() !== newVal.trim()\n    }\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n};\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (\n        childNode && childNode.data &&\n        (styleData = normalizeStyleData(childNode.data))\n      ) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(hyphenate(name), val.replace(importantRE, ''), 'important');\n  } else {\n    var normalizedName = normalize(name);\n    if (Array.isArray(val)) {\n      // Support values array created by autoprefixer, e.g.\n      // {display: [\"-webkit-box\", \"-ms-flexbox\", \"flex\"]}\n      // Set them one by one, and the browser will only set those it can recognize\n      for (var i = 0, len = val.length; i < len; i++) {\n        el.style[normalizedName] = val[i];\n      }\n    } else {\n      el.style[normalizedName] = val;\n    }\n  }\n};\n\nvar vendorNames = ['Webkit', 'Moz', 'ms'];\n\nvar emptyStyle;\nvar normalize = cached(function (prop) {\n  emptyStyle = emptyStyle || document.createElement('div').style;\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in emptyStyle)) {\n    return prop\n  }\n  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < vendorNames.length; i++) {\n    var name = vendorNames[i] + capName;\n    if (name in emptyStyle) {\n      return name\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (isUndef(data.staticStyle) && isUndef(data.style) &&\n    isUndef(oldData.staticStyle) && isUndef(oldData.style)\n  ) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldData.staticStyle;\n  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  // store normalized style under a different key for next diff\n  // make sure to clone it if it's reactive, since the user likely wants\n  // to mutate it.\n  vnode.data.normalizedStyle = isDef(style.__ob__)\n    ? extend({}, style)\n    : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (isUndef(newStyle[name])) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n};\n\n/*  */\n\nvar whitespaceRE = /\\s+/;\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(whitespaceRE).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(whitespaceRE).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n    if (!el.classList.length) {\n      el.removeAttribute('class');\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    cur = cur.trim();\n    if (cur) {\n      el.setAttribute('class', cur);\n    } else {\n      el.removeAttribute('class');\n    }\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def$$1) {\n  if (!def$$1) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def$$1 === 'object') {\n    var res = {};\n    if (def$$1.css !== false) {\n      extend(res, autoCssTransition(def$$1.name || 'v'));\n    }\n    extend(res, def$$1);\n    return res\n  } else if (typeof def$$1 === 'string') {\n    return autoCssTransition(def$$1)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined\n  ) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined\n  ) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser\n  ? window.requestAnimationFrame\n    ? window.requestAnimationFrame.bind(window)\n    : setTimeout\n  : /* istanbul ignore next */ function (fn) { return fn(); };\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);\n  if (transitionClasses.indexOf(cls) < 0) {\n    transitionClasses.push(cls);\n    addClass(el, cls);\n  }\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  // JSDOM may return undefined for transition properties\n  var transitionDelays = (styles[transitionProp + 'Delay'] || '').split(', ');\n  var transitionDurations = (styles[transitionProp + 'Duration'] || '').split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = (styles[animationProp + 'Delay'] || '').split(', ');\n  var animationDurations = (styles[animationProp + 'Duration'] || '').split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\n// Old versions of Chromium (below 61.0.3163.100) formats floating pointer numbers\n// in a locale-dependent way, using a comma instead of a dot.\n// If comma is not replaced with a dot, the input will be rounded down (i.e. acting\n// as a floor function) causing unexpected behaviors\nfunction toMs (s) {\n  return Number(s.slice(0, -1).replace(',', '.')) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (isDef(el._leaveCb)) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._enterCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && explicitEnterDuration != null) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode, 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n        pendingNode.tag === vnode.tag &&\n        pendingNode.elm._leaveCb\n      ) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled) {\n        addTransitionClass(el, toClass);\n        if (!userWantsControl) {\n          if (isValidDuration(explicitEnterDuration)) {\n            setTimeout(cb, explicitEnterDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (isDef(el._enterCb)) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data) || el.nodeType !== 1) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._leaveCb)) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && isDef(explicitLeaveDuration)) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show && el.parentNode) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled) {\n          addTransitionClass(el, leaveToClass);\n          if (!userWantsControl) {\n            if (isValidDuration(explicitLeaveDuration)) {\n              setTimeout(cb, explicitLeaveDuration);\n            } else {\n              whenTransitionEnds(el, type, cb);\n            }\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (isUndef(fn)) {\n    return false\n  }\n  var invokerFns = fn.fns;\n  if (isDef(invokerFns)) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (vnode.data.show !== true) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (vnode.data.show !== true) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {};\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n];\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar directive = {\n  inserted: function inserted (el, binding, vnode, oldVnode) {\n    if (vnode.tag === 'select') {\n      // #6903\n      if (oldVnode.elm && !oldVnode.elm._vOptions) {\n        mergeVNodeHook(vnode, 'postpatch', function () {\n          directive.componentUpdated(el, binding, vnode);\n        });\n      } else {\n        setSelected(el, binding, vnode.context);\n      }\n      el._vOptions = [].map.call(el.options, getValue);\n    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        el.addEventListener('compositionstart', onCompositionStart);\n        el.addEventListener('compositionend', onCompositionEnd);\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        el.addEventListener('change', onCompositionEnd);\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var prevOptions = el._vOptions;\n      var curOptions = el._vOptions = [].map.call(el.options, getValue);\n      if (curOptions.some(function (o, i) { return !looseEqual(o, prevOptions[i]); })) {\n        // trigger change event if\n        // no matching option found for at least one value\n        var needReset = el.multiple\n          ? binding.value.some(function (v) { return hasNoMatchingOption(v, curOptions); })\n          : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);\n        if (needReset) {\n          trigger(el, 'change');\n        }\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  actuallySetSelected(el, binding, vm);\n  /* istanbul ignore if */\n  if (isIE || isEdge) {\n    setTimeout(function () {\n      actuallySetSelected(el, binding, vm);\n    }, 0);\n  }\n}\n\nfunction actuallySetSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  return options.every(function (o) { return !looseEqual(o, value); })\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) { return }\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition$$1) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (!value === !oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    if (transition$$1) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n};\n\nvar platformDirectives = {\n  model: directive,\n  show: show\n};\n\n/*  */\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  if (/\\d-keep-alive$/.test(rawChild.tag)) {\n    return h('keep-alive', {\n      props: rawChild.componentOptions.propsData\n    })\n  }\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar isNotTextNode = function (c) { return c.tag || isAsyncPlaceholder(c); };\n\nvar isVShowDirective = function (d) { return d.name === 'show'; };\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$slots.default;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(isNotTextNode);\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (process.env.NODE_ENV !== 'production' && children.length > 1) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (process.env.NODE_ENV !== 'production' &&\n      mode && mode !== 'in-out' && mode !== 'out-in'\n    ) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? child.isComment\n        ? id + 'comment'\n        : id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(isVShowDirective)) {\n      child.data.show = true;\n    }\n\n    if (\n      oldChild &&\n      oldChild.data &&\n      !isSameChild(child, oldChild) &&\n      !isAsyncPlaceholder(oldChild) &&\n      // #6687 component root is a comment node\n      !(oldChild.componentInstance && oldChild.componentInstance._vnode.isComment)\n    ) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild.data.transition = extend({}, data);\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        if (isAsyncPlaceholder(child)) {\n          return oldRawChild\n        }\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n};\n\n/*  */\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  beforeMount: function beforeMount () {\n    var this$1 = this;\n\n    var update = this._update;\n    this._update = function (vnode, hydrating) {\n      var restoreActiveInstance = setActiveInstance(this$1);\n      // force removing pass\n      this$1.__patch__(\n        this$1._vnode,\n        this$1.kept,\n        false, // hydrating\n        true // removeOnly (!important, avoids unnecessary moves)\n      );\n      this$1._vnode = this$1.kept;\n      restoreActiveInstance();\n      update.call(this$1, vnode, hydrating);\n    };\n  },\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (process.env.NODE_ENV !== 'production') {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    // assign to this to avoid being removed in tree-shaking\n    // $flow-disable-line\n    this._reflow = document.body.offsetHeight;\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (e && e.target !== el) {\n            return\n          }\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      /* istanbul ignore if */\n      if (this._hasMove) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n};\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n};\n\n/*  */\n\n// install platform specific utils\nVue.config.mustUseProp = mustUseProp;\nVue.config.isReservedTag = isReservedTag;\nVue.config.isReservedAttr = isReservedAttr;\nVue.config.getTagNamespace = getTagNamespace;\nVue.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue.options.directives, platformDirectives);\nextend(Vue.options.components, platformComponents);\n\n// install platform patch function\nVue.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nif (inBrowser) {\n  setTimeout(function () {\n    if (config.devtools) {\n      if (devtools) {\n        devtools.emit('init', Vue);\n      } else if (\n        process.env.NODE_ENV !== 'production' &&\n        process.env.NODE_ENV !== 'test'\n      ) {\n        console[console.info ? 'info' : 'log'](\n          'Download the Vue Devtools extension for a better development experience:\\n' +\n          'https://github.com/vuejs/vue-devtools'\n        );\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' &&\n      process.env.NODE_ENV !== 'test' &&\n      config.productionTip !== false &&\n      typeof console !== 'undefined'\n    ) {\n      console[console.info ? 'info' : 'log'](\n        \"You are running Vue in development mode.\\n\" +\n        \"Make sure to turn on production mode when deploying for production.\\n\" +\n        \"See more tips at https://vuejs.org/guide/deployment.html\"\n      );\n    }\n  }, 0);\n}\n\n/*  */\n\nvar defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\nvar buildRegex = cached(function (delimiters) {\n  var open = delimiters[0].replace(regexEscapeRE, '\\\\$&');\n  var close = delimiters[1].replace(regexEscapeRE, '\\\\$&');\n  return new RegExp(open + '((?:.|\\\\n)+?)' + close, 'g')\n});\n\n\n\nfunction parseText (\n  text,\n  delimiters\n) {\n  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;\n  if (!tagRE.test(text)) {\n    return\n  }\n  var tokens = [];\n  var rawTokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, tokenValue;\n  while ((match = tagRE.exec(text))) {\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      rawTokens.push(tokenValue = text.slice(lastIndex, index));\n      tokens.push(JSON.stringify(tokenValue));\n    }\n    // tag token\n    var exp = parseFilters(match[1].trim());\n    tokens.push((\"_s(\" + exp + \")\"));\n    rawTokens.push({ '@binding': exp });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    rawTokens.push(tokenValue = text.slice(lastIndex));\n    tokens.push(JSON.stringify(tokenValue));\n  }\n  return {\n    expression: tokens.join('+'),\n    tokens: rawTokens\n  }\n}\n\n/*  */\n\nfunction transformNode (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticClass = getAndRemoveAttr(el, 'class');\n  if (process.env.NODE_ENV !== 'production' && staticClass) {\n    var res = parseText(staticClass, options.delimiters);\n    if (res) {\n      warn(\n        \"class=\\\"\" + staticClass + \"\\\": \" +\n        'Interpolation inside attributes has been removed. ' +\n        'Use v-bind or the colon shorthand instead. For example, ' +\n        'instead of <div class=\"{{ val }}\">, use <div :class=\"val\">.',\n        el.rawAttrsMap['class']\n      );\n    }\n  }\n  if (staticClass) {\n    el.staticClass = JSON.stringify(staticClass);\n  }\n  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);\n  if (classBinding) {\n    el.classBinding = classBinding;\n  }\n}\n\nfunction genData (el) {\n  var data = '';\n  if (el.staticClass) {\n    data += \"staticClass:\" + (el.staticClass) + \",\";\n  }\n  if (el.classBinding) {\n    data += \"class:\" + (el.classBinding) + \",\";\n  }\n  return data\n}\n\nvar klass$1 = {\n  staticKeys: ['staticClass'],\n  transformNode: transformNode,\n  genData: genData\n};\n\n/*  */\n\nfunction transformNode$1 (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticStyle = getAndRemoveAttr(el, 'style');\n  if (staticStyle) {\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      var res = parseText(staticStyle, options.delimiters);\n      if (res) {\n        warn(\n          \"style=\\\"\" + staticStyle + \"\\\": \" +\n          'Interpolation inside attributes has been removed. ' +\n          'Use v-bind or the colon shorthand instead. For example, ' +\n          'instead of <div style=\"{{ val }}\">, use <div :style=\"val\">.',\n          el.rawAttrsMap['style']\n        );\n      }\n    }\n    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));\n  }\n\n  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);\n  if (styleBinding) {\n    el.styleBinding = styleBinding;\n  }\n}\n\nfunction genData$1 (el) {\n  var data = '';\n  if (el.staticStyle) {\n    data += \"staticStyle:\" + (el.staticStyle) + \",\";\n  }\n  if (el.styleBinding) {\n    data += \"style:(\" + (el.styleBinding) + \"),\";\n  }\n  return data\n}\n\nvar style$1 = {\n  staticKeys: ['staticStyle'],\n  transformNode: transformNode$1,\n  genData: genData$1\n};\n\n/*  */\n\nvar decoder;\n\nvar he = {\n  decode: function decode (html) {\n    decoder = decoder || document.createElement('div');\n    decoder.innerHTML = html;\n    return decoder.textContent\n  }\n};\n\n/*  */\n\nvar isUnaryTag = makeMap(\n  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +\n  'link,meta,param,source,track,wbr'\n);\n\n// Elements that you can, intentionally, leave open\n// (and which close themselves)\nvar canBeLeftOpenTag = makeMap(\n  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'\n);\n\n// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\nvar isNonPhrasingTag = makeMap(\n  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +\n  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +\n  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +\n  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +\n  'title,tr,track'\n);\n\n/**\n * Not type-checking this file because it's mostly vendor code.\n */\n\n// Regular Expressions for parsing tags and attributes\nvar attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\nvar dynamicArgAttribute = /^\\s*((?:v-[\\w-]+:|@|:|#)\\[[^=]+\\][^\\s\"'<>\\/=]*)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\nvar ncname = \"[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z\" + (unicodeRegExp.source) + \"]*\";\nvar qnameCapture = \"((?:\" + ncname + \"\\\\:)?\" + ncname + \")\";\nvar startTagOpen = new RegExp((\"^<\" + qnameCapture));\nvar startTagClose = /^\\s*(\\/?)>/;\nvar endTag = new RegExp((\"^<\\\\/\" + qnameCapture + \"[^>]*>\"));\nvar doctype = /^<!DOCTYPE [^>]+>/i;\n// #7298: escape - to avoid being pased as HTML comment when inlined in page\nvar comment = /^<!\\--/;\nvar conditionalComment = /^<!\\[/;\n\n// Special Elements (can contain anything)\nvar isPlainTextElement = makeMap('script,style,textarea', true);\nvar reCache = {};\n\nvar decodingMap = {\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&amp;': '&',\n  '&#10;': '\\n',\n  '&#9;': '\\t',\n  '&#39;': \"'\"\n};\nvar encodedAttr = /&(?:lt|gt|quot|amp|#39);/g;\nvar encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#39|#10|#9);/g;\n\n// #5992\nvar isIgnoreNewlineTag = makeMap('pre,textarea', true);\nvar shouldIgnoreFirstNewline = function (tag, html) { return tag && isIgnoreNewlineTag(tag) && html[0] === '\\n'; };\n\nfunction decodeAttr (value, shouldDecodeNewlines) {\n  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;\n  return value.replace(re, function (match) { return decodingMap[match]; })\n}\n\nfunction parseHTML (html, options) {\n  var stack = [];\n  var expectHTML = options.expectHTML;\n  var isUnaryTag$$1 = options.isUnaryTag || no;\n  var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;\n  var index = 0;\n  var last, lastTag;\n  while (html) {\n    last = html;\n    // Make sure we're not in a plaintext content element like script/style\n    if (!lastTag || !isPlainTextElement(lastTag)) {\n      var textEnd = html.indexOf('<');\n      if (textEnd === 0) {\n        // Comment:\n        if (comment.test(html)) {\n          var commentEnd = html.indexOf('-->');\n\n          if (commentEnd >= 0) {\n            if (options.shouldKeepComment) {\n              options.comment(html.substring(4, commentEnd), index, index + commentEnd + 3);\n            }\n            advance(commentEnd + 3);\n            continue\n          }\n        }\n\n        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n        if (conditionalComment.test(html)) {\n          var conditionalEnd = html.indexOf(']>');\n\n          if (conditionalEnd >= 0) {\n            advance(conditionalEnd + 2);\n            continue\n          }\n        }\n\n        // Doctype:\n        var doctypeMatch = html.match(doctype);\n        if (doctypeMatch) {\n          advance(doctypeMatch[0].length);\n          continue\n        }\n\n        // End tag:\n        var endTagMatch = html.match(endTag);\n        if (endTagMatch) {\n          var curIndex = index;\n          advance(endTagMatch[0].length);\n          parseEndTag(endTagMatch[1], curIndex, index);\n          continue\n        }\n\n        // Start tag:\n        var startTagMatch = parseStartTag();\n        if (startTagMatch) {\n          handleStartTag(startTagMatch);\n          if (shouldIgnoreFirstNewline(startTagMatch.tagName, html)) {\n            advance(1);\n          }\n          continue\n        }\n      }\n\n      var text = (void 0), rest = (void 0), next = (void 0);\n      if (textEnd >= 0) {\n        rest = html.slice(textEnd);\n        while (\n          !endTag.test(rest) &&\n          !startTagOpen.test(rest) &&\n          !comment.test(rest) &&\n          !conditionalComment.test(rest)\n        ) {\n          // < in plain text, be forgiving and treat it as text\n          next = rest.indexOf('<', 1);\n          if (next < 0) { break }\n          textEnd += next;\n          rest = html.slice(textEnd);\n        }\n        text = html.substring(0, textEnd);\n      }\n\n      if (textEnd < 0) {\n        text = html;\n      }\n\n      if (text) {\n        advance(text.length);\n      }\n\n      if (options.chars && text) {\n        options.chars(text, index - text.length, index);\n      }\n    } else {\n      var endTagLength = 0;\n      var stackedTag = lastTag.toLowerCase();\n      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));\n      var rest$1 = html.replace(reStackedTag, function (all, text, endTag) {\n        endTagLength = endTag.length;\n        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {\n          text = text\n            .replace(/<!\\--([\\s\\S]*?)-->/g, '$1') // #7298\n            .replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g, '$1');\n        }\n        if (shouldIgnoreFirstNewline(stackedTag, text)) {\n          text = text.slice(1);\n        }\n        if (options.chars) {\n          options.chars(text);\n        }\n        return ''\n      });\n      index += html.length - rest$1.length;\n      html = rest$1;\n      parseEndTag(stackedTag, index - endTagLength, index);\n    }\n\n    if (html === last) {\n      options.chars && options.chars(html);\n      if (process.env.NODE_ENV !== 'production' && !stack.length && options.warn) {\n        options.warn((\"Mal-formatted tag at end of template: \\\"\" + html + \"\\\"\"), { start: index + html.length });\n      }\n      break\n    }\n  }\n\n  // Clean up any remaining tags\n  parseEndTag();\n\n  function advance (n) {\n    index += n;\n    html = html.substring(n);\n  }\n\n  function parseStartTag () {\n    var start = html.match(startTagOpen);\n    if (start) {\n      var match = {\n        tagName: start[1],\n        attrs: [],\n        start: index\n      };\n      advance(start[0].length);\n      var end, attr;\n      while (!(end = html.match(startTagClose)) && (attr = html.match(dynamicArgAttribute) || html.match(attribute))) {\n        attr.start = index;\n        advance(attr[0].length);\n        attr.end = index;\n        match.attrs.push(attr);\n      }\n      if (end) {\n        match.unarySlash = end[1];\n        advance(end[0].length);\n        match.end = index;\n        return match\n      }\n    }\n  }\n\n  function handleStartTag (match) {\n    var tagName = match.tagName;\n    var unarySlash = match.unarySlash;\n\n    if (expectHTML) {\n      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {\n        parseEndTag(lastTag);\n      }\n      if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {\n        parseEndTag(tagName);\n      }\n    }\n\n    var unary = isUnaryTag$$1(tagName) || !!unarySlash;\n\n    var l = match.attrs.length;\n    var attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      var args = match.attrs[i];\n      var value = args[3] || args[4] || args[5] || '';\n      var shouldDecodeNewlines = tagName === 'a' && args[1] === 'href'\n        ? options.shouldDecodeNewlinesForHref\n        : options.shouldDecodeNewlines;\n      attrs[i] = {\n        name: args[1],\n        value: decodeAttr(value, shouldDecodeNewlines)\n      };\n      if (process.env.NODE_ENV !== 'production' && options.outputSourceRange) {\n        attrs[i].start = args.start + args[0].match(/^\\s*/).length;\n        attrs[i].end = args.end;\n      }\n    }\n\n    if (!unary) {\n      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs, start: match.start, end: match.end });\n      lastTag = tagName;\n    }\n\n    if (options.start) {\n      options.start(tagName, attrs, unary, match.start, match.end);\n    }\n  }\n\n  function parseEndTag (tagName, start, end) {\n    var pos, lowerCasedTagName;\n    if (start == null) { start = index; }\n    if (end == null) { end = index; }\n\n    // Find the closest opened tag of the same type\n    if (tagName) {\n      lowerCasedTagName = tagName.toLowerCase();\n      for (pos = stack.length - 1; pos >= 0; pos--) {\n        if (stack[pos].lowerCasedTag === lowerCasedTagName) {\n          break\n        }\n      }\n    } else {\n      // If no tag name is provided, clean shop\n      pos = 0;\n    }\n\n    if (pos >= 0) {\n      // Close all the open elements, up the stack\n      for (var i = stack.length - 1; i >= pos; i--) {\n        if (process.env.NODE_ENV !== 'production' &&\n          (i > pos || !tagName) &&\n          options.warn\n        ) {\n          options.warn(\n            (\"tag <\" + (stack[i].tag) + \"> has no matching end tag.\"),\n            { start: stack[i].start, end: stack[i].end }\n          );\n        }\n        if (options.end) {\n          options.end(stack[i].tag, start, end);\n        }\n      }\n\n      // Remove the open elements from the stack\n      stack.length = pos;\n      lastTag = pos && stack[pos - 1].tag;\n    } else if (lowerCasedTagName === 'br') {\n      if (options.start) {\n        options.start(tagName, [], true, start, end);\n      }\n    } else if (lowerCasedTagName === 'p') {\n      if (options.start) {\n        options.start(tagName, [], false, start, end);\n      }\n      if (options.end) {\n        options.end(tagName, start, end);\n      }\n    }\n  }\n}\n\n/*  */\n\nvar onRE = /^@|^v-on:/;\nvar dirRE = /^v-|^@|^:/;\nvar forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/;\nvar forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\nvar stripParensRE = /^\\(|\\)$/g;\nvar dynamicArgRE = /^\\[.*\\]$/;\n\nvar argRE = /:(.*)$/;\nvar bindRE = /^:|^\\.|^v-bind:/;\nvar modifierRE = /\\.[^.\\]]+(?=[^\\]]*$)/g;\n\nvar slotRE = /^v-slot(:|$)|^#/;\n\nvar lineBreakRE = /[\\r\\n]/;\nvar whitespaceRE$1 = /\\s+/g;\n\nvar invalidAttributeRE = /[\\s\"'<>\\/=]/;\n\nvar decodeHTMLCached = cached(he.decode);\n\nvar emptySlotScopeToken = \"_empty_\";\n\n// configurable state\nvar warn$2;\nvar delimiters;\nvar transforms;\nvar preTransforms;\nvar postTransforms;\nvar platformIsPreTag;\nvar platformMustUseProp;\nvar platformGetTagNamespace;\nvar maybeComponent;\n\nfunction createASTElement (\n  tag,\n  attrs,\n  parent\n) {\n  return {\n    type: 1,\n    tag: tag,\n    attrsList: attrs,\n    attrsMap: makeAttrsMap(attrs),\n    rawAttrsMap: {},\n    parent: parent,\n    children: []\n  }\n}\n\n/**\n * Convert HTML string to AST.\n */\nfunction parse (\n  template,\n  options\n) {\n  warn$2 = options.warn || baseWarn;\n\n  platformIsPreTag = options.isPreTag || no;\n  platformMustUseProp = options.mustUseProp || no;\n  platformGetTagNamespace = options.getTagNamespace || no;\n  var isReservedTag = options.isReservedTag || no;\n  maybeComponent = function (el) { return !!el.component || !isReservedTag(el.tag); };\n\n  transforms = pluckModuleFunction(options.modules, 'transformNode');\n  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');\n  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');\n\n  delimiters = options.delimiters;\n\n  var stack = [];\n  var preserveWhitespace = options.preserveWhitespace !== false;\n  var whitespaceOption = options.whitespace;\n  var root;\n  var currentParent;\n  var inVPre = false;\n  var inPre = false;\n  var warned = false;\n\n  function warnOnce (msg, range) {\n    if (!warned) {\n      warned = true;\n      warn$2(msg, range);\n    }\n  }\n\n  function closeElement (element) {\n    trimEndingWhitespace(element);\n    if (!inVPre && !element.processed) {\n      element = processElement(element, options);\n    }\n    // tree management\n    if (!stack.length && element !== root) {\n      // allow root elements with v-if, v-else-if and v-else\n      if (root.if && (element.elseif || element.else)) {\n        if (process.env.NODE_ENV !== 'production') {\n          checkRootConstraints(element);\n        }\n        addIfCondition(root, {\n          exp: element.elseif,\n          block: element\n        });\n      } else if (process.env.NODE_ENV !== 'production') {\n        warnOnce(\n          \"Component template should contain exactly one root element. \" +\n          \"If you are using v-if on multiple elements, \" +\n          \"use v-else-if to chain them instead.\",\n          { start: element.start }\n        );\n      }\n    }\n    if (currentParent && !element.forbidden) {\n      if (element.elseif || element.else) {\n        processIfConditions(element, currentParent);\n      } else {\n        if (element.slotScope) {\n          // scoped slot\n          // keep it in the children list so that v-else(-if) conditions can\n          // find it as the prev node.\n          var name = element.slotTarget || '\"default\"'\n          ;(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;\n        }\n        currentParent.children.push(element);\n        element.parent = currentParent;\n      }\n    }\n\n    // final children cleanup\n    // filter out scoped slots\n    element.children = element.children.filter(function (c) { return !(c).slotScope; });\n    // remove trailing whitespace node again\n    trimEndingWhitespace(element);\n\n    // check pre state\n    if (element.pre) {\n      inVPre = false;\n    }\n    if (platformIsPreTag(element.tag)) {\n      inPre = false;\n    }\n    // apply post-transforms\n    for (var i = 0; i < postTransforms.length; i++) {\n      postTransforms[i](element, options);\n    }\n  }\n\n  function trimEndingWhitespace (el) {\n    // remove trailing whitespace node\n    if (!inPre) {\n      var lastNode;\n      while (\n        (lastNode = el.children[el.children.length - 1]) &&\n        lastNode.type === 3 &&\n        lastNode.text === ' '\n      ) {\n        el.children.pop();\n      }\n    }\n  }\n\n  function checkRootConstraints (el) {\n    if (el.tag === 'slot' || el.tag === 'template') {\n      warnOnce(\n        \"Cannot use <\" + (el.tag) + \"> as component root element because it may \" +\n        'contain multiple nodes.',\n        { start: el.start }\n      );\n    }\n    if (el.attrsMap.hasOwnProperty('v-for')) {\n      warnOnce(\n        'Cannot use v-for on stateful component root element because ' +\n        'it renders multiple elements.',\n        el.rawAttrsMap['v-for']\n      );\n    }\n  }\n\n  parseHTML(template, {\n    warn: warn$2,\n    expectHTML: options.expectHTML,\n    isUnaryTag: options.isUnaryTag,\n    canBeLeftOpenTag: options.canBeLeftOpenTag,\n    shouldDecodeNewlines: options.shouldDecodeNewlines,\n    shouldDecodeNewlinesForHref: options.shouldDecodeNewlinesForHref,\n    shouldKeepComment: options.comments,\n    outputSourceRange: options.outputSourceRange,\n    start: function start (tag, attrs, unary, start$1, end) {\n      // check namespace.\n      // inherit parent ns if there is one\n      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);\n\n      // handle IE svg bug\n      /* istanbul ignore if */\n      if (isIE && ns === 'svg') {\n        attrs = guardIESVGBug(attrs);\n      }\n\n      var element = createASTElement(tag, attrs, currentParent);\n      if (ns) {\n        element.ns = ns;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (options.outputSourceRange) {\n          element.start = start$1;\n          element.end = end;\n          element.rawAttrsMap = element.attrsList.reduce(function (cumulated, attr) {\n            cumulated[attr.name] = attr;\n            return cumulated\n          }, {});\n        }\n        attrs.forEach(function (attr) {\n          if (invalidAttributeRE.test(attr.name)) {\n            warn$2(\n              \"Invalid dynamic argument expression: attribute names cannot contain \" +\n              \"spaces, quotes, <, >, / or =.\",\n              {\n                start: attr.start + attr.name.indexOf(\"[\"),\n                end: attr.start + attr.name.length\n              }\n            );\n          }\n        });\n      }\n\n      if (isForbiddenTag(element) && !isServerRendering()) {\n        element.forbidden = true;\n        process.env.NODE_ENV !== 'production' && warn$2(\n          'Templates should only be responsible for mapping the state to the ' +\n          'UI. Avoid placing tags with side-effects in your templates, such as ' +\n          \"<\" + tag + \">\" + ', as they will not be parsed.',\n          { start: element.start }\n        );\n      }\n\n      // apply pre-transforms\n      for (var i = 0; i < preTransforms.length; i++) {\n        element = preTransforms[i](element, options) || element;\n      }\n\n      if (!inVPre) {\n        processPre(element);\n        if (element.pre) {\n          inVPre = true;\n        }\n      }\n      if (platformIsPreTag(element.tag)) {\n        inPre = true;\n      }\n      if (inVPre) {\n        processRawAttrs(element);\n      } else if (!element.processed) {\n        // structural directives\n        processFor(element);\n        processIf(element);\n        processOnce(element);\n      }\n\n      if (!root) {\n        root = element;\n        if (process.env.NODE_ENV !== 'production') {\n          checkRootConstraints(root);\n        }\n      }\n\n      if (!unary) {\n        currentParent = element;\n        stack.push(element);\n      } else {\n        closeElement(element);\n      }\n    },\n\n    end: function end (tag, start, end$1) {\n      var element = stack[stack.length - 1];\n      // pop stack\n      stack.length -= 1;\n      currentParent = stack[stack.length - 1];\n      if (process.env.NODE_ENV !== 'production' && options.outputSourceRange) {\n        element.end = end$1;\n      }\n      closeElement(element);\n    },\n\n    chars: function chars (text, start, end) {\n      if (!currentParent) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (text === template) {\n            warnOnce(\n              'Component template requires a root element, rather than just text.',\n              { start: start }\n            );\n          } else if ((text = text.trim())) {\n            warnOnce(\n              (\"text \\\"\" + text + \"\\\" outside root element will be ignored.\"),\n              { start: start }\n            );\n          }\n        }\n        return\n      }\n      // IE textarea placeholder bug\n      /* istanbul ignore if */\n      if (isIE &&\n        currentParent.tag === 'textarea' &&\n        currentParent.attrsMap.placeholder === text\n      ) {\n        return\n      }\n      var children = currentParent.children;\n      if (inPre || text.trim()) {\n        text = isTextTag(currentParent) ? text : decodeHTMLCached(text);\n      } else if (!children.length) {\n        // remove the whitespace-only node right after an opening tag\n        text = '';\n      } else if (whitespaceOption) {\n        if (whitespaceOption === 'condense') {\n          // in condense mode, remove the whitespace node if it contains\n          // line break, otherwise condense to a single space\n          text = lineBreakRE.test(text) ? '' : ' ';\n        } else {\n          text = ' ';\n        }\n      } else {\n        text = preserveWhitespace ? ' ' : '';\n      }\n      if (text) {\n        if (whitespaceOption === 'condense') {\n          // condense consecutive whitespaces into single space\n          text = text.replace(whitespaceRE$1, ' ');\n        }\n        var res;\n        var child;\n        if (!inVPre && text !== ' ' && (res = parseText(text, delimiters))) {\n          child = {\n            type: 2,\n            expression: res.expression,\n            tokens: res.tokens,\n            text: text\n          };\n        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {\n          child = {\n            type: 3,\n            text: text\n          };\n        }\n        if (child) {\n          if (process.env.NODE_ENV !== 'production' && options.outputSourceRange) {\n            child.start = start;\n            child.end = end;\n          }\n          children.push(child);\n        }\n      }\n    },\n    comment: function comment (text, start, end) {\n      // adding anyting as a sibling to the root node is forbidden\n      // comments should still be allowed, but ignored\n      if (currentParent) {\n        var child = {\n          type: 3,\n          text: text,\n          isComment: true\n        };\n        if (process.env.NODE_ENV !== 'production' && options.outputSourceRange) {\n          child.start = start;\n          child.end = end;\n        }\n        currentParent.children.push(child);\n      }\n    }\n  });\n  return root\n}\n\nfunction processPre (el) {\n  if (getAndRemoveAttr(el, 'v-pre') != null) {\n    el.pre = true;\n  }\n}\n\nfunction processRawAttrs (el) {\n  var list = el.attrsList;\n  var len = list.length;\n  if (len) {\n    var attrs = el.attrs = new Array(len);\n    for (var i = 0; i < len; i++) {\n      attrs[i] = {\n        name: list[i].name,\n        value: JSON.stringify(list[i].value)\n      };\n      if (list[i].start != null) {\n        attrs[i].start = list[i].start;\n        attrs[i].end = list[i].end;\n      }\n    }\n  } else if (!el.pre) {\n    // non root node in pre blocks with no attributes\n    el.plain = true;\n  }\n}\n\nfunction processElement (\n  element,\n  options\n) {\n  processKey(element);\n\n  // determine whether this is a plain element after\n  // removing structural attributes\n  element.plain = (\n    !element.key &&\n    !element.scopedSlots &&\n    !element.attrsList.length\n  );\n\n  processRef(element);\n  processSlotContent(element);\n  processSlotOutlet(element);\n  processComponent(element);\n  for (var i = 0; i < transforms.length; i++) {\n    element = transforms[i](element, options) || element;\n  }\n  processAttrs(element);\n  return element\n}\n\nfunction processKey (el) {\n  var exp = getBindingAttr(el, 'key');\n  if (exp) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (el.tag === 'template') {\n        warn$2(\n          \"<template> cannot be keyed. Place the key on real elements instead.\",\n          getRawBindingAttr(el, 'key')\n        );\n      }\n      if (el.for) {\n        var iterator = el.iterator2 || el.iterator1;\n        var parent = el.parent;\n        if (iterator && iterator === exp && parent && parent.tag === 'transition-group') {\n          warn$2(\n            \"Do not use v-for index as key on <transition-group> children, \" +\n            \"this is the same as not using keys.\",\n            getRawBindingAttr(el, 'key'),\n            true /* tip */\n          );\n        }\n      }\n    }\n    el.key = exp;\n  }\n}\n\nfunction processRef (el) {\n  var ref = getBindingAttr(el, 'ref');\n  if (ref) {\n    el.ref = ref;\n    el.refInFor = checkInFor(el);\n  }\n}\n\nfunction processFor (el) {\n  var exp;\n  if ((exp = getAndRemoveAttr(el, 'v-for'))) {\n    var res = parseFor(exp);\n    if (res) {\n      extend(el, res);\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn$2(\n        (\"Invalid v-for expression: \" + exp),\n        el.rawAttrsMap['v-for']\n      );\n    }\n  }\n}\n\n\n\nfunction parseFor (exp) {\n  var inMatch = exp.match(forAliasRE);\n  if (!inMatch) { return }\n  var res = {};\n  res.for = inMatch[2].trim();\n  var alias = inMatch[1].trim().replace(stripParensRE, '');\n  var iteratorMatch = alias.match(forIteratorRE);\n  if (iteratorMatch) {\n    res.alias = alias.replace(forIteratorRE, '').trim();\n    res.iterator1 = iteratorMatch[1].trim();\n    if (iteratorMatch[2]) {\n      res.iterator2 = iteratorMatch[2].trim();\n    }\n  } else {\n    res.alias = alias;\n  }\n  return res\n}\n\nfunction processIf (el) {\n  var exp = getAndRemoveAttr(el, 'v-if');\n  if (exp) {\n    el.if = exp;\n    addIfCondition(el, {\n      exp: exp,\n      block: el\n    });\n  } else {\n    if (getAndRemoveAttr(el, 'v-else') != null) {\n      el.else = true;\n    }\n    var elseif = getAndRemoveAttr(el, 'v-else-if');\n    if (elseif) {\n      el.elseif = elseif;\n    }\n  }\n}\n\nfunction processIfConditions (el, parent) {\n  var prev = findPrevElement(parent.children);\n  if (prev && prev.if) {\n    addIfCondition(prev, {\n      exp: el.elseif,\n      block: el\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn$2(\n      \"v-\" + (el.elseif ? ('else-if=\"' + el.elseif + '\"') : 'else') + \" \" +\n      \"used on element <\" + (el.tag) + \"> without corresponding v-if.\",\n      el.rawAttrsMap[el.elseif ? 'v-else-if' : 'v-else']\n    );\n  }\n}\n\nfunction findPrevElement (children) {\n  var i = children.length;\n  while (i--) {\n    if (children[i].type === 1) {\n      return children[i]\n    } else {\n      if (process.env.NODE_ENV !== 'production' && children[i].text !== ' ') {\n        warn$2(\n          \"text \\\"\" + (children[i].text.trim()) + \"\\\" between v-if and v-else(-if) \" +\n          \"will be ignored.\",\n          children[i]\n        );\n      }\n      children.pop();\n    }\n  }\n}\n\nfunction addIfCondition (el, condition) {\n  if (!el.ifConditions) {\n    el.ifConditions = [];\n  }\n  el.ifConditions.push(condition);\n}\n\nfunction processOnce (el) {\n  var once$$1 = getAndRemoveAttr(el, 'v-once');\n  if (once$$1 != null) {\n    el.once = true;\n  }\n}\n\n// handle content being passed to a component as slot,\n// e.g. <template slot=\"xxx\">, <div slot-scope=\"xxx\">\nfunction processSlotContent (el) {\n  var slotScope;\n  if (el.tag === 'template') {\n    slotScope = getAndRemoveAttr(el, 'scope');\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && slotScope) {\n      warn$2(\n        \"the \\\"scope\\\" attribute for scoped slots have been deprecated and \" +\n        \"replaced by \\\"slot-scope\\\" since 2.5. The new \\\"slot-scope\\\" attribute \" +\n        \"can also be used on plain elements in addition to <template> to \" +\n        \"denote scoped slots.\",\n        el.rawAttrsMap['scope'],\n        true\n      );\n    }\n    el.slotScope = slotScope || getAndRemoveAttr(el, 'slot-scope');\n  } else if ((slotScope = getAndRemoveAttr(el, 'slot-scope'))) {\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && el.attrsMap['v-for']) {\n      warn$2(\n        \"Ambiguous combined usage of slot-scope and v-for on <\" + (el.tag) + \"> \" +\n        \"(v-for takes higher priority). Use a wrapper <template> for the \" +\n        \"scoped slot to make it clearer.\",\n        el.rawAttrsMap['slot-scope'],\n        true\n      );\n    }\n    el.slotScope = slotScope;\n  }\n\n  // slot=\"xxx\"\n  var slotTarget = getBindingAttr(el, 'slot');\n  if (slotTarget) {\n    el.slotTarget = slotTarget === '\"\"' ? '\"default\"' : slotTarget;\n    el.slotTargetDynamic = !!(el.attrsMap[':slot'] || el.attrsMap['v-bind:slot']);\n    // preserve slot as an attribute for native shadow DOM compat\n    // only for non-scoped slots.\n    if (el.tag !== 'template' && !el.slotScope) {\n      addAttr(el, 'slot', slotTarget, getRawBindingAttr(el, 'slot'));\n    }\n  }\n\n  // 2.6 v-slot syntax\n  {\n    if (el.tag === 'template') {\n      // v-slot on <template>\n      var slotBinding = getAndRemoveAttrByRegex(el, slotRE);\n      if (slotBinding) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (el.slotTarget || el.slotScope) {\n            warn$2(\n              \"Unexpected mixed usage of different slot syntaxes.\",\n              el\n            );\n          }\n          if (el.parent && !maybeComponent(el.parent)) {\n            warn$2(\n              \"<template v-slot> can only appear at the root level inside \" +\n              \"the receiving the component\",\n              el\n            );\n          }\n        }\n        var ref = getSlotName(slotBinding);\n        var name = ref.name;\n        var dynamic = ref.dynamic;\n        el.slotTarget = name;\n        el.slotTargetDynamic = dynamic;\n        el.slotScope = slotBinding.value || emptySlotScopeToken; // force it into a scoped slot for perf\n      }\n    } else {\n      // v-slot on component, denotes default slot\n      var slotBinding$1 = getAndRemoveAttrByRegex(el, slotRE);\n      if (slotBinding$1) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (!maybeComponent(el)) {\n            warn$2(\n              \"v-slot can only be used on components or <template>.\",\n              slotBinding$1\n            );\n          }\n          if (el.slotScope || el.slotTarget) {\n            warn$2(\n              \"Unexpected mixed usage of different slot syntaxes.\",\n              el\n            );\n          }\n          if (el.scopedSlots) {\n            warn$2(\n              \"To avoid scope ambiguity, the default slot should also use \" +\n              \"<template> syntax when there are other named slots.\",\n              slotBinding$1\n            );\n          }\n        }\n        // add the component's children to its default slot\n        var slots = el.scopedSlots || (el.scopedSlots = {});\n        var ref$1 = getSlotName(slotBinding$1);\n        var name$1 = ref$1.name;\n        var dynamic$1 = ref$1.dynamic;\n        var slotContainer = slots[name$1] = createASTElement('template', [], el);\n        slotContainer.slotTarget = name$1;\n        slotContainer.slotTargetDynamic = dynamic$1;\n        slotContainer.children = el.children.filter(function (c) {\n          if (!c.slotScope) {\n            c.parent = slotContainer;\n            return true\n          }\n        });\n        slotContainer.slotScope = slotBinding$1.value || emptySlotScopeToken;\n        // remove children as they are returned from scopedSlots now\n        el.children = [];\n        // mark el non-plain so data gets generated\n        el.plain = false;\n      }\n    }\n  }\n}\n\nfunction getSlotName (binding) {\n  var name = binding.name.replace(slotRE, '');\n  if (!name) {\n    if (binding.name[0] !== '#') {\n      name = 'default';\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn$2(\n        \"v-slot shorthand syntax requires a slot name.\",\n        binding\n      );\n    }\n  }\n  return dynamicArgRE.test(name)\n    // dynamic [name]\n    ? { name: name.slice(1, -1), dynamic: true }\n    // static name\n    : { name: (\"\\\"\" + name + \"\\\"\"), dynamic: false }\n}\n\n// handle <slot/> outlets\nfunction processSlotOutlet (el) {\n  if (el.tag === 'slot') {\n    el.slotName = getBindingAttr(el, 'name');\n    if (process.env.NODE_ENV !== 'production' && el.key) {\n      warn$2(\n        \"`key` does not work on <slot> because slots are abstract outlets \" +\n        \"and can possibly expand into multiple elements. \" +\n        \"Use the key on a wrapping element instead.\",\n        getRawBindingAttr(el, 'key')\n      );\n    }\n  }\n}\n\nfunction processComponent (el) {\n  var binding;\n  if ((binding = getBindingAttr(el, 'is'))) {\n    el.component = binding;\n  }\n  if (getAndRemoveAttr(el, 'inline-template') != null) {\n    el.inlineTemplate = true;\n  }\n}\n\nfunction processAttrs (el) {\n  var list = el.attrsList;\n  var i, l, name, rawName, value, modifiers, syncGen, isDynamic;\n  for (i = 0, l = list.length; i < l; i++) {\n    name = rawName = list[i].name;\n    value = list[i].value;\n    if (dirRE.test(name)) {\n      // mark element as dynamic\n      el.hasBindings = true;\n      // modifiers\n      modifiers = parseModifiers(name.replace(dirRE, ''));\n      // support .foo shorthand syntax for the .prop modifier\n      if (modifiers) {\n        name = name.replace(modifierRE, '');\n      }\n      if (bindRE.test(name)) { // v-bind\n        name = name.replace(bindRE, '');\n        value = parseFilters(value);\n        isDynamic = dynamicArgRE.test(name);\n        if (isDynamic) {\n          name = name.slice(1, -1);\n        }\n        if (\n          process.env.NODE_ENV !== 'production' &&\n          value.trim().length === 0\n        ) {\n          warn$2(\n            (\"The value for a v-bind expression cannot be empty. Found in \\\"v-bind:\" + name + \"\\\"\")\n          );\n        }\n        if (modifiers) {\n          if (modifiers.prop && !isDynamic) {\n            name = camelize(name);\n            if (name === 'innerHtml') { name = 'innerHTML'; }\n          }\n          if (modifiers.camel && !isDynamic) {\n            name = camelize(name);\n          }\n          if (modifiers.sync) {\n            syncGen = genAssignmentCode(value, \"$event\");\n            if (!isDynamic) {\n              addHandler(\n                el,\n                (\"update:\" + (camelize(name))),\n                syncGen,\n                null,\n                false,\n                warn$2,\n                list[i]\n              );\n              if (hyphenate(name) !== camelize(name)) {\n                addHandler(\n                  el,\n                  (\"update:\" + (hyphenate(name))),\n                  syncGen,\n                  null,\n                  false,\n                  warn$2,\n                  list[i]\n                );\n              }\n            } else {\n              // handler w/ dynamic event name\n              addHandler(\n                el,\n                (\"\\\"update:\\\"+(\" + name + \")\"),\n                syncGen,\n                null,\n                false,\n                warn$2,\n                list[i],\n                true // dynamic\n              );\n            }\n          }\n        }\n        if ((modifiers && modifiers.prop) || (\n          !el.component && platformMustUseProp(el.tag, el.attrsMap.type, name)\n        )) {\n          addProp(el, name, value, list[i], isDynamic);\n        } else {\n          addAttr(el, name, value, list[i], isDynamic);\n        }\n      } else if (onRE.test(name)) { // v-on\n        name = name.replace(onRE, '');\n        isDynamic = dynamicArgRE.test(name);\n        if (isDynamic) {\n          name = name.slice(1, -1);\n        }\n        addHandler(el, name, value, modifiers, false, warn$2, list[i], isDynamic);\n      } else { // normal directives\n        name = name.replace(dirRE, '');\n        // parse arg\n        var argMatch = name.match(argRE);\n        var arg = argMatch && argMatch[1];\n        isDynamic = false;\n        if (arg) {\n          name = name.slice(0, -(arg.length + 1));\n          if (dynamicArgRE.test(arg)) {\n            arg = arg.slice(1, -1);\n            isDynamic = true;\n          }\n        }\n        addDirective(el, name, rawName, value, arg, isDynamic, modifiers, list[i]);\n        if (process.env.NODE_ENV !== 'production' && name === 'model') {\n          checkForAliasModel(el, value);\n        }\n      }\n    } else {\n      // literal attribute\n      if (process.env.NODE_ENV !== 'production') {\n        var res = parseText(value, delimiters);\n        if (res) {\n          warn$2(\n            name + \"=\\\"\" + value + \"\\\": \" +\n            'Interpolation inside attributes has been removed. ' +\n            'Use v-bind or the colon shorthand instead. For example, ' +\n            'instead of <div id=\"{{ val }}\">, use <div :id=\"val\">.',\n            list[i]\n          );\n        }\n      }\n      addAttr(el, name, JSON.stringify(value), list[i]);\n      // #6887 firefox doesn't update muted state if set via attribute\n      // even immediately after element creation\n      if (!el.component &&\n          name === 'muted' &&\n          platformMustUseProp(el.tag, el.attrsMap.type, name)) {\n        addProp(el, name, 'true', list[i]);\n      }\n    }\n  }\n}\n\nfunction checkInFor (el) {\n  var parent = el;\n  while (parent) {\n    if (parent.for !== undefined) {\n      return true\n    }\n    parent = parent.parent;\n  }\n  return false\n}\n\nfunction parseModifiers (name) {\n  var match = name.match(modifierRE);\n  if (match) {\n    var ret = {};\n    match.forEach(function (m) { ret[m.slice(1)] = true; });\n    return ret\n  }\n}\n\nfunction makeAttrsMap (attrs) {\n  var map = {};\n  for (var i = 0, l = attrs.length; i < l; i++) {\n    if (\n      process.env.NODE_ENV !== 'production' &&\n      map[attrs[i].name] && !isIE && !isEdge\n    ) {\n      warn$2('duplicate attribute: ' + attrs[i].name, attrs[i]);\n    }\n    map[attrs[i].name] = attrs[i].value;\n  }\n  return map\n}\n\n// for script (e.g. type=\"x/template\") or style, do not decode content\nfunction isTextTag (el) {\n  return el.tag === 'script' || el.tag === 'style'\n}\n\nfunction isForbiddenTag (el) {\n  return (\n    el.tag === 'style' ||\n    (el.tag === 'script' && (\n      !el.attrsMap.type ||\n      el.attrsMap.type === 'text/javascript'\n    ))\n  )\n}\n\nvar ieNSBug = /^xmlns:NS\\d+/;\nvar ieNSPrefix = /^NS\\d+:/;\n\n/* istanbul ignore next */\nfunction guardIESVGBug (attrs) {\n  var res = [];\n  for (var i = 0; i < attrs.length; i++) {\n    var attr = attrs[i];\n    if (!ieNSBug.test(attr.name)) {\n      attr.name = attr.name.replace(ieNSPrefix, '');\n      res.push(attr);\n    }\n  }\n  return res\n}\n\nfunction checkForAliasModel (el, value) {\n  var _el = el;\n  while (_el) {\n    if (_el.for && _el.alias === value) {\n      warn$2(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n        \"You are binding v-model directly to a v-for iteration alias. \" +\n        \"This will not be able to modify the v-for source array because \" +\n        \"writing to the alias is like modifying a function local variable. \" +\n        \"Consider using an array of objects and use v-model on an object property instead.\",\n        el.rawAttrsMap['v-model']\n      );\n    }\n    _el = _el.parent;\n  }\n}\n\n/*  */\n\nfunction preTransformNode (el, options) {\n  if (el.tag === 'input') {\n    var map = el.attrsMap;\n    if (!map['v-model']) {\n      return\n    }\n\n    var typeBinding;\n    if (map[':type'] || map['v-bind:type']) {\n      typeBinding = getBindingAttr(el, 'type');\n    }\n    if (!map.type && !typeBinding && map['v-bind']) {\n      typeBinding = \"(\" + (map['v-bind']) + \").type\";\n    }\n\n    if (typeBinding) {\n      var ifCondition = getAndRemoveAttr(el, 'v-if', true);\n      var ifConditionExtra = ifCondition ? (\"&&(\" + ifCondition + \")\") : \"\";\n      var hasElse = getAndRemoveAttr(el, 'v-else', true) != null;\n      var elseIfCondition = getAndRemoveAttr(el, 'v-else-if', true);\n      // 1. checkbox\n      var branch0 = cloneASTElement(el);\n      // process for on the main node\n      processFor(branch0);\n      addRawAttr(branch0, 'type', 'checkbox');\n      processElement(branch0, options);\n      branch0.processed = true; // prevent it from double-processed\n      branch0.if = \"(\" + typeBinding + \")==='checkbox'\" + ifConditionExtra;\n      addIfCondition(branch0, {\n        exp: branch0.if,\n        block: branch0\n      });\n      // 2. add radio else-if condition\n      var branch1 = cloneASTElement(el);\n      getAndRemoveAttr(branch1, 'v-for', true);\n      addRawAttr(branch1, 'type', 'radio');\n      processElement(branch1, options);\n      addIfCondition(branch0, {\n        exp: \"(\" + typeBinding + \")==='radio'\" + ifConditionExtra,\n        block: branch1\n      });\n      // 3. other\n      var branch2 = cloneASTElement(el);\n      getAndRemoveAttr(branch2, 'v-for', true);\n      addRawAttr(branch2, ':type', typeBinding);\n      processElement(branch2, options);\n      addIfCondition(branch0, {\n        exp: ifCondition,\n        block: branch2\n      });\n\n      if (hasElse) {\n        branch0.else = true;\n      } else if (elseIfCondition) {\n        branch0.elseif = elseIfCondition;\n      }\n\n      return branch0\n    }\n  }\n}\n\nfunction cloneASTElement (el) {\n  return createASTElement(el.tag, el.attrsList.slice(), el.parent)\n}\n\nvar model$1 = {\n  preTransformNode: preTransformNode\n};\n\nvar modules$1 = [\n  klass$1,\n  style$1,\n  model$1\n];\n\n/*  */\n\nfunction text (el, dir) {\n  if (dir.value) {\n    addProp(el, 'textContent', (\"_s(\" + (dir.value) + \")\"), dir);\n  }\n}\n\n/*  */\n\nfunction html (el, dir) {\n  if (dir.value) {\n    addProp(el, 'innerHTML', (\"_s(\" + (dir.value) + \")\"), dir);\n  }\n}\n\nvar directives$1 = {\n  model: model,\n  text: text,\n  html: html\n};\n\n/*  */\n\nvar baseOptions = {\n  expectHTML: true,\n  modules: modules$1,\n  directives: directives$1,\n  isPreTag: isPreTag,\n  isUnaryTag: isUnaryTag,\n  mustUseProp: mustUseProp,\n  canBeLeftOpenTag: canBeLeftOpenTag,\n  isReservedTag: isReservedTag,\n  getTagNamespace: getTagNamespace,\n  staticKeys: genStaticKeys(modules$1)\n};\n\n/*  */\n\nvar isStaticKey;\nvar isPlatformReservedTag;\n\nvar genStaticKeysCached = cached(genStaticKeys$1);\n\n/**\n * Goal of the optimizer: walk the generated template AST tree\n * and detect sub-trees that are purely static, i.e. parts of\n * the DOM that never needs to change.\n *\n * Once we detect these sub-trees, we can:\n *\n * 1. Hoist them into constants, so that we no longer need to\n *    create fresh nodes for them on each re-render;\n * 2. Completely skip them in the patching process.\n */\nfunction optimize (root, options) {\n  if (!root) { return }\n  isStaticKey = genStaticKeysCached(options.staticKeys || '');\n  isPlatformReservedTag = options.isReservedTag || no;\n  // first pass: mark all non-static nodes.\n  markStatic$1(root);\n  // second pass: mark static roots.\n  markStaticRoots(root, false);\n}\n\nfunction genStaticKeys$1 (keys) {\n  return makeMap(\n    'type,tag,attrsList,attrsMap,plain,parent,children,attrs,start,end,rawAttrsMap' +\n    (keys ? ',' + keys : '')\n  )\n}\n\nfunction markStatic$1 (node) {\n  node.static = isStatic(node);\n  if (node.type === 1) {\n    // do not make component slot content static. this avoids\n    // 1. components not able to mutate slot nodes\n    // 2. static slot content fails for hot-reloading\n    if (\n      !isPlatformReservedTag(node.tag) &&\n      node.tag !== 'slot' &&\n      node.attrsMap['inline-template'] == null\n    ) {\n      return\n    }\n    for (var i = 0, l = node.children.length; i < l; i++) {\n      var child = node.children[i];\n      markStatic$1(child);\n      if (!child.static) {\n        node.static = false;\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        var block = node.ifConditions[i$1].block;\n        markStatic$1(block);\n        if (!block.static) {\n          node.static = false;\n        }\n      }\n    }\n  }\n}\n\nfunction markStaticRoots (node, isInFor) {\n  if (node.type === 1) {\n    if (node.static || node.once) {\n      node.staticInFor = isInFor;\n    }\n    // For a node to qualify as a static root, it should have children that\n    // are not just static text. Otherwise the cost of hoisting out will\n    // outweigh the benefits and it's better off to just always render it fresh.\n    if (node.static && node.children.length && !(\n      node.children.length === 1 &&\n      node.children[0].type === 3\n    )) {\n      node.staticRoot = true;\n      return\n    } else {\n      node.staticRoot = false;\n    }\n    if (node.children) {\n      for (var i = 0, l = node.children.length; i < l; i++) {\n        markStaticRoots(node.children[i], isInFor || !!node.for);\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        markStaticRoots(node.ifConditions[i$1].block, isInFor);\n      }\n    }\n  }\n}\n\nfunction isStatic (node) {\n  if (node.type === 2) { // expression\n    return false\n  }\n  if (node.type === 3) { // text\n    return true\n  }\n  return !!(node.pre || (\n    !node.hasBindings && // no dynamic bindings\n    !node.if && !node.for && // not v-if or v-for or v-else\n    !isBuiltInTag(node.tag) && // not a built-in\n    isPlatformReservedTag(node.tag) && // not a component\n    !isDirectChildOfTemplateFor(node) &&\n    Object.keys(node).every(isStaticKey)\n  ))\n}\n\nfunction isDirectChildOfTemplateFor (node) {\n  while (node.parent) {\n    node = node.parent;\n    if (node.tag !== 'template') {\n      return false\n    }\n    if (node.for) {\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\nvar fnExpRE = /^([\\w$_]+|\\([^)]*?\\))\\s*=>|^function\\s*\\(/;\nvar fnInvokeRE = /\\([^)]*?\\);*$/;\nvar simplePathRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['[^']*?']|\\[\"[^\"]*?\"]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*$/;\n\n// KeyboardEvent.keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40,\n  'delete': [8, 46]\n};\n\n// KeyboardEvent.key aliases\nvar keyNames = {\n  // #7880: IE11 and Edge use `Esc` for Escape key name.\n  esc: ['Esc', 'Escape'],\n  tab: 'Tab',\n  enter: 'Enter',\n  // #9112: IE11 uses `Spacebar` for Space key name.\n  space: [' ', 'Spacebar'],\n  // #7806: IE11 uses key names without `Arrow` prefix for arrow keys.\n  up: ['Up', 'ArrowUp'],\n  left: ['Left', 'ArrowLeft'],\n  right: ['Right', 'ArrowRight'],\n  down: ['Down', 'ArrowDown'],\n  // #9112: IE11 uses `Del` for Delete key name.\n  'delete': ['Backspace', 'Delete', 'Del']\n};\n\n// #4868: modifiers that prevent the execution of the listener\n// need to explicitly return null so that we can determine whether to remove\n// the listener for .once\nvar genGuard = function (condition) { return (\"if(\" + condition + \")return null;\"); };\n\nvar modifierCode = {\n  stop: '$event.stopPropagation();',\n  prevent: '$event.preventDefault();',\n  self: genGuard(\"$event.target !== $event.currentTarget\"),\n  ctrl: genGuard(\"!$event.ctrlKey\"),\n  shift: genGuard(\"!$event.shiftKey\"),\n  alt: genGuard(\"!$event.altKey\"),\n  meta: genGuard(\"!$event.metaKey\"),\n  left: genGuard(\"'button' in $event && $event.button !== 0\"),\n  middle: genGuard(\"'button' in $event && $event.button !== 1\"),\n  right: genGuard(\"'button' in $event && $event.button !== 2\")\n};\n\nfunction genHandlers (\n  events,\n  isNative\n) {\n  var prefix = isNative ? 'nativeOn:' : 'on:';\n  var staticHandlers = \"\";\n  var dynamicHandlers = \"\";\n  for (var name in events) {\n    var handlerCode = genHandler(events[name]);\n    if (events[name] && events[name].dynamic) {\n      dynamicHandlers += name + \",\" + handlerCode + \",\";\n    } else {\n      staticHandlers += \"\\\"\" + name + \"\\\":\" + handlerCode + \",\";\n    }\n  }\n  staticHandlers = \"{\" + (staticHandlers.slice(0, -1)) + \"}\";\n  if (dynamicHandlers) {\n    return prefix + \"_d(\" + staticHandlers + \",[\" + (dynamicHandlers.slice(0, -1)) + \"])\"\n  } else {\n    return prefix + staticHandlers\n  }\n}\n\nfunction genHandler (handler) {\n  if (!handler) {\n    return 'function(){}'\n  }\n\n  if (Array.isArray(handler)) {\n    return (\"[\" + (handler.map(function (handler) { return genHandler(handler); }).join(',')) + \"]\")\n  }\n\n  var isMethodPath = simplePathRE.test(handler.value);\n  var isFunctionExpression = fnExpRE.test(handler.value);\n  var isFunctionInvocation = simplePathRE.test(handler.value.replace(fnInvokeRE, ''));\n\n  if (!handler.modifiers) {\n    if (isMethodPath || isFunctionExpression) {\n      return handler.value\n    }\n    return (\"function($event){\" + (isFunctionInvocation ? (\"return \" + (handler.value)) : handler.value) + \"}\") // inline statement\n  } else {\n    var code = '';\n    var genModifierCode = '';\n    var keys = [];\n    for (var key in handler.modifiers) {\n      if (modifierCode[key]) {\n        genModifierCode += modifierCode[key];\n        // left/right\n        if (keyCodes[key]) {\n          keys.push(key);\n        }\n      } else if (key === 'exact') {\n        var modifiers = (handler.modifiers);\n        genModifierCode += genGuard(\n          ['ctrl', 'shift', 'alt', 'meta']\n            .filter(function (keyModifier) { return !modifiers[keyModifier]; })\n            .map(function (keyModifier) { return (\"$event.\" + keyModifier + \"Key\"); })\n            .join('||')\n        );\n      } else {\n        keys.push(key);\n      }\n    }\n    if (keys.length) {\n      code += genKeyFilter(keys);\n    }\n    // Make sure modifiers like prevent and stop get executed after key filtering\n    if (genModifierCode) {\n      code += genModifierCode;\n    }\n    var handlerCode = isMethodPath\n      ? (\"return \" + (handler.value) + \"($event)\")\n      : isFunctionExpression\n        ? (\"return (\" + (handler.value) + \")($event)\")\n        : isFunctionInvocation\n          ? (\"return \" + (handler.value))\n          : handler.value;\n    return (\"function($event){\" + code + handlerCode + \"}\")\n  }\n}\n\nfunction genKeyFilter (keys) {\n  return (\n    // make sure the key filters only apply to KeyboardEvents\n    // #9441: can't use 'keyCode' in $event because Chrome autofill fires fake\n    // key events that do not have keyCode property...\n    \"if(!$event.type.indexOf('key')&&\" +\n    (keys.map(genFilterCode).join('&&')) + \")return null;\"\n  )\n}\n\nfunction genFilterCode (key) {\n  var keyVal = parseInt(key, 10);\n  if (keyVal) {\n    return (\"$event.keyCode!==\" + keyVal)\n  }\n  var keyCode = keyCodes[key];\n  var keyName = keyNames[key];\n  return (\n    \"_k($event.keyCode,\" +\n    (JSON.stringify(key)) + \",\" +\n    (JSON.stringify(keyCode)) + \",\" +\n    \"$event.key,\" +\n    \"\" + (JSON.stringify(keyName)) +\n    \")\"\n  )\n}\n\n/*  */\n\nfunction on (el, dir) {\n  if (process.env.NODE_ENV !== 'production' && dir.modifiers) {\n    warn(\"v-on without argument does not support modifiers.\");\n  }\n  el.wrapListeners = function (code) { return (\"_g(\" + code + \",\" + (dir.value) + \")\"); };\n}\n\n/*  */\n\nfunction bind$1 (el, dir) {\n  el.wrapData = function (code) {\n    return (\"_b(\" + code + \",'\" + (el.tag) + \"',\" + (dir.value) + \",\" + (dir.modifiers && dir.modifiers.prop ? 'true' : 'false') + (dir.modifiers && dir.modifiers.sync ? ',true' : '') + \")\")\n  };\n}\n\n/*  */\n\nvar baseDirectives = {\n  on: on,\n  bind: bind$1,\n  cloak: noop\n};\n\n/*  */\n\n\n\n\n\nvar CodegenState = function CodegenState (options) {\n  this.options = options;\n  this.warn = options.warn || baseWarn;\n  this.transforms = pluckModuleFunction(options.modules, 'transformCode');\n  this.dataGenFns = pluckModuleFunction(options.modules, 'genData');\n  this.directives = extend(extend({}, baseDirectives), options.directives);\n  var isReservedTag = options.isReservedTag || no;\n  this.maybeComponent = function (el) { return !!el.component || !isReservedTag(el.tag); };\n  this.onceId = 0;\n  this.staticRenderFns = [];\n  this.pre = false;\n};\n\n\n\nfunction generate (\n  ast,\n  options\n) {\n  var state = new CodegenState(options);\n  var code = ast ? genElement(ast, state) : '_c(\"div\")';\n  return {\n    render: (\"with(this){return \" + code + \"}\"),\n    staticRenderFns: state.staticRenderFns\n  }\n}\n\nfunction genElement (el, state) {\n  if (el.parent) {\n    el.pre = el.pre || el.parent.pre;\n  }\n\n  if (el.staticRoot && !el.staticProcessed) {\n    return genStatic(el, state)\n  } else if (el.once && !el.onceProcessed) {\n    return genOnce(el, state)\n  } else if (el.for && !el.forProcessed) {\n    return genFor(el, state)\n  } else if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.tag === 'template' && !el.slotTarget && !state.pre) {\n    return genChildren(el, state) || 'void 0'\n  } else if (el.tag === 'slot') {\n    return genSlot(el, state)\n  } else {\n    // component or element\n    var code;\n    if (el.component) {\n      code = genComponent(el.component, el, state);\n    } else {\n      var data;\n      if (!el.plain || (el.pre && state.maybeComponent(el))) {\n        data = genData$2(el, state);\n      }\n\n      var children = el.inlineTemplate ? null : genChildren(el, state, true);\n      code = \"_c('\" + (el.tag) + \"'\" + (data ? (\",\" + data) : '') + (children ? (\",\" + children) : '') + \")\";\n    }\n    // module transforms\n    for (var i = 0; i < state.transforms.length; i++) {\n      code = state.transforms[i](el, code);\n    }\n    return code\n  }\n}\n\n// hoist static sub-trees out\nfunction genStatic (el, state) {\n  el.staticProcessed = true;\n  // Some elements (templates) need to behave differently inside of a v-pre\n  // node.  All pre nodes are static roots, so we can use this as a location to\n  // wrap a state change and reset it upon exiting the pre node.\n  var originalPreState = state.pre;\n  if (el.pre) {\n    state.pre = el.pre;\n  }\n  state.staticRenderFns.push((\"with(this){return \" + (genElement(el, state)) + \"}\"));\n  state.pre = originalPreState;\n  return (\"_m(\" + (state.staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + \")\")\n}\n\n// v-once\nfunction genOnce (el, state) {\n  el.onceProcessed = true;\n  if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.staticInFor) {\n    var key = '';\n    var parent = el.parent;\n    while (parent) {\n      if (parent.for) {\n        key = parent.key;\n        break\n      }\n      parent = parent.parent;\n    }\n    if (!key) {\n      process.env.NODE_ENV !== 'production' && state.warn(\n        \"v-once can only be used inside v-for that is keyed. \",\n        el.rawAttrsMap['v-once']\n      );\n      return genElement(el, state)\n    }\n    return (\"_o(\" + (genElement(el, state)) + \",\" + (state.onceId++) + \",\" + key + \")\")\n  } else {\n    return genStatic(el, state)\n  }\n}\n\nfunction genIf (\n  el,\n  state,\n  altGen,\n  altEmpty\n) {\n  el.ifProcessed = true; // avoid recursion\n  return genIfConditions(el.ifConditions.slice(), state, altGen, altEmpty)\n}\n\nfunction genIfConditions (\n  conditions,\n  state,\n  altGen,\n  altEmpty\n) {\n  if (!conditions.length) {\n    return altEmpty || '_e()'\n  }\n\n  var condition = conditions.shift();\n  if (condition.exp) {\n    return (\"(\" + (condition.exp) + \")?\" + (genTernaryExp(condition.block)) + \":\" + (genIfConditions(conditions, state, altGen, altEmpty)))\n  } else {\n    return (\"\" + (genTernaryExp(condition.block)))\n  }\n\n  // v-if with v-once should generate code like (a)?_m(0):_m(1)\n  function genTernaryExp (el) {\n    return altGen\n      ? altGen(el, state)\n      : el.once\n        ? genOnce(el, state)\n        : genElement(el, state)\n  }\n}\n\nfunction genFor (\n  el,\n  state,\n  altGen,\n  altHelper\n) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n\n  if (process.env.NODE_ENV !== 'production' &&\n    state.maybeComponent(el) &&\n    el.tag !== 'slot' &&\n    el.tag !== 'template' &&\n    !el.key\n  ) {\n    state.warn(\n      \"<\" + (el.tag) + \" v-for=\\\"\" + alias + \" in \" + exp + \"\\\">: component lists rendered with \" +\n      \"v-for should have explicit keys. \" +\n      \"See https://vuejs.org/guide/list.html#key for more info.\",\n      el.rawAttrsMap['v-for'],\n      true /* tip */\n    );\n  }\n\n  el.forProcessed = true; // avoid recursion\n  return (altHelper || '_l') + \"((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + ((altGen || genElement)(el, state)) +\n    '})'\n}\n\nfunction genData$2 (el, state) {\n  var data = '{';\n\n  // directives first.\n  // directives may mutate the el's other properties before they are generated.\n  var dirs = genDirectives(el, state);\n  if (dirs) { data += dirs + ','; }\n\n  // key\n  if (el.key) {\n    data += \"key:\" + (el.key) + \",\";\n  }\n  // ref\n  if (el.ref) {\n    data += \"ref:\" + (el.ref) + \",\";\n  }\n  if (el.refInFor) {\n    data += \"refInFor:true,\";\n  }\n  // pre\n  if (el.pre) {\n    data += \"pre:true,\";\n  }\n  // record original tag name for components using \"is\" attribute\n  if (el.component) {\n    data += \"tag:\\\"\" + (el.tag) + \"\\\",\";\n  }\n  // module data generation functions\n  for (var i = 0; i < state.dataGenFns.length; i++) {\n    data += state.dataGenFns[i](el);\n  }\n  // attributes\n  if (el.attrs) {\n    data += \"attrs:\" + (genProps(el.attrs)) + \",\";\n  }\n  // DOM props\n  if (el.props) {\n    data += \"domProps:\" + (genProps(el.props)) + \",\";\n  }\n  // event handlers\n  if (el.events) {\n    data += (genHandlers(el.events, false)) + \",\";\n  }\n  if (el.nativeEvents) {\n    data += (genHandlers(el.nativeEvents, true)) + \",\";\n  }\n  // slot target\n  // only for non-scoped slots\n  if (el.slotTarget && !el.slotScope) {\n    data += \"slot:\" + (el.slotTarget) + \",\";\n  }\n  // scoped slots\n  if (el.scopedSlots) {\n    data += (genScopedSlots(el, el.scopedSlots, state)) + \",\";\n  }\n  // component v-model\n  if (el.model) {\n    data += \"model:{value:\" + (el.model.value) + \",callback:\" + (el.model.callback) + \",expression:\" + (el.model.expression) + \"},\";\n  }\n  // inline-template\n  if (el.inlineTemplate) {\n    var inlineTemplate = genInlineTemplate(el, state);\n    if (inlineTemplate) {\n      data += inlineTemplate + \",\";\n    }\n  }\n  data = data.replace(/,$/, '') + '}';\n  // v-bind dynamic argument wrap\n  // v-bind with dynamic arguments must be applied using the same v-bind object\n  // merge helper so that class/style/mustUseProp attrs are handled correctly.\n  if (el.dynamicAttrs) {\n    data = \"_b(\" + data + \",\\\"\" + (el.tag) + \"\\\",\" + (genProps(el.dynamicAttrs)) + \")\";\n  }\n  // v-bind data wrap\n  if (el.wrapData) {\n    data = el.wrapData(data);\n  }\n  // v-on data wrap\n  if (el.wrapListeners) {\n    data = el.wrapListeners(data);\n  }\n  return data\n}\n\nfunction genDirectives (el, state) {\n  var dirs = el.directives;\n  if (!dirs) { return }\n  var res = 'directives:[';\n  var hasRuntime = false;\n  var i, l, dir, needRuntime;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    needRuntime = true;\n    var gen = state.directives[dir.name];\n    if (gen) {\n      // compile-time directive that manipulates AST.\n      // returns true if it also needs a runtime counterpart.\n      needRuntime = !!gen(el, dir, state.warn);\n    }\n    if (needRuntime) {\n      hasRuntime = true;\n      res += \"{name:\\\"\" + (dir.name) + \"\\\",rawName:\\\"\" + (dir.rawName) + \"\\\"\" + (dir.value ? (\",value:(\" + (dir.value) + \"),expression:\" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (\",arg:\" + (dir.isDynamicArg ? dir.arg : (\"\\\"\" + (dir.arg) + \"\\\"\"))) : '') + (dir.modifiers ? (\",modifiers:\" + (JSON.stringify(dir.modifiers))) : '') + \"},\";\n    }\n  }\n  if (hasRuntime) {\n    return res.slice(0, -1) + ']'\n  }\n}\n\nfunction genInlineTemplate (el, state) {\n  var ast = el.children[0];\n  if (process.env.NODE_ENV !== 'production' && (\n    el.children.length !== 1 || ast.type !== 1\n  )) {\n    state.warn(\n      'Inline-template components must have exactly one child element.',\n      { start: el.start }\n    );\n  }\n  if (ast && ast.type === 1) {\n    var inlineRenderFns = generate(ast, state.options);\n    return (\"inlineTemplate:{render:function(){\" + (inlineRenderFns.render) + \"},staticRenderFns:[\" + (inlineRenderFns.staticRenderFns.map(function (code) { return (\"function(){\" + code + \"}\"); }).join(',')) + \"]}\")\n  }\n}\n\nfunction genScopedSlots (\n  el,\n  slots,\n  state\n) {\n  // by default scoped slots are considered \"stable\", this allows child\n  // components with only scoped slots to skip forced updates from parent.\n  // but in some cases we have to bail-out of this optimization\n  // for example if the slot contains dynamic names, has v-if or v-for on them...\n  var needsForceUpdate = el.for || Object.keys(slots).some(function (key) {\n    var slot = slots[key];\n    return (\n      slot.slotTargetDynamic ||\n      slot.if ||\n      slot.for ||\n      containsSlotChild(slot) // is passing down slot from parent which may be dynamic\n    )\n  });\n\n  // #9534: if a component with scoped slots is inside a conditional branch,\n  // it's possible for the same component to be reused but with different\n  // compiled slot content. To avoid that, we generate a unique key based on\n  // the generated code of all the slot contents.\n  var needsKey = !!el.if;\n\n  // OR when it is inside another scoped slot or v-for (the reactivity may be\n  // disconnected due to the intermediate scope variable)\n  // #9438, #9506\n  // TODO: this can be further optimized by properly analyzing in-scope bindings\n  // and skip force updating ones that do not actually use scope variables.\n  if (!needsForceUpdate) {\n    var parent = el.parent;\n    while (parent) {\n      if (\n        (parent.slotScope && parent.slotScope !== emptySlotScopeToken) ||\n        parent.for\n      ) {\n        needsForceUpdate = true;\n        break\n      }\n      if (parent.if) {\n        needsKey = true;\n      }\n      parent = parent.parent;\n    }\n  }\n\n  var generatedSlots = Object.keys(slots)\n    .map(function (key) { return genScopedSlot(slots[key], state); })\n    .join(',');\n\n  return (\"scopedSlots:_u([\" + generatedSlots + \"]\" + (needsForceUpdate ? \",null,true\" : \"\") + (!needsForceUpdate && needsKey ? (\",null,false,\" + (hash(generatedSlots))) : \"\") + \")\")\n}\n\nfunction hash(str) {\n  var hash = 5381;\n  var i = str.length;\n  while(i) {\n    hash = (hash * 33) ^ str.charCodeAt(--i);\n  }\n  return hash >>> 0\n}\n\nfunction containsSlotChild (el) {\n  if (el.type === 1) {\n    if (el.tag === 'slot') {\n      return true\n    }\n    return el.children.some(containsSlotChild)\n  }\n  return false\n}\n\nfunction genScopedSlot (\n  el,\n  state\n) {\n  var isLegacySyntax = el.attrsMap['slot-scope'];\n  if (el.if && !el.ifProcessed && !isLegacySyntax) {\n    return genIf(el, state, genScopedSlot, \"null\")\n  }\n  if (el.for && !el.forProcessed) {\n    return genFor(el, state, genScopedSlot)\n  }\n  var slotScope = el.slotScope === emptySlotScopeToken\n    ? \"\"\n    : String(el.slotScope);\n  var fn = \"function(\" + slotScope + \"){\" +\n    \"return \" + (el.tag === 'template'\n      ? el.if && isLegacySyntax\n        ? (\"(\" + (el.if) + \")?\" + (genChildren(el, state) || 'undefined') + \":undefined\")\n        : genChildren(el, state) || 'undefined'\n      : genElement(el, state)) + \"}\";\n  // reverse proxy v-slot without scope on this.$slots\n  var reverseProxy = slotScope ? \"\" : \",proxy:true\";\n  return (\"{key:\" + (el.slotTarget || \"\\\"default\\\"\") + \",fn:\" + fn + reverseProxy + \"}\")\n}\n\nfunction genChildren (\n  el,\n  state,\n  checkSkip,\n  altGenElement,\n  altGenNode\n) {\n  var children = el.children;\n  if (children.length) {\n    var el$1 = children[0];\n    // optimize single v-for\n    if (children.length === 1 &&\n      el$1.for &&\n      el$1.tag !== 'template' &&\n      el$1.tag !== 'slot'\n    ) {\n      var normalizationType = checkSkip\n        ? state.maybeComponent(el$1) ? \",1\" : \",0\"\n        : \"\";\n      return (\"\" + ((altGenElement || genElement)(el$1, state)) + normalizationType)\n    }\n    var normalizationType$1 = checkSkip\n      ? getNormalizationType(children, state.maybeComponent)\n      : 0;\n    var gen = altGenNode || genNode;\n    return (\"[\" + (children.map(function (c) { return gen(c, state); }).join(',')) + \"]\" + (normalizationType$1 ? (\",\" + normalizationType$1) : ''))\n  }\n}\n\n// determine the normalization needed for the children array.\n// 0: no normalization needed\n// 1: simple normalization needed (possible 1-level deep nested array)\n// 2: full normalization needed\nfunction getNormalizationType (\n  children,\n  maybeComponent\n) {\n  var res = 0;\n  for (var i = 0; i < children.length; i++) {\n    var el = children[i];\n    if (el.type !== 1) {\n      continue\n    }\n    if (needsNormalization(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {\n      res = 2;\n      break\n    }\n    if (maybeComponent(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return maybeComponent(c.block); }))) {\n      res = 1;\n    }\n  }\n  return res\n}\n\nfunction needsNormalization (el) {\n  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'\n}\n\nfunction genNode (node, state) {\n  if (node.type === 1) {\n    return genElement(node, state)\n  } else if (node.type === 3 && node.isComment) {\n    return genComment(node)\n  } else {\n    return genText(node)\n  }\n}\n\nfunction genText (text) {\n  return (\"_v(\" + (text.type === 2\n    ? text.expression // no need for () because already wrapped in _s()\n    : transformSpecialNewlines(JSON.stringify(text.text))) + \")\")\n}\n\nfunction genComment (comment) {\n  return (\"_e(\" + (JSON.stringify(comment.text)) + \")\")\n}\n\nfunction genSlot (el, state) {\n  var slotName = el.slotName || '\"default\"';\n  var children = genChildren(el, state);\n  var res = \"_t(\" + slotName + (children ? (\",\" + children) : '');\n  var attrs = el.attrs || el.dynamicAttrs\n    ? genProps((el.attrs || []).concat(el.dynamicAttrs || []).map(function (attr) { return ({\n        // slot props are camelized\n        name: camelize(attr.name),\n        value: attr.value,\n        dynamic: attr.dynamic\n      }); }))\n    : null;\n  var bind$$1 = el.attrsMap['v-bind'];\n  if ((attrs || bind$$1) && !children) {\n    res += \",null\";\n  }\n  if (attrs) {\n    res += \",\" + attrs;\n  }\n  if (bind$$1) {\n    res += (attrs ? '' : ',null') + \",\" + bind$$1;\n  }\n  return res + ')'\n}\n\n// componentName is el.component, take it as argument to shun flow's pessimistic refinement\nfunction genComponent (\n  componentName,\n  el,\n  state\n) {\n  var children = el.inlineTemplate ? null : genChildren(el, state, true);\n  return (\"_c(\" + componentName + \",\" + (genData$2(el, state)) + (children ? (\",\" + children) : '') + \")\")\n}\n\nfunction genProps (props) {\n  var staticProps = \"\";\n  var dynamicProps = \"\";\n  for (var i = 0; i < props.length; i++) {\n    var prop = props[i];\n    var value = transformSpecialNewlines(prop.value);\n    if (prop.dynamic) {\n      dynamicProps += (prop.name) + \",\" + value + \",\";\n    } else {\n      staticProps += \"\\\"\" + (prop.name) + \"\\\":\" + value + \",\";\n    }\n  }\n  staticProps = \"{\" + (staticProps.slice(0, -1)) + \"}\";\n  if (dynamicProps) {\n    return (\"_d(\" + staticProps + \",[\" + (dynamicProps.slice(0, -1)) + \"])\")\n  } else {\n    return staticProps\n  }\n}\n\n// #3895, #4268\nfunction transformSpecialNewlines (text) {\n  return text\n    .replace(/\\u2028/g, '\\\\u2028')\n    .replace(/\\u2029/g, '\\\\u2029')\n}\n\n/*  */\n\n\n\n// these keywords should not appear inside expressions, but operators like\n// typeof, instanceof and in are allowed\nvar prohibitedKeywordRE = new RegExp('\\\\b' + (\n  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\n  'super,throw,while,yield,delete,export,import,return,switch,default,' +\n  'extends,finally,continue,debugger,function,arguments'\n).split(',').join('\\\\b|\\\\b') + '\\\\b');\n\n// these unary operators should not be used as property/method names\nvar unaryOperatorsRE = new RegExp('\\\\b' + (\n  'delete,typeof,void'\n).split(',').join('\\\\s*\\\\([^\\\\)]*\\\\)|\\\\b') + '\\\\s*\\\\([^\\\\)]*\\\\)');\n\n// strip strings in expressions\nvar stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\n\n// detect problematic expressions in a template\nfunction detectErrors (ast, warn) {\n  if (ast) {\n    checkNode(ast, warn);\n  }\n}\n\nfunction checkNode (node, warn) {\n  if (node.type === 1) {\n    for (var name in node.attrsMap) {\n      if (dirRE.test(name)) {\n        var value = node.attrsMap[name];\n        if (value) {\n          var range = node.rawAttrsMap[name];\n          if (name === 'v-for') {\n            checkFor(node, (\"v-for=\\\"\" + value + \"\\\"\"), warn, range);\n          } else if (onRE.test(name)) {\n            checkEvent(value, (name + \"=\\\"\" + value + \"\\\"\"), warn, range);\n          } else {\n            checkExpression(value, (name + \"=\\\"\" + value + \"\\\"\"), warn, range);\n          }\n        }\n      }\n    }\n    if (node.children) {\n      for (var i = 0; i < node.children.length; i++) {\n        checkNode(node.children[i], warn);\n      }\n    }\n  } else if (node.type === 2) {\n    checkExpression(node.expression, node.text, warn, node);\n  }\n}\n\nfunction checkEvent (exp, text, warn, range) {\n  var stipped = exp.replace(stripStringRE, '');\n  var keywordMatch = stipped.match(unaryOperatorsRE);\n  if (keywordMatch && stipped.charAt(keywordMatch.index - 1) !== '$') {\n    warn(\n      \"avoid using JavaScript unary operator as property name: \" +\n      \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim()),\n      range\n    );\n  }\n  checkExpression(exp, text, warn, range);\n}\n\nfunction checkFor (node, text, warn, range) {\n  checkExpression(node.for || '', text, warn, range);\n  checkIdentifier(node.alias, 'v-for alias', text, warn, range);\n  checkIdentifier(node.iterator1, 'v-for iterator', text, warn, range);\n  checkIdentifier(node.iterator2, 'v-for iterator', text, warn, range);\n}\n\nfunction checkIdentifier (\n  ident,\n  type,\n  text,\n  warn,\n  range\n) {\n  if (typeof ident === 'string') {\n    try {\n      new Function((\"var \" + ident + \"=_\"));\n    } catch (e) {\n      warn((\"invalid \" + type + \" \\\"\" + ident + \"\\\" in expression: \" + (text.trim())), range);\n    }\n  }\n}\n\nfunction checkExpression (exp, text, warn, range) {\n  try {\n    new Function((\"return \" + exp));\n  } catch (e) {\n    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);\n    if (keywordMatch) {\n      warn(\n        \"avoid using JavaScript keyword as property name: \" +\n        \"\\\"\" + (keywordMatch[0]) + \"\\\"\\n  Raw expression: \" + (text.trim()),\n        range\n      );\n    } else {\n      warn(\n        \"invalid expression: \" + (e.message) + \" in\\n\\n\" +\n        \"    \" + exp + \"\\n\\n\" +\n        \"  Raw expression: \" + (text.trim()) + \"\\n\",\n        range\n      );\n    }\n  }\n}\n\n/*  */\n\nvar range = 2;\n\nfunction generateCodeFrame (\n  source,\n  start,\n  end\n) {\n  if ( start === void 0 ) start = 0;\n  if ( end === void 0 ) end = source.length;\n\n  var lines = source.split(/\\r?\\n/);\n  var count = 0;\n  var res = [];\n  for (var i = 0; i < lines.length; i++) {\n    count += lines[i].length + 1;\n    if (count >= start) {\n      for (var j = i - range; j <= i + range || end > count; j++) {\n        if (j < 0 || j >= lines.length) { continue }\n        res.push((\"\" + (j + 1) + (repeat$1(\" \", 3 - String(j + 1).length)) + \"|  \" + (lines[j])));\n        var lineLength = lines[j].length;\n        if (j === i) {\n          // push underline\n          var pad = start - (count - lineLength) + 1;\n          var length = end > count ? lineLength - pad : end - start;\n          res.push(\"   |  \" + repeat$1(\" \", pad) + repeat$1(\"^\", length));\n        } else if (j > i) {\n          if (end > count) {\n            var length$1 = Math.min(end - count, lineLength);\n            res.push(\"   |  \" + repeat$1(\"^\", length$1));\n          }\n          count += lineLength + 1;\n        }\n      }\n      break\n    }\n  }\n  return res.join('\\n')\n}\n\nfunction repeat$1 (str, n) {\n  var result = '';\n  if (n > 0) {\n    while (true) { // eslint-disable-line\n      if (n & 1) { result += str; }\n      n >>>= 1;\n      if (n <= 0) { break }\n      str += str;\n    }\n  }\n  return result\n}\n\n/*  */\n\n\n\nfunction createFunction (code, errors) {\n  try {\n    return new Function(code)\n  } catch (err) {\n    errors.push({ err: err, code: code });\n    return noop\n  }\n}\n\nfunction createCompileToFunctionFn (compile) {\n  var cache = Object.create(null);\n\n  return function compileToFunctions (\n    template,\n    options,\n    vm\n  ) {\n    options = extend({}, options);\n    var warn$$1 = options.warn || warn;\n    delete options.warn;\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      // detect possible CSP restriction\n      try {\n        new Function('return 1');\n      } catch (e) {\n        if (e.toString().match(/unsafe-eval|CSP/)) {\n          warn$$1(\n            'It seems you are using the standalone build of Vue.js in an ' +\n            'environment with Content Security Policy that prohibits unsafe-eval. ' +\n            'The template compiler cannot work in this environment. Consider ' +\n            'relaxing the policy to allow unsafe-eval or pre-compiling your ' +\n            'templates into render functions.'\n          );\n        }\n      }\n    }\n\n    // check cache\n    var key = options.delimiters\n      ? String(options.delimiters) + template\n      : template;\n    if (cache[key]) {\n      return cache[key]\n    }\n\n    // compile\n    var compiled = compile(template, options);\n\n    // check compilation errors/tips\n    if (process.env.NODE_ENV !== 'production') {\n      if (compiled.errors && compiled.errors.length) {\n        if (options.outputSourceRange) {\n          compiled.errors.forEach(function (e) {\n            warn$$1(\n              \"Error compiling template:\\n\\n\" + (e.msg) + \"\\n\\n\" +\n              generateCodeFrame(template, e.start, e.end),\n              vm\n            );\n          });\n        } else {\n          warn$$1(\n            \"Error compiling template:\\n\\n\" + template + \"\\n\\n\" +\n            compiled.errors.map(function (e) { return (\"- \" + e); }).join('\\n') + '\\n',\n            vm\n          );\n        }\n      }\n      if (compiled.tips && compiled.tips.length) {\n        if (options.outputSourceRange) {\n          compiled.tips.forEach(function (e) { return tip(e.msg, vm); });\n        } else {\n          compiled.tips.forEach(function (msg) { return tip(msg, vm); });\n        }\n      }\n    }\n\n    // turn code into functions\n    var res = {};\n    var fnGenErrors = [];\n    res.render = createFunction(compiled.render, fnGenErrors);\n    res.staticRenderFns = compiled.staticRenderFns.map(function (code) {\n      return createFunction(code, fnGenErrors)\n    });\n\n    // check function generation errors.\n    // this should only happen if there is a bug in the compiler itself.\n    // mostly for codegen development use\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {\n        warn$$1(\n          \"Failed to generate render function:\\n\\n\" +\n          fnGenErrors.map(function (ref) {\n            var err = ref.err;\n            var code = ref.code;\n\n            return ((err.toString()) + \" in\\n\\n\" + code + \"\\n\");\n        }).join('\\n'),\n          vm\n        );\n      }\n    }\n\n    return (cache[key] = res)\n  }\n}\n\n/*  */\n\nfunction createCompilerCreator (baseCompile) {\n  return function createCompiler (baseOptions) {\n    function compile (\n      template,\n      options\n    ) {\n      var finalOptions = Object.create(baseOptions);\n      var errors = [];\n      var tips = [];\n\n      var warn = function (msg, range, tip) {\n        (tip ? tips : errors).push(msg);\n      };\n\n      if (options) {\n        if (process.env.NODE_ENV !== 'production' && options.outputSourceRange) {\n          // $flow-disable-line\n          var leadingSpaceLength = template.match(/^\\s*/)[0].length;\n\n          warn = function (msg, range, tip) {\n            var data = { msg: msg };\n            if (range) {\n              if (range.start != null) {\n                data.start = range.start + leadingSpaceLength;\n              }\n              if (range.end != null) {\n                data.end = range.end + leadingSpaceLength;\n              }\n            }\n            (tip ? tips : errors).push(data);\n          };\n        }\n        // merge custom modules\n        if (options.modules) {\n          finalOptions.modules =\n            (baseOptions.modules || []).concat(options.modules);\n        }\n        // merge custom directives\n        if (options.directives) {\n          finalOptions.directives = extend(\n            Object.create(baseOptions.directives || null),\n            options.directives\n          );\n        }\n        // copy other options\n        for (var key in options) {\n          if (key !== 'modules' && key !== 'directives') {\n            finalOptions[key] = options[key];\n          }\n        }\n      }\n\n      finalOptions.warn = warn;\n\n      var compiled = baseCompile(template.trim(), finalOptions);\n      if (process.env.NODE_ENV !== 'production') {\n        detectErrors(compiled.ast, warn);\n      }\n      compiled.errors = errors;\n      compiled.tips = tips;\n      return compiled\n    }\n\n    return {\n      compile: compile,\n      compileToFunctions: createCompileToFunctionFn(compile)\n    }\n  }\n}\n\n/*  */\n\n// `createCompilerCreator` allows creating compilers that use alternative\n// parser/optimizer/codegen, e.g the SSR optimizing compiler.\n// Here we just export a default compiler using the default parts.\nvar createCompiler = createCompilerCreator(function baseCompile (\n  template,\n  options\n) {\n  var ast = parse(template.trim(), options);\n  if (options.optimize !== false) {\n    optimize(ast, options);\n  }\n  var code = generate(ast, options);\n  return {\n    ast: ast,\n    render: code.render,\n    staticRenderFns: code.staticRenderFns\n  }\n});\n\n/*  */\n\nvar ref$1 = createCompiler(baseOptions);\nvar compile = ref$1.compile;\nvar compileToFunctions = ref$1.compileToFunctions;\n\n/*  */\n\n// check whether current browser encodes a char inside attribute values\nvar div;\nfunction getShouldDecode (href) {\n  div = div || document.createElement('div');\n  div.innerHTML = href ? \"<a href=\\\"\\n\\\"/>\" : \"<div a=\\\"\\n\\\"/>\";\n  return div.innerHTML.indexOf('&#10;') > 0\n}\n\n// #3663: IE encodes newlines inside attribute values while other browsers don't\nvar shouldDecodeNewlines = inBrowser ? getShouldDecode(false) : false;\n// #6828: chrome encodes content in a[href]\nvar shouldDecodeNewlinesForHref = inBrowser ? getShouldDecode(true) : false;\n\n/*  */\n\nvar idToTemplate = cached(function (id) {\n  var el = query(id);\n  return el && el.innerHTML\n});\n\nvar mount = Vue.prototype.$mount;\nVue.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && query(el);\n\n  /* istanbul ignore if */\n  if (el === document.body || el === document.documentElement) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Do not mount Vue to <html> or <body> - mount to normal elements instead.\"\n    );\n    return this\n  }\n\n  var options = this.$options;\n  // resolve template/el and convert to render function\n  if (!options.render) {\n    var template = options.template;\n    if (template) {\n      if (typeof template === 'string') {\n        if (template.charAt(0) === '#') {\n          template = idToTemplate(template);\n          /* istanbul ignore if */\n          if (process.env.NODE_ENV !== 'production' && !template) {\n            warn(\n              (\"Template element not found or is empty: \" + (options.template)),\n              this\n            );\n          }\n        }\n      } else if (template.nodeType) {\n        template = template.innerHTML;\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          warn('invalid template option:' + template, this);\n        }\n        return this\n      }\n    } else if (el) {\n      template = getOuterHTML(el);\n    }\n    if (template) {\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n        mark('compile');\n      }\n\n      var ref = compileToFunctions(template, {\n        outputSourceRange: process.env.NODE_ENV !== 'production',\n        shouldDecodeNewlines: shouldDecodeNewlines,\n        shouldDecodeNewlinesForHref: shouldDecodeNewlinesForHref,\n        delimiters: options.delimiters,\n        comments: options.comments\n      }, this);\n      var render = ref.render;\n      var staticRenderFns = ref.staticRenderFns;\n      options.render = render;\n      options.staticRenderFns = staticRenderFns;\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n        mark('compile end');\n        measure((\"vue \" + (this._name) + \" compile\"), 'compile', 'compile end');\n      }\n    }\n  }\n  return mount.call(this, el, hydrating)\n};\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n */\nfunction getOuterHTML (el) {\n  if (el.outerHTML) {\n    return el.outerHTML\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML\n  }\n}\n\nVue.compile = compileToFunctions;\n\nexport default Vue;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue/dist/vue.esm.js\n// module id = 7+uW\n// module chunks = 0","'use strict';\n// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)\nvar $export = require('./_export');\nvar $find = require('./_array-methods')(6);\nvar KEY = 'findIndex';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  findIndex: function findIndex(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./_add-to-unscopables')(KEY);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/es6.array.find-index.js\n// module id = 7AGK\n// module chunks = 0","exports.f = Object.getOwnPropertySymbols;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/_object-gops.js\n// module id = 81eH\n// module chunks = 0","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/_ctx.js\n// module id = 8qZM\n// module chunks = 0","var global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function (key) {\n  return store[key] || (store[key] = {});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/_shared.js\n// module id = CW39\n// module chunks = 0","import 'whatwg-fetch';\nimport 'promise-polyfill/lib/polyfill';\nimport 'core-js/fn/array/find';\nimport 'core-js/fn/array/find-index';\nimport 'core-js/fn/object/assign';\nimport 'core-js/fn/string/starts-with';\nimport 'core-js/fn/string/repeat';\nimport 'core-js/fn/symbol';\nimport 'core-js/fn/symbol/iterator';\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/dist/index.esm.js\n// module id = DFDv\n// module chunks = 0","// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\nvar $keys = require('./_object-keys-internal');\nvar hiddenKeys = require('./_enum-bug-keys').concat('length', 'prototype');\n\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return $keys(O, hiddenKeys);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/_object-gopn.js\n// module id = DiBo\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = DuR2\n// module chunks = 0","// 9.4.2.3 ArraySpeciesCreate(originalArray, length)\nvar speciesConstructor = require('./_array-species-constructor');\n\nmodule.exports = function (original, length) {\n  return new (speciesConstructor(original))(length);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/_array-species-create.js\n// module id = EPvp\n// module chunks = 0","var $export = require('./_export');\n\n$export($export.P, 'String', {\n  // 21.1.3.13 String.prototype.repeat(count)\n  repeat: require('./_string-repeat')\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/es6.string.repeat.js\n// module id = Eu/Z\n// module chunks = 0","var shared = require('./_shared')('keys');\nvar uid = require('./_uid');\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/_shared-key.js\n// module id = HfW0\n// module chunks = 0","var META = require('./_uid')('meta');\nvar isObject = require('./_is-object');\nvar has = require('./_has');\nvar setDesc = require('./_object-dp').f;\nvar id = 0;\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\nvar FREEZE = !require('./_fails')(function () {\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function (it) {\n  setDesc(it, META, { value: {\n    i: 'O' + ++id, // object ID\n    w: {}          // weak collections IDs\n  } });\n};\nvar fastKey = function (it, create) {\n  // return primitive with prefix\n  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return 'F';\n    // not necessary to add metadata\n    if (!create) return 'E';\n    // add missing metadata\n    setMeta(it);\n  // return object ID\n  } return it[META].i;\n};\nvar getWeak = function (it, create) {\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return true;\n    // not necessary to add metadata\n    if (!create) return false;\n    // add missing metadata\n    setMeta(it);\n  // return hash weak collections IDs\n  } return it[META].w;\n};\n// add metadata on freeze-family methods calling\nvar onFreeze = function (it) {\n  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY: META,\n  NEED: false,\n  fastKey: fastKey,\n  getWeak: getWeak,\n  onFreeze: onFreeze\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/_meta.js\n// module id = JKVU\n// module chunks = 0","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/_defined.js\n// module id = JakL\n// module chunks = 0","require('../../modules/es6.array.find-index');\nmodule.exports = require('../../modules/_core').Array.findIndex;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/fn/array/find-index.js\n// module id = Jrvm\n// module chunks = 0","'use strict';\nvar $at = require('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./_iter-define')(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/es6.string.iterator.js\n// module id = KF5t\n// module chunks = 0","'use strict';\n// 19.1.2.1 Object.assign(target, source, ...)\nvar getKeys = require('./_object-keys');\nvar gOPS = require('./_object-gops');\nvar pIE = require('./_object-pie');\nvar toObject = require('./_to-object');\nvar IObject = require('./_iobject');\nvar $assign = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = !$assign || require('./_fails')(function () {\n  var A = {};\n  var B = {};\n  // eslint-disable-next-line no-undef\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) { B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) { // eslint-disable-line no-unused-vars\n  var T = toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = gOPS.f;\n  var isEnum = pIE.f;\n  while (aLen > index) {\n    var S = IObject(arguments[index++]);\n    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];\n  } return T;\n} : $assign;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/_object-assign.js\n// module id = KKlh\n// module chunks = 0","'use strict';\nvar toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n\nmodule.exports = function repeat(count) {\n  var str = String(defined(this));\n  var res = '';\n  var n = toInteger(count);\n  if (n < 0 || n == Infinity) throw RangeError(\"Count can't be negative\");\n  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) res += str;\n  return res;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/_string-repeat.js\n// module id = Ka9c\n// module chunks = 0","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/_to-object.js\n// module id = Lmb7\n// module chunks = 0","// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nvar toIObject = require('./_to-iobject');\nvar gOPN = require('./_object-gopn').f;\nvar toString = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return gOPN(it);\n  } catch (e) {\n    return windowNames.slice();\n  }\n};\n\nmodule.exports.f = function getOwnPropertyNames(it) {\n  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/_object-gopn-ext.js\n// module id = M3iw\n// module chunks = 0","var isObject = require('./_is-object');\nvar isArray = require('./_is-array');\nvar SPECIES = require('./_wks')('species');\n\nmodule.exports = function (original) {\n  var C;\n  if (isArray(original)) {\n    C = original.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return C === undefined ? Array : C;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/_array-species-constructor.js\n// module id = MLaJ\n// module chunks = 0","var $iterators = require('./es6.array.iterator');\nvar getKeys = require('./_object-keys');\nvar redefine = require('./_redefine');\nvar global = require('./_global');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar wks = require('./_wks');\nvar ITERATOR = wks('iterator');\nvar TO_STRING_TAG = wks('toStringTag');\nvar ArrayValues = Iterators.Array;\n\nvar DOMIterables = {\n  CSSRuleList: true, // TODO: Not spec compliant, should be false.\n  CSSStyleDeclaration: false,\n  CSSValueList: false,\n  ClientRectList: false,\n  DOMRectList: false,\n  DOMStringList: false,\n  DOMTokenList: true,\n  DataTransferItemList: false,\n  FileList: false,\n  HTMLAllCollection: false,\n  HTMLCollection: false,\n  HTMLFormElement: false,\n  HTMLSelectElement: false,\n  MediaList: true, // TODO: Not spec compliant, should be false.\n  MimeTypeArray: false,\n  NamedNodeMap: false,\n  NodeList: true,\n  PaintRequestList: false,\n  Plugin: false,\n  PluginArray: false,\n  SVGLengthList: false,\n  SVGNumberList: false,\n  SVGPathSegList: false,\n  SVGPointList: false,\n  SVGStringList: false,\n  SVGTransformList: false,\n  SourceBufferList: false,\n  StyleSheetList: true, // TODO: Not spec compliant, should be false.\n  TextTrackCueList: false,\n  TextTrackList: false,\n  TouchList: false\n};\n\nfor (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {\n  var NAME = collections[i];\n  var explicit = DOMIterables[NAME];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  var key;\n  if (proto) {\n    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);\n    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n    Iterators[NAME] = ArrayValues;\n    if (explicit) for (key in $iterators) if (!proto[key]) redefine(proto, key, $iterators[key], true);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/web.dom.iterable.js\n// module id = MQn6\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar util = require('@firebase/util');\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar contains = function (obj, key) {\r\n    return Object.prototype.hasOwnProperty.call(obj, key);\r\n};\r\nvar DEFAULT_ENTRY_NAME = '[DEFAULT]';\r\n// An array to capture listeners before the true auth functions\r\n// exist\r\nvar tokenListeners = [];\r\n/**\r\n * Global context object for a collection of services using\r\n * a shared authentication state.\r\n */\r\nvar FirebaseAppImpl = /** @class */ (function () {\r\n    function FirebaseAppImpl(options, config, firebase_) {\r\n        this.firebase_ = firebase_;\r\n        this.isDeleted_ = false;\r\n        this.services_ = {};\r\n        this.name_ = config.name;\r\n        this._automaticDataCollectionEnabled =\r\n            config.automaticDataCollectionEnabled || false;\r\n        this.options_ = util.deepCopy(options);\r\n        this.INTERNAL = {\r\n            getUid: function () { return null; },\r\n            getToken: function () { return Promise.resolve(null); },\r\n            addAuthTokenListener: function (callback) {\r\n                tokenListeners.push(callback);\r\n                // Make sure callback is called, asynchronously, in the absence of the auth module\r\n                setTimeout(function () { return callback(null); }, 0);\r\n            },\r\n            removeAuthTokenListener: function (callback) {\r\n                tokenListeners = tokenListeners.filter(function (listener) { return listener !== callback; });\r\n            }\r\n        };\r\n    }\r\n    Object.defineProperty(FirebaseAppImpl.prototype, \"automaticDataCollectionEnabled\", {\r\n        get: function () {\r\n            this.checkDestroyed_();\r\n            return this._automaticDataCollectionEnabled;\r\n        },\r\n        set: function (val) {\r\n            this.checkDestroyed_();\r\n            this._automaticDataCollectionEnabled = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseAppImpl.prototype, \"name\", {\r\n        get: function () {\r\n            this.checkDestroyed_();\r\n            return this.name_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseAppImpl.prototype, \"options\", {\r\n        get: function () {\r\n            this.checkDestroyed_();\r\n            return this.options_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FirebaseAppImpl.prototype.delete = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            _this.checkDestroyed_();\r\n            resolve();\r\n        })\r\n            .then(function () {\r\n            _this.firebase_.INTERNAL.removeApp(_this.name_);\r\n            var services = [];\r\n            Object.keys(_this.services_).forEach(function (serviceKey) {\r\n                Object.keys(_this.services_[serviceKey]).forEach(function (instanceKey) {\r\n                    services.push(_this.services_[serviceKey][instanceKey]);\r\n                });\r\n            });\r\n            return Promise.all(services.map(function (service) {\r\n                return service.INTERNAL.delete();\r\n            }));\r\n        })\r\n            .then(function () {\r\n            _this.isDeleted_ = true;\r\n            _this.services_ = {};\r\n        });\r\n    };\r\n    /**\r\n     * Return a service instance associated with this app (creating it\r\n     * on demand), identified by the passed instanceIdentifier.\r\n     *\r\n     * NOTE: Currently storage is the only one that is leveraging this\r\n     * functionality. They invoke it by calling:\r\n     *\r\n     * ```javascript\r\n     * firebase.app().storage('STORAGE BUCKET ID')\r\n     * ```\r\n     *\r\n     * The service name is passed to this already\r\n     * @internal\r\n     */\r\n    FirebaseAppImpl.prototype._getService = function (name, instanceIdentifier) {\r\n        if (instanceIdentifier === void 0) { instanceIdentifier = DEFAULT_ENTRY_NAME; }\r\n        this.checkDestroyed_();\r\n        if (!this.services_[name]) {\r\n            this.services_[name] = {};\r\n        }\r\n        if (!this.services_[name][instanceIdentifier]) {\r\n            /**\r\n             * If a custom instance has been defined (i.e. not '[DEFAULT]')\r\n             * then we will pass that instance on, otherwise we pass `null`\r\n             */\r\n            var instanceSpecifier = instanceIdentifier !== DEFAULT_ENTRY_NAME\r\n                ? instanceIdentifier\r\n                : undefined;\r\n            var service = this.firebase_.INTERNAL.factories[name](this, this.extendApp.bind(this), instanceSpecifier);\r\n            this.services_[name][instanceIdentifier] = service;\r\n        }\r\n        return this.services_[name][instanceIdentifier];\r\n    };\r\n    /**\r\n     * Callback function used to extend an App instance at the time\r\n     * of service instance creation.\r\n     */\r\n    FirebaseAppImpl.prototype.extendApp = function (props) {\r\n        var _this = this;\r\n        // Copy the object onto the FirebaseAppImpl prototype\r\n        util.deepExtend(this, props);\r\n        /**\r\n         * If the app has overwritten the addAuthTokenListener stub, forward\r\n         * the active token listeners on to the true fxn.\r\n         *\r\n         * TODO: This function is required due to our current module\r\n         * structure. Once we are able to rely strictly upon a single module\r\n         * implementation, this code should be refactored and Auth should\r\n         * provide these stubs and the upgrade logic\r\n         */\r\n        if (props.INTERNAL && props.INTERNAL.addAuthTokenListener) {\r\n            tokenListeners.forEach(function (listener) {\r\n                _this.INTERNAL.addAuthTokenListener(listener);\r\n            });\r\n            tokenListeners = [];\r\n        }\r\n    };\r\n    /**\r\n     * This function will throw an Error if the App has already been deleted -\r\n     * use before performing API actions on the App.\r\n     */\r\n    FirebaseAppImpl.prototype.checkDestroyed_ = function () {\r\n        if (this.isDeleted_) {\r\n            error('app-deleted', { name: this.name_ });\r\n        }\r\n    };\r\n    return FirebaseAppImpl;\r\n}());\r\n// Prevent dead-code elimination of these methods w/o invalid property\r\n// copying.\r\n(FirebaseAppImpl.prototype.name && FirebaseAppImpl.prototype.options) ||\r\n    FirebaseAppImpl.prototype.delete ||\r\n    console.log('dc');\r\n/**\r\n * Return a firebase namespace object.\r\n *\r\n * In production, this will be called exactly once and the result\r\n * assigned to the 'firebase' global.  It may be called multiple times\r\n * in unit tests.\r\n */\r\nfunction createFirebaseNamespace() {\r\n    var apps_ = {};\r\n    var factories = {};\r\n    var appHooks = {};\r\n    // A namespace is a plain JavaScript Object.\r\n    var namespace = {\r\n        // Hack to prevent Babel from modifying the object returned\r\n        // as the firebase namespace.\r\n        __esModule: true,\r\n        initializeApp: initializeApp,\r\n        app: app,\r\n        apps: null,\r\n        Promise: Promise,\r\n        SDK_VERSION: '5.8.6',\r\n        INTERNAL: {\r\n            registerService: registerService,\r\n            createFirebaseNamespace: createFirebaseNamespace,\r\n            extendNamespace: extendNamespace,\r\n            createSubscribe: util.createSubscribe,\r\n            ErrorFactory: util.ErrorFactory,\r\n            removeApp: removeApp,\r\n            factories: factories,\r\n            useAsService: useAsService,\r\n            Promise: Promise,\r\n            deepExtend: util.deepExtend\r\n        }\r\n    };\r\n    // Inject a circular default export to allow Babel users who were previously\r\n    // using:\r\n    //\r\n    //   import firebase from 'firebase';\r\n    //   which becomes: var firebase = require('firebase').default;\r\n    //\r\n    // instead of\r\n    //\r\n    //   import * as firebase from 'firebase';\r\n    //   which becomes: var firebase = require('firebase');\r\n    util.patchProperty(namespace, 'default', namespace);\r\n    // firebase.apps is a read-only getter.\r\n    Object.defineProperty(namespace, 'apps', {\r\n        get: getApps\r\n    });\r\n    /**\r\n     * Called by App.delete() - but before any services associated with the App\r\n     * are deleted.\r\n     */\r\n    function removeApp(name) {\r\n        var app = apps_[name];\r\n        callAppHooks(app, 'delete');\r\n        delete apps_[name];\r\n    }\r\n    /**\r\n     * Get the App object for a given name (or DEFAULT).\r\n     */\r\n    function app(name) {\r\n        name = name || DEFAULT_ENTRY_NAME;\r\n        if (!contains(apps_, name)) {\r\n            error('no-app', { name: name });\r\n        }\r\n        return apps_[name];\r\n    }\r\n    util.patchProperty(app, 'App', FirebaseAppImpl);\r\n    function initializeApp(options, rawConfig) {\r\n        if (rawConfig === void 0) { rawConfig = {}; }\r\n        if (typeof rawConfig !== 'object' || rawConfig === null) {\r\n            var name_1 = rawConfig;\r\n            rawConfig = { name: name_1 };\r\n        }\r\n        var config = rawConfig;\r\n        if (config.name === undefined) {\r\n            config.name = DEFAULT_ENTRY_NAME;\r\n        }\r\n        var name = config.name;\r\n        if (typeof name !== 'string' || !name) {\r\n            error('bad-app-name', { name: name + '' });\r\n        }\r\n        if (contains(apps_, name)) {\r\n            error('duplicate-app', { name: name });\r\n        }\r\n        var app = new FirebaseAppImpl(options, config, namespace);\r\n        apps_[name] = app;\r\n        callAppHooks(app, 'create');\r\n        return app;\r\n    }\r\n    /*\r\n     * Return an array of all the non-deleted FirebaseApps.\r\n     */\r\n    function getApps() {\r\n        // Make a copy so caller cannot mutate the apps list.\r\n        return Object.keys(apps_).map(function (name) { return apps_[name]; });\r\n    }\r\n    /*\r\n     * Register a Firebase Service.\r\n     *\r\n     * firebase.INTERNAL.registerService()\r\n     *\r\n     * TODO: Implement serviceProperties.\r\n     */\r\n    function registerService(name, createService, serviceProperties, appHook, allowMultipleInstances) {\r\n        // Cannot re-register a service that already exists\r\n        if (factories[name]) {\r\n            error('duplicate-service', { name: name });\r\n        }\r\n        // Capture the service factory for later service instantiation\r\n        factories[name] = createService;\r\n        // Capture the appHook, if passed\r\n        if (appHook) {\r\n            appHooks[name] = appHook;\r\n            // Run the **new** app hook on all existing apps\r\n            getApps().forEach(function (app) {\r\n                appHook('create', app);\r\n            });\r\n        }\r\n        // The Service namespace is an accessor function ...\r\n        var serviceNamespace = function (appArg) {\r\n            if (appArg === void 0) { appArg = app(); }\r\n            if (typeof appArg[name] !== 'function') {\r\n                // Invalid argument.\r\n                // This happens in the following case: firebase.storage('gs:/')\r\n                error('invalid-app-argument', { name: name });\r\n            }\r\n            // Forward service instance lookup to the FirebaseApp.\r\n            return appArg[name]();\r\n        };\r\n        // ... and a container for service-level properties.\r\n        if (serviceProperties !== undefined) {\r\n            util.deepExtend(serviceNamespace, serviceProperties);\r\n        }\r\n        // Monkey-patch the serviceNamespace onto the firebase namespace\r\n        namespace[name] = serviceNamespace;\r\n        // Patch the FirebaseAppImpl prototype\r\n        FirebaseAppImpl.prototype[name] = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            var serviceFxn = this._getService.bind(this, name);\r\n            return serviceFxn.apply(this, allowMultipleInstances ? args : []);\r\n        };\r\n        return serviceNamespace;\r\n    }\r\n    /**\r\n     * Patch the top-level firebase namespace with additional properties.\r\n     *\r\n     * firebase.INTERNAL.extendNamespace()\r\n     */\r\n    function extendNamespace(props) {\r\n        util.deepExtend(namespace, props);\r\n    }\r\n    function callAppHooks(app, eventName) {\r\n        Object.keys(factories).forEach(function (serviceName) {\r\n            // Ignore virtual services\r\n            var factoryName = useAsService(app, serviceName);\r\n            if (factoryName === null) {\r\n                return;\r\n            }\r\n            if (appHooks[factoryName]) {\r\n                appHooks[factoryName](eventName, app);\r\n            }\r\n        });\r\n    }\r\n    // Map the requested service to a registered service name\r\n    // (used to map auth to serverAuth service when needed).\r\n    function useAsService(app, name) {\r\n        if (name === 'serverAuth') {\r\n            return null;\r\n        }\r\n        var useService = name;\r\n        var options = app.options;\r\n        return useService;\r\n    }\r\n    return namespace;\r\n}\r\nfunction error(code, args) {\r\n    throw appErrors.create(code, args);\r\n}\r\n// TypeScript does not support non-string indexes!\r\n// let errors: {[code: AppError: string} = {\r\nvar errors = {\r\n    'no-app': \"No Firebase App '{$name}' has been created - \" +\r\n        'call Firebase App.initializeApp()',\r\n    'bad-app-name': \"Illegal App name: '{$name}\",\r\n    'duplicate-app': \"Firebase App named '{$name}' already exists\",\r\n    'app-deleted': \"Firebase App named '{$name}' already deleted\",\r\n    'duplicate-service': \"Firebase service named '{$name}' already registered\",\r\n    'sa-not-supported': 'Initializing the Firebase SDK with a service ' +\r\n        'account is only allowed in a Node.js environment. On client ' +\r\n        'devices, you should instead initialize the SDK with an api key and ' +\r\n        'auth domain',\r\n    'invalid-app-argument': 'firebase.{$name}() takes either no argument or a ' +\r\n        'Firebase App instance.'\r\n};\r\nvar appErrors = new util.ErrorFactory('app', 'Firebase', errors);\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Node detection logic from: https://github.com/iliakan/detect-node/\r\nvar isNode = false;\r\ntry {\r\n    isNode =\r\n        Object.prototype.toString.call(global.process) === '[object process]';\r\n}\r\ncatch (e) { }\r\nisNode &&\r\n    console.warn(\"\\nWarning: This is a browser-targeted Firebase bundle but it appears it is being\\nrun in a Node environment.  If running in a Node environment, make sure you\\nare using the bundle specified by the \\\"main\\\" field in package.json.\\n\\nIf you are using Webpack, you can specify \\\"main\\\" as the first item in\\n\\\"resolve.mainFields\\\":\\nhttps://webpack.js.org/configuration/resolve/#resolvemainfields\\n\\nIf using Rollup, use the rollup-plugin-node-resolve plugin and set \\\"module\\\"\\nto false and \\\"main\\\" to true:\\nhttps://github.com/rollup/rollup-plugin-node-resolve\\n\");\r\nvar firebase = createFirebaseNamespace();\n\nexports.firebase = firebase;\nexports.default = firebase;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/app/dist/index.cjs.js\n// module id = O4tu\n// module chunks = 0","// 0 -> Array#forEach\n// 1 -> Array#map\n// 2 -> Array#filter\n// 3 -> Array#some\n// 4 -> Array#every\n// 5 -> Array#find\n// 6 -> Array#findIndex\nvar ctx = require('./_ctx');\nvar IObject = require('./_iobject');\nvar toObject = require('./_to-object');\nvar toLength = require('./_to-length');\nvar asc = require('./_array-species-create');\nmodule.exports = function (TYPE, $create) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  var create = $create || asc;\n  return function ($this, callbackfn, that) {\n    var O = toObject($this);\n    var self = IObject(O);\n    var f = ctx(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var val, res;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      val = self[index];\n      res = f(val, index, O);\n      if (TYPE) {\n        if (IS_MAP) result[index] = res;   // map\n        else if (res) switch (TYPE) {\n          case 3: return true;             // some\n          case 5: return val;              // find\n          case 6: return index;            // findIndex\n          case 2: result.push(val);        // filter\n        } else if (IS_EVERY) return false; // every\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/_array-methods.js\n// module id = OiZ0\n// module chunks = 0","var pIE = require('./_object-pie');\nvar createDesc = require('./_property-desc');\nvar toIObject = require('./_to-iobject');\nvar toPrimitive = require('./_to-primitive');\nvar has = require('./_has');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nexports.f = require('./_descriptors') ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return gOPD(O, P);\n  } catch (e) { /* empty */ }\n  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/_object-gopd.js\n// module id = PW5P\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar tslib_1 = require('tslib');\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\r\n */\r\nvar CONSTANTS = {\r\n    /**\r\n     * @define {boolean} Whether this is the client Node.js SDK.\r\n     */\r\n    NODE_CLIENT: false,\r\n    /**\r\n     * @define {boolean} Whether this is the Admin Node.js SDK.\r\n     */\r\n    NODE_ADMIN: false,\r\n    /**\r\n     * Firebase SDK Version\r\n     */\r\n    SDK_VERSION: '${JSCORE_VERSION}'\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Throws an error if the provided assertion is falsy\r\n * @param {*} assertion The assertion to be tested for falsiness\r\n * @param {!string} message The message to display if the check fails\r\n */\r\nvar assert = function (assertion, message) {\r\n    if (!assertion) {\r\n        throw assertionError(message);\r\n    }\r\n};\r\n/**\r\n * Returns an Error object suitable for throwing.\r\n * @param {string} message\r\n * @return {!Error}\r\n */\r\nvar assertionError = function (message) {\r\n    return new Error('Firebase Database (' +\r\n        CONSTANTS.SDK_VERSION +\r\n        ') INTERNAL ASSERT FAILED: ' +\r\n        message);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar stringToByteArray = function (str) {\r\n    // TODO(user): Use native implementations if/when available\r\n    var out = [], p = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if ((c & 0xfc00) == 0xd800 &&\r\n            i + 1 < str.length &&\r\n            (str.charCodeAt(i + 1) & 0xfc00) == 0xdc00) {\r\n            // Surrogate Pair\r\n            c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Turns an array of numbers into the string given by the concatenation of the\r\n * characters to which the numbers correspond.\r\n * @param {Array<number>} bytes Array of numbers representing characters.\r\n * @return {string} Stringification of the array.\r\n */\r\nvar byteArrayToString = function (bytes) {\r\n    // TODO(user): Use native implementations if/when available\r\n    var out = [], pos = 0, c = 0;\r\n    while (pos < bytes.length) {\r\n        var c1 = bytes[pos++];\r\n        if (c1 < 128) {\r\n            out[c++] = String.fromCharCode(c1);\r\n        }\r\n        else if (c1 > 191 && c1 < 224) {\r\n            var c2 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\r\n        }\r\n        else if (c1 > 239 && c1 < 365) {\r\n            // Surrogate Pair\r\n            var c2 = bytes[pos++];\r\n            var c3 = bytes[pos++];\r\n            var c4 = bytes[pos++];\r\n            var u = (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\r\n                0x10000;\r\n            out[c++] = String.fromCharCode(0xd800 + (u >> 10));\r\n            out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\r\n        }\r\n        else {\r\n            var c2 = bytes[pos++];\r\n            var c3 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\r\n        }\r\n    }\r\n    return out.join('');\r\n};\r\n// Static lookup maps, lazily populated by init_()\r\nvar base64 = {\r\n    /**\r\n     * Maps bytes to characters.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    byteToCharMap_: null,\r\n    /**\r\n     * Maps characters to bytes.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    charToByteMap_: null,\r\n    /**\r\n     * Maps bytes to websafe characters.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    byteToCharMapWebSafe_: null,\r\n    /**\r\n     * Maps websafe characters to bytes.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    charToByteMapWebSafe_: null,\r\n    /**\r\n     * Our default alphabet, shared between\r\n     * ENCODED_VALS and ENCODED_VALS_WEBSAFE\r\n     * @type {string}\r\n     */\r\n    ENCODED_VALS_BASE: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\r\n    /**\r\n     * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\r\n     * @type {string}\r\n     */\r\n    get ENCODED_VALS() {\r\n        return this.ENCODED_VALS_BASE + '+/=';\r\n    },\r\n    /**\r\n     * Our websafe alphabet.\r\n     * @type {string}\r\n     */\r\n    get ENCODED_VALS_WEBSAFE() {\r\n        return this.ENCODED_VALS_BASE + '-_.';\r\n    },\r\n    /**\r\n     * Whether this browser supports the atob and btoa functions. This extension\r\n     * started at Mozilla but is now implemented by many browsers. We use the\r\n     * ASSUME_* variables to avoid pulling in the full useragent detection library\r\n     * but still allowing the standard per-browser compilations.\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    HAS_NATIVE_SUPPORT: typeof atob === 'function',\r\n    /**\r\n     * Base64-encode an array of bytes.\r\n     *\r\n     * @param {Array<number>|Uint8Array} input An array of bytes (numbers with\r\n     *     value in [0, 255]) to encode.\r\n     * @param {boolean=} opt_webSafe Boolean indicating we should use the\r\n     *     alternative alphabet.\r\n     * @return {string} The base64 encoded string.\r\n     */\r\n    encodeByteArray: function (input, opt_webSafe) {\r\n        if (!Array.isArray(input)) {\r\n            throw Error('encodeByteArray takes an array as a parameter');\r\n        }\r\n        this.init_();\r\n        var byteToCharMap = opt_webSafe\r\n            ? this.byteToCharMapWebSafe_\r\n            : this.byteToCharMap_;\r\n        var output = [];\r\n        for (var i = 0; i < input.length; i += 3) {\r\n            var byte1 = input[i];\r\n            var haveByte2 = i + 1 < input.length;\r\n            var byte2 = haveByte2 ? input[i + 1] : 0;\r\n            var haveByte3 = i + 2 < input.length;\r\n            var byte3 = haveByte3 ? input[i + 2] : 0;\r\n            var outByte1 = byte1 >> 2;\r\n            var outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\r\n            var outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\r\n            var outByte4 = byte3 & 0x3f;\r\n            if (!haveByte3) {\r\n                outByte4 = 64;\r\n                if (!haveByte2) {\r\n                    outByte3 = 64;\r\n                }\r\n            }\r\n            output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);\r\n        }\r\n        return output.join('');\r\n    },\r\n    /**\r\n     * Base64-encode a string.\r\n     *\r\n     * @param {string} input A string to encode.\r\n     * @param {boolean=} opt_webSafe If true, we should use the\r\n     *     alternative alphabet.\r\n     * @return {string} The base64 encoded string.\r\n     */\r\n    encodeString: function (input, opt_webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !opt_webSafe) {\r\n            return btoa(input);\r\n        }\r\n        return this.encodeByteArray(stringToByteArray(input), opt_webSafe);\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * @param {string} input to decode.\r\n     * @param {boolean=} opt_webSafe True if we should use the\r\n     *     alternative alphabet.\r\n     * @return {string} string representing the decoded value.\r\n     */\r\n    decodeString: function (input, opt_webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !opt_webSafe) {\r\n            return atob(input);\r\n        }\r\n        return byteArrayToString(this.decodeStringToByteArray(input, opt_webSafe));\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * In base-64 decoding, groups of four characters are converted into three\r\n     * bytes.  If the encoder did not apply padding, the input length may not\r\n     * be a multiple of 4.\r\n     *\r\n     * In this case, the last group will have fewer than 4 characters, and\r\n     * padding will be inferred.  If the group has one or two characters, it decodes\r\n     * to one byte.  If the group has three characters, it decodes to two bytes.\r\n     *\r\n     * @param {string} input Input to decode.\r\n     * @param {boolean=} opt_webSafe True if we should use the web-safe alphabet.\r\n     * @return {!Array<number>} bytes representing the decoded value.\r\n     */\r\n    decodeStringToByteArray: function (input, opt_webSafe) {\r\n        this.init_();\r\n        var charToByteMap = opt_webSafe\r\n            ? this.charToByteMapWebSafe_\r\n            : this.charToByteMap_;\r\n        var output = [];\r\n        for (var i = 0; i < input.length;) {\r\n            var byte1 = charToByteMap[input.charAt(i++)];\r\n            var haveByte2 = i < input.length;\r\n            var byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\r\n            ++i;\r\n            var haveByte3 = i < input.length;\r\n            var byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            var haveByte4 = i < input.length;\r\n            var byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\r\n                throw Error();\r\n            }\r\n            var outByte1 = (byte1 << 2) | (byte2 >> 4);\r\n            output.push(outByte1);\r\n            if (byte3 != 64) {\r\n                var outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\r\n                output.push(outByte2);\r\n                if (byte4 != 64) {\r\n                    var outByte3 = ((byte3 << 6) & 0xc0) | byte4;\r\n                    output.push(outByte3);\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    },\r\n    /**\r\n     * Lazy static initialization function. Called before\r\n     * accessing any of the static map variables.\r\n     * @private\r\n     */\r\n    init_: function () {\r\n        if (!this.byteToCharMap_) {\r\n            this.byteToCharMap_ = {};\r\n            this.charToByteMap_ = {};\r\n            this.byteToCharMapWebSafe_ = {};\r\n            this.charToByteMapWebSafe_ = {};\r\n            // We want quick mappings back and forth, so we precompute two maps.\r\n            for (var i = 0; i < this.ENCODED_VALS.length; i++) {\r\n                this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\r\n                this.charToByteMap_[this.byteToCharMap_[i]] = i;\r\n                this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\r\n                this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\r\n                // Be forgiving when decoding and correctly decode both encodings.\r\n                if (i >= this.ENCODED_VALS_BASE.length) {\r\n                    this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\r\n                    this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n/**\r\n * URL-safe base64 encoding\r\n * @param {!string} str\r\n * @return {!string}\r\n */\r\nvar base64Encode = function (str) {\r\n    var utf8Bytes = stringToByteArray(str);\r\n    return base64.encodeByteArray(utf8Bytes, true);\r\n};\r\n/**\r\n * URL-safe base64 decoding\r\n *\r\n * NOTE: DO NOT use the global atob() function - it does NOT support the\r\n * base64Url variant encoding.\r\n *\r\n * @param {string} str To be decoded\r\n * @return {?string} Decoded result, if possible\r\n */\r\nvar base64Decode = function (str) {\r\n    try {\r\n        return base64.decodeString(str, true);\r\n    }\r\n    catch (e) {\r\n        console.error('base64Decode failed: ', e);\r\n    }\r\n    return null;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Do a deep-copy of basic JavaScript Objects or Arrays.\r\n */\r\nfunction deepCopy(value) {\r\n    return deepExtend(undefined, value);\r\n}\r\n/**\r\n * Copy properties from source to target (recursively allows extension\r\n * of Objects and Arrays).  Scalar values in the target are over-written.\r\n * If target is undefined, an object of the appropriate type will be created\r\n * (and returned).\r\n *\r\n * We recursively copy all child properties of plain Objects in the source- so\r\n * that namespace- like dictionaries are merged.\r\n *\r\n * Note that the target can be a function, in which case the properties in\r\n * the source Object are copied onto it as static properties of the Function.\r\n */\r\nfunction deepExtend(target, source) {\r\n    if (!(source instanceof Object)) {\r\n        return source;\r\n    }\r\n    switch (source.constructor) {\r\n        case Date:\r\n            // Treat Dates like scalars; if the target date object had any child\r\n            // properties - they will be lost!\r\n            var dateValue = source;\r\n            return new Date(dateValue.getTime());\r\n        case Object:\r\n            if (target === undefined) {\r\n                target = {};\r\n            }\r\n            break;\r\n        case Array:\r\n            // Always copy the array source and overwrite the target.\r\n            target = [];\r\n            break;\r\n        default:\r\n            // Not a plain Object - treat it as a scalar.\r\n            return source;\r\n    }\r\n    for (var prop in source) {\r\n        if (!source.hasOwnProperty(prop)) {\r\n            continue;\r\n        }\r\n        target[prop] = deepExtend(target[prop], source[prop]);\r\n    }\r\n    return target;\r\n}\r\n// TODO: Really needed (for JSCompiler type checking)?\r\nfunction patchProperty(obj, prop, value) {\r\n    obj[prop] = value;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Deferred = /** @class */ (function () {\r\n    function Deferred() {\r\n        var _this = this;\r\n        this.promise = new Promise(function (resolve, reject) {\r\n            _this.resolve = resolve;\r\n            _this.reject = reject;\r\n        });\r\n    }\r\n    /**\r\n     * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\r\n     * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\r\n     * and returns a node-style callback which will resolve or reject the Deferred's promise.\r\n     * @param {((?function(?(Error)): (?|undefined))| (?function(?(Error),?=): (?|undefined)))=} callback\r\n     * @return {!function(?(Error), ?=)}\r\n     */\r\n    Deferred.prototype.wrapCallback = function (callback) {\r\n        var _this = this;\r\n        return function (error, value) {\r\n            if (error) {\r\n                _this.reject(error);\r\n            }\r\n            else {\r\n                _this.resolve(value);\r\n            }\r\n            if (typeof callback === 'function') {\r\n                // Attaching noop handler just in case developer wasn't expecting\r\n                // promises\r\n                _this.promise.catch(function () { });\r\n                // Some of our callbacks don't expect a value and our own tests\r\n                // assert that the parameter length is 1\r\n                if (callback.length === 1) {\r\n                    callback(error);\r\n                }\r\n                else {\r\n                    callback(error, value);\r\n                }\r\n            }\r\n        };\r\n    };\r\n    return Deferred;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns navigator.userAgent string or '' if it's not defined.\r\n * @return {string} user agent string\r\n */\r\nvar getUA = function () {\r\n    if (typeof navigator !== 'undefined' &&\r\n        typeof navigator['userAgent'] === 'string') {\r\n        return navigator['userAgent'];\r\n    }\r\n    else {\r\n        return '';\r\n    }\r\n};\r\n/**\r\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\r\n *\r\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap in the Ripple emulator) nor\r\n * Cordova `onDeviceReady`, which would normally wait for a callback.\r\n *\r\n * @return {boolean} isMobileCordova\r\n */\r\nvar isMobileCordova = function () {\r\n    return (typeof window !== 'undefined' &&\r\n        !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\r\n        /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA()));\r\n};\r\n/**\r\n * Detect React Native.\r\n *\r\n * @return {boolean} True if ReactNative environment is detected.\r\n */\r\nvar isReactNative = function () {\r\n    return (typeof navigator === 'object' && navigator['product'] === 'ReactNative');\r\n};\r\n/**\r\n * Detect Node.js.\r\n *\r\n * @return {boolean} True if Node.js environment is detected.\r\n */\r\nvar isNodeSdk = function () {\r\n    return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\r\n};\n\nvar ERROR_NAME = 'FirebaseError';\r\nvar captureStackTrace = Error\r\n    .captureStackTrace;\r\n// Export for faking in tests\r\nfunction patchCapture(captureFake) {\r\n    var result = captureStackTrace;\r\n    captureStackTrace = captureFake;\r\n    return result;\r\n}\r\nvar FirebaseError = /** @class */ (function () {\r\n    function FirebaseError(code, message) {\r\n        this.code = code;\r\n        this.message = message;\r\n        // We want the stack value, if implemented by Error\r\n        if (captureStackTrace) {\r\n            // Patches this.stack, omitted calls above ErrorFactory#create\r\n            captureStackTrace(this, ErrorFactory.prototype.create);\r\n        }\r\n        else {\r\n            try {\r\n                // In case of IE11, stack will be set only after error is raised.\r\n                // https://docs.microsoft.com/en-us/scripting/javascript/reference/stack-property-error-javascript\r\n                throw Error.apply(this, arguments);\r\n            }\r\n            catch (err) {\r\n                this.name = ERROR_NAME;\r\n                // Make non-enumerable getter for the property.\r\n                Object.defineProperty(this, 'stack', {\r\n                    get: function () {\r\n                        return err.stack;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n    return FirebaseError;\r\n}());\r\n// Back-door inheritance\r\nFirebaseError.prototype = Object.create(Error.prototype);\r\nFirebaseError.prototype.constructor = FirebaseError;\r\nFirebaseError.prototype.name = ERROR_NAME;\r\nvar ErrorFactory = /** @class */ (function () {\r\n    function ErrorFactory(service, serviceName, errors) {\r\n        this.service = service;\r\n        this.serviceName = serviceName;\r\n        this.errors = errors;\r\n        // Matches {$name}, by default.\r\n        this.pattern = /\\{\\$([^}]+)}/g;\r\n        // empty\r\n    }\r\n    ErrorFactory.prototype.create = function (code, data) {\r\n        if (data === undefined) {\r\n            data = {};\r\n        }\r\n        var template = this.errors[code];\r\n        var fullCode = this.service + '/' + code;\r\n        var message;\r\n        if (template === undefined) {\r\n            message = 'Error';\r\n        }\r\n        else {\r\n            message = template.replace(this.pattern, function (match, key) {\r\n                var value = data[key];\r\n                return value !== undefined ? value.toString() : '<' + key + '?>';\r\n            });\r\n        }\r\n        // Service: Error message (service/code).\r\n        message = this.serviceName + ': ' + message + ' (' + fullCode + ').';\r\n        var err = new FirebaseError(fullCode, message);\r\n        // Populate the Error object with message parts for programmatic\r\n        // accesses (e.g., e.file).\r\n        for (var prop in data) {\r\n            if (!data.hasOwnProperty(prop) || prop.slice(-1) === '_') {\r\n                continue;\r\n            }\r\n            err[prop] = data[prop];\r\n        }\r\n        return err;\r\n    };\r\n    return ErrorFactory;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Evaluates a JSON string into a javascript object.\r\n *\r\n * @param {string} str A string containing JSON.\r\n * @return {*} The javascript object representing the specified JSON.\r\n */\r\nfunction jsonEval(str) {\r\n    return JSON.parse(str);\r\n}\r\n/**\r\n * Returns JSON representing a javascript object.\r\n * @param {*} data Javascript object to be stringified.\r\n * @return {string} The JSON contents of the object.\r\n */\r\nfunction stringify(data) {\r\n    return JSON.stringify(data);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Decodes a Firebase auth. token into constituent parts.\r\n *\r\n * Notes:\r\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {{header: *, claims: *, data: *, signature: string}}\r\n */\r\nvar decode = function (token) {\r\n    var header = {}, claims = {}, data = {}, signature = '';\r\n    try {\r\n        var parts = token.split('.');\r\n        header = jsonEval(base64Decode(parts[0]) || '');\r\n        claims = jsonEval(base64Decode(parts[1]) || '');\r\n        signature = parts[2];\r\n        data = claims['d'] || {};\r\n        delete claims['d'];\r\n    }\r\n    catch (e) { }\r\n    return {\r\n        header: header,\r\n        claims: claims,\r\n        data: data,\r\n        signature: signature\r\n    };\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\r\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {boolean}\r\n */\r\nvar isValidTimestamp = function (token) {\r\n    var claims = decode(token).claims, now = Math.floor(new Date().getTime() / 1000), validSince, validUntil;\r\n    if (typeof claims === 'object') {\r\n        if (claims.hasOwnProperty('nbf')) {\r\n            validSince = claims['nbf'];\r\n        }\r\n        else if (claims.hasOwnProperty('iat')) {\r\n            validSince = claims['iat'];\r\n        }\r\n        if (claims.hasOwnProperty('exp')) {\r\n            validUntil = claims['exp'];\r\n        }\r\n        else {\r\n            // token will expire after 24h by default\r\n            validUntil = validSince + 86400;\r\n        }\r\n    }\r\n    return (now && validSince && validUntil && now >= validSince && now <= validUntil);\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\r\n *\r\n * Notes:\r\n * - May return null if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {?number}\r\n */\r\nvar issuedAtTime = function (token) {\r\n    var claims = decode(token).claims;\r\n    if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\r\n        return claims['iat'];\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {boolean}\r\n */\r\nvar isValidFormat = function (token) {\r\n    var decoded = decode(token), claims = decoded.claims;\r\n    return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');\r\n};\r\n/**\r\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {boolean}\r\n */\r\nvar isAdmin = function (token) {\r\n    var claims = decode(token).claims;\r\n    return typeof claims === 'object' && claims['admin'] === true;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// See http://www.devthought.com/2012/01/18/an-object-is-not-a-hash/\r\nvar contains = function (obj, key) {\r\n    return Object.prototype.hasOwnProperty.call(obj, key);\r\n};\r\nvar safeGet = function (obj, key) {\r\n    if (Object.prototype.hasOwnProperty.call(obj, key))\r\n        return obj[key];\r\n    // else return undefined.\r\n};\r\n/**\r\n * Enumerates the keys/values in an object, excluding keys defined on the prototype.\r\n *\r\n * @param {?Object.<K,V>} obj Object to enumerate.\r\n * @param {!function(K, V)} fn Function to call for each key and value.\r\n * @template K,V\r\n */\r\nvar forEach = function (obj, fn) {\r\n    for (var key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            fn(key, obj[key]);\r\n        }\r\n    }\r\n};\r\n/**\r\n * Copies all the (own) properties from one object to another.\r\n * @param {!Object} objTo\r\n * @param {!Object} objFrom\r\n * @return {!Object} objTo\r\n */\r\nvar extend = function (objTo, objFrom) {\r\n    forEach(objFrom, function (key, value) {\r\n        objTo[key] = value;\r\n    });\r\n    return objTo;\r\n};\r\n/**\r\n * Returns a clone of the specified object.\r\n * @param {!Object} obj\r\n * @return {!Object} cloned obj.\r\n */\r\nvar clone = function (obj) {\r\n    return extend({}, obj);\r\n};\r\n/**\r\n * Returns true if obj has typeof \"object\" and is not null.  Unlike goog.isObject(), does not return true\r\n * for functions.\r\n *\r\n * @param obj {*} A potential object.\r\n * @returns {boolean} True if it's an object.\r\n */\r\nvar isNonNullObject = function (obj) {\r\n    return typeof obj === 'object' && obj !== null;\r\n};\r\nvar isEmpty = function (obj) {\r\n    for (var key in obj) {\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\nvar getCount = function (obj) {\r\n    var rv = 0;\r\n    for (var key in obj) {\r\n        rv++;\r\n    }\r\n    return rv;\r\n};\r\nvar map = function (obj, f, opt_obj) {\r\n    var res = {};\r\n    for (var key in obj) {\r\n        res[key] = f.call(opt_obj, obj[key], key, obj);\r\n    }\r\n    return res;\r\n};\r\nvar findKey = function (obj, fn, opt_this) {\r\n    for (var key in obj) {\r\n        if (fn.call(opt_this, obj[key], key, obj)) {\r\n            return key;\r\n        }\r\n    }\r\n    return undefined;\r\n};\r\nvar findValue = function (obj, fn, opt_this) {\r\n    var key = findKey(obj, fn, opt_this);\r\n    return key && obj[key];\r\n};\r\nvar getAnyKey = function (obj) {\r\n    for (var key in obj) {\r\n        return key;\r\n    }\r\n};\r\nvar getValues = function (obj) {\r\n    var res = [];\r\n    var i = 0;\r\n    for (var key in obj) {\r\n        res[i++] = obj[key];\r\n    }\r\n    return res;\r\n};\r\n/**\r\n * Tests whether every key/value pair in an object pass the test implemented\r\n * by the provided function\r\n *\r\n * @param {?Object.<K,V>} obj Object to test.\r\n * @param {!function(K, V)} fn Function to call for each key and value.\r\n * @template K,V\r\n */\r\nvar every = function (obj, fn) {\r\n    for (var key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            if (!fn(key, obj[key])) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a params\r\n * object (e.g. {arg: 'val', arg2: 'val2'})\r\n * Note: You must prepend it with ? when adding it to a URL.\r\n *\r\n * @param {!Object} querystringParams\r\n * @return {string}\r\n */\r\nvar querystring = function (querystringParams) {\r\n    var params = [];\r\n    forEach(querystringParams, function (key, value) {\r\n        if (Array.isArray(value)) {\r\n            value.forEach(function (arrayVal) {\r\n                params.push(encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal));\r\n            });\r\n        }\r\n        else {\r\n            params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\r\n        }\r\n    });\r\n    return params.length ? '&' + params.join('&') : '';\r\n};\r\n/**\r\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object (e.g. {arg: 'val', arg2: 'val2'})\r\n *\r\n * @param {string} querystring\r\n * @return {!Object}\r\n */\r\nvar querystringDecode = function (querystring) {\r\n    var obj = {};\r\n    var tokens = querystring.replace(/^\\?/, '').split('&');\r\n    tokens.forEach(function (token) {\r\n        if (token) {\r\n            var key = token.split('=');\r\n            obj[key[0]] = key[1];\r\n        }\r\n    });\r\n    return obj;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Copyright 2011 The Closure Library Authors. All Rights Reserved.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//      http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n/**\r\n * @fileoverview Abstract cryptographic hash interface.\r\n *\r\n * See Sha1 and Md5 for sample implementations.\r\n *\r\n */\r\n/**\r\n * Create a cryptographic hash instance.\r\n *\r\n * @constructor\r\n * @struct\r\n */\r\nvar Hash = /** @class */ (function () {\r\n    function Hash() {\r\n        /**\r\n         * The block size for the hasher.\r\n         * @type {number}\r\n         */\r\n        this.blockSize = -1;\r\n    }\r\n    return Hash;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview SHA-1 cryptographic hash.\r\n * Variable names follow the notation in FIPS PUB 180-3:\r\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\r\n *\r\n * Usage:\r\n *   var sha1 = new sha1();\r\n *   sha1.update(bytes);\r\n *   var hash = sha1.digest();\r\n *\r\n * Performance:\r\n *   Chrome 23:   ~400 Mbit/s\r\n *   Firefox 16:  ~250 Mbit/s\r\n *\r\n */\r\n/**\r\n * SHA-1 cryptographic hash constructor.\r\n *\r\n * The properties declared here are discussed in the above algorithm document.\r\n * @constructor\r\n * @extends {Hash}\r\n * @final\r\n * @struct\r\n */\r\nvar Sha1 = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Sha1, _super);\r\n    function Sha1() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * Holds the previous values of accumulated variables a-e in the compress_\r\n         * function.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        _this.chain_ = [];\r\n        /**\r\n         * A buffer holding the partially computed hash result.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        _this.buf_ = [];\r\n        /**\r\n         * An array of 80 bytes, each a part of the message to be hashed.  Referred to\r\n         * as the message schedule in the docs.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        _this.W_ = [];\r\n        /**\r\n         * Contains data needed to pad messages less than 64 bytes.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        _this.pad_ = [];\r\n        /**\r\n         * @private {number}\r\n         */\r\n        _this.inbuf_ = 0;\r\n        /**\r\n         * @private {number}\r\n         */\r\n        _this.total_ = 0;\r\n        _this.blockSize = 512 / 8;\r\n        _this.pad_[0] = 128;\r\n        for (var i = 1; i < _this.blockSize; ++i) {\r\n            _this.pad_[i] = 0;\r\n        }\r\n        _this.reset();\r\n        return _this;\r\n    }\r\n    Sha1.prototype.reset = function () {\r\n        this.chain_[0] = 0x67452301;\r\n        this.chain_[1] = 0xefcdab89;\r\n        this.chain_[2] = 0x98badcfe;\r\n        this.chain_[3] = 0x10325476;\r\n        this.chain_[4] = 0xc3d2e1f0;\r\n        this.inbuf_ = 0;\r\n        this.total_ = 0;\r\n    };\r\n    /**\r\n     * Internal compress helper function.\r\n     * @param {!Array<number>|!Uint8Array|string} buf Block to compress.\r\n     * @param {number=} opt_offset Offset of the block in the buffer.\r\n     * @private\r\n     */\r\n    Sha1.prototype.compress_ = function (buf, opt_offset) {\r\n        if (!opt_offset) {\r\n            opt_offset = 0;\r\n        }\r\n        var W = this.W_;\r\n        // get 16 big endian words\r\n        if (typeof buf === 'string') {\r\n            for (var i = 0; i < 16; i++) {\r\n                // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\r\n                // have a bug that turns the post-increment ++ operator into pre-increment\r\n                // during JIT compilation.  We have code that depends heavily on SHA-1 for\r\n                // correctness and which is affected by this bug, so I've removed all uses\r\n                // of post-increment ++ in which the result value is used.  We can revert\r\n                // this change once the Safari bug\r\n                // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\r\n                // most clients have been updated.\r\n                W[i] =\r\n                    (buf.charCodeAt(opt_offset) << 24) |\r\n                        (buf.charCodeAt(opt_offset + 1) << 16) |\r\n                        (buf.charCodeAt(opt_offset + 2) << 8) |\r\n                        buf.charCodeAt(opt_offset + 3);\r\n                opt_offset += 4;\r\n            }\r\n        }\r\n        else {\r\n            for (var i = 0; i < 16; i++) {\r\n                W[i] =\r\n                    (buf[opt_offset] << 24) |\r\n                        (buf[opt_offset + 1] << 16) |\r\n                        (buf[opt_offset + 2] << 8) |\r\n                        buf[opt_offset + 3];\r\n                opt_offset += 4;\r\n            }\r\n        }\r\n        // expand to 80 words\r\n        for (var i = 16; i < 80; i++) {\r\n            var t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\r\n            W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\r\n        }\r\n        var a = this.chain_[0];\r\n        var b = this.chain_[1];\r\n        var c = this.chain_[2];\r\n        var d = this.chain_[3];\r\n        var e = this.chain_[4];\r\n        var f, k;\r\n        // TODO(user): Try to unroll this loop to speed up the computation.\r\n        for (var i = 0; i < 80; i++) {\r\n            if (i < 40) {\r\n                if (i < 20) {\r\n                    f = d ^ (b & (c ^ d));\r\n                    k = 0x5a827999;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0x6ed9eba1;\r\n                }\r\n            }\r\n            else {\r\n                if (i < 60) {\r\n                    f = (b & c) | (d & (b | c));\r\n                    k = 0x8f1bbcdc;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0xca62c1d6;\r\n                }\r\n            }\r\n            var t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\r\n            e = d;\r\n            d = c;\r\n            c = ((b << 30) | (b >>> 2)) & 0xffffffff;\r\n            b = a;\r\n            a = t;\r\n        }\r\n        this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\r\n        this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\r\n        this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\r\n        this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\r\n        this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\r\n    };\r\n    Sha1.prototype.update = function (bytes, opt_length) {\r\n        // TODO(johnlenz): tighten the function signature and remove this check\r\n        if (bytes == null) {\r\n            return;\r\n        }\r\n        if (opt_length === undefined) {\r\n            opt_length = bytes.length;\r\n        }\r\n        var lengthMinusBlock = opt_length - this.blockSize;\r\n        var n = 0;\r\n        // Using local instead of member variables gives ~5% speedup on Firefox 16.\r\n        var buf = this.buf_;\r\n        var inbuf = this.inbuf_;\r\n        // The outer while loop should execute at most twice.\r\n        while (n < opt_length) {\r\n            // When we have no data in the block to top up, we can directly process the\r\n            // input buffer (assuming it contains sufficient data). This gives ~25%\r\n            // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\r\n            // the data is provided in large chunks (or in multiples of 64 bytes).\r\n            if (inbuf == 0) {\r\n                while (n <= lengthMinusBlock) {\r\n                    this.compress_(bytes, n);\r\n                    n += this.blockSize;\r\n                }\r\n            }\r\n            if (typeof bytes === 'string') {\r\n                while (n < opt_length) {\r\n                    buf[inbuf] = bytes.charCodeAt(n);\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf == this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                while (n < opt_length) {\r\n                    buf[inbuf] = bytes[n];\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf == this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.inbuf_ = inbuf;\r\n        this.total_ += opt_length;\r\n    };\r\n    /** @override */\r\n    Sha1.prototype.digest = function () {\r\n        var digest = [];\r\n        var totalBits = this.total_ * 8;\r\n        // Add pad 0x80 0x00*.\r\n        if (this.inbuf_ < 56) {\r\n            this.update(this.pad_, 56 - this.inbuf_);\r\n        }\r\n        else {\r\n            this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\r\n        }\r\n        // Add # bits.\r\n        for (var i = this.blockSize - 1; i >= 56; i--) {\r\n            this.buf_[i] = totalBits & 255;\r\n            totalBits /= 256; // Don't use bit-shifting here!\r\n        }\r\n        this.compress_(this.buf_);\r\n        var n = 0;\r\n        for (var i = 0; i < 5; i++) {\r\n            for (var j = 24; j >= 0; j -= 8) {\r\n                digest[n] = (this.chain_[i] >> j) & 255;\r\n                ++n;\r\n            }\r\n        }\r\n        return digest;\r\n    };\r\n    return Sha1;\r\n}(Hash));\n\n/**\r\n * Helper to make a Subscribe function (just like Promise helps make a\r\n * Thenable).\r\n *\r\n * @param executor Function which can make calls to a single Observer\r\n *     as a proxy.\r\n * @param onNoObservers Callback when count of Observers goes to zero.\r\n */\r\nfunction createSubscribe(executor, onNoObservers) {\r\n    var proxy = new ObserverProxy(executor, onNoObservers);\r\n    return proxy.subscribe.bind(proxy);\r\n}\r\n/**\r\n * Implement fan-out for any number of Observers attached via a subscribe\r\n * function.\r\n */\r\nvar ObserverProxy = /** @class */ (function () {\r\n    /**\r\n     * @param executor Function which can make calls to a single Observer\r\n     *     as a proxy.\r\n     * @param onNoObservers Callback when count of Observers goes to zero.\r\n     */\r\n    function ObserverProxy(executor, onNoObservers) {\r\n        var _this = this;\r\n        this.observers = [];\r\n        this.unsubscribes = [];\r\n        this.observerCount = 0;\r\n        // Micro-task scheduling by calling task.then().\r\n        this.task = Promise.resolve();\r\n        this.finalized = false;\r\n        this.onNoObservers = onNoObservers;\r\n        // Call the executor asynchronously so subscribers that are called\r\n        // synchronously after the creation of the subscribe function\r\n        // can still receive the very first value generated in the executor.\r\n        this.task\r\n            .then(function () {\r\n            executor(_this);\r\n        })\r\n            .catch(function (e) {\r\n            _this.error(e);\r\n        });\r\n    }\r\n    ObserverProxy.prototype.next = function (value) {\r\n        this.forEachObserver(function (observer) {\r\n            observer.next(value);\r\n        });\r\n    };\r\n    ObserverProxy.prototype.error = function (error) {\r\n        this.forEachObserver(function (observer) {\r\n            observer.error(error);\r\n        });\r\n        this.close(error);\r\n    };\r\n    ObserverProxy.prototype.complete = function () {\r\n        this.forEachObserver(function (observer) {\r\n            observer.complete();\r\n        });\r\n        this.close();\r\n    };\r\n    /**\r\n     * Subscribe function that can be used to add an Observer to the fan-out list.\r\n     *\r\n     * - We require that no event is sent to a subscriber sychronously to their\r\n     *   call to subscribe().\r\n     */\r\n    ObserverProxy.prototype.subscribe = function (nextOrObserver, error, complete) {\r\n        var _this = this;\r\n        var observer;\r\n        if (nextOrObserver === undefined &&\r\n            error === undefined &&\r\n            complete === undefined) {\r\n            throw new Error('Missing Observer.');\r\n        }\r\n        // Assemble an Observer object when passed as callback functions.\r\n        if (implementsAnyMethods(nextOrObserver, ['next', 'error', 'complete'])) {\r\n            observer = nextOrObserver;\r\n        }\r\n        else {\r\n            observer = {\r\n                next: nextOrObserver,\r\n                error: error,\r\n                complete: complete\r\n            };\r\n        }\r\n        if (observer.next === undefined) {\r\n            observer.next = noop;\r\n        }\r\n        if (observer.error === undefined) {\r\n            observer.error = noop;\r\n        }\r\n        if (observer.complete === undefined) {\r\n            observer.complete = noop;\r\n        }\r\n        var unsub = this.unsubscribeOne.bind(this, this.observers.length);\r\n        // Attempt to subscribe to a terminated Observable - we\r\n        // just respond to the Observer with the final error or complete\r\n        // event.\r\n        if (this.finalized) {\r\n            this.task.then(function () {\r\n                try {\r\n                    if (_this.finalError) {\r\n                        observer.error(_this.finalError);\r\n                    }\r\n                    else {\r\n                        observer.complete();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // nothing\r\n                }\r\n                return;\r\n            });\r\n        }\r\n        this.observers.push(observer);\r\n        return unsub;\r\n    };\r\n    // Unsubscribe is synchronous - we guarantee that no events are sent to\r\n    // any unsubscribed Observer.\r\n    ObserverProxy.prototype.unsubscribeOne = function (i) {\r\n        if (this.observers === undefined || this.observers[i] === undefined) {\r\n            return;\r\n        }\r\n        delete this.observers[i];\r\n        this.observerCount -= 1;\r\n        if (this.observerCount === 0 && this.onNoObservers !== undefined) {\r\n            this.onNoObservers(this);\r\n        }\r\n    };\r\n    ObserverProxy.prototype.forEachObserver = function (fn) {\r\n        if (this.finalized) {\r\n            // Already closed by previous event....just eat the additional values.\r\n            return;\r\n        }\r\n        // Since sendOne calls asynchronously - there is no chance that\r\n        // this.observers will become undefined.\r\n        for (var i = 0; i < this.observers.length; i++) {\r\n            this.sendOne(i, fn);\r\n        }\r\n    };\r\n    // Call the Observer via one of it's callback function. We are careful to\r\n    // confirm that the observe has not been unsubscribed since this asynchronous\r\n    // function had been queued.\r\n    ObserverProxy.prototype.sendOne = function (i, fn) {\r\n        var _this = this;\r\n        // Execute the callback asynchronously\r\n        this.task.then(function () {\r\n            if (_this.observers !== undefined && _this.observers[i] !== undefined) {\r\n                try {\r\n                    fn(_this.observers[i]);\r\n                }\r\n                catch (e) {\r\n                    // Ignore exceptions raised in Observers or missing methods of an\r\n                    // Observer.\r\n                    // Log error to console. b/31404806\r\n                    if (typeof console !== 'undefined' && console.error) {\r\n                        console.error(e);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    };\r\n    ObserverProxy.prototype.close = function (err) {\r\n        var _this = this;\r\n        if (this.finalized) {\r\n            return;\r\n        }\r\n        this.finalized = true;\r\n        if (err !== undefined) {\r\n            this.finalError = err;\r\n        }\r\n        // Proxy is no longer needed - garbage collect references\r\n        this.task.then(function () {\r\n            _this.observers = undefined;\r\n            _this.onNoObservers = undefined;\r\n        });\r\n    };\r\n    return ObserverProxy;\r\n}());\r\n/** Turn synchronous function into one called asynchronously. */\r\nfunction async(fn, onError) {\r\n    return function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        Promise.resolve(true)\r\n            .then(function () {\r\n            fn.apply(void 0, args);\r\n        })\r\n            .catch(function (error) {\r\n            if (onError) {\r\n                onError(error);\r\n            }\r\n        });\r\n    };\r\n}\r\n/**\r\n * Return true if the object passed in implements any of the named methods.\r\n */\r\nfunction implementsAnyMethods(obj, methods) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return false;\r\n    }\r\n    for (var _i = 0, methods_1 = methods; _i < methods_1.length; _i++) {\r\n        var method = methods_1[_i];\r\n        if (method in obj && typeof obj[method] === 'function') {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction noop() {\r\n    // do nothing\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Check to make sure the appropriate number of arguments are provided for a public function.\r\n * Throws an error if it fails.\r\n *\r\n * @param {!string} fnName The function name\r\n * @param {!number} minCount The minimum number of arguments to allow for the function call\r\n * @param {!number} maxCount The maximum number of argument to allow for the function call\r\n * @param {!number} argCount The actual number of arguments provided.\r\n */\r\nvar validateArgCount = function (fnName, minCount, maxCount, argCount) {\r\n    var argError;\r\n    if (argCount < minCount) {\r\n        argError = 'at least ' + minCount;\r\n    }\r\n    else if (argCount > maxCount) {\r\n        argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\r\n    }\r\n    if (argError) {\r\n        var error = fnName +\r\n            ' failed: Was called with ' +\r\n            argCount +\r\n            (argCount === 1 ? ' argument.' : ' arguments.') +\r\n            ' Expects ' +\r\n            argError +\r\n            '.';\r\n        throw new Error(error);\r\n    }\r\n};\r\n/**\r\n * Generates a string to prefix an error message about failed argument validation\r\n *\r\n * @param {!string} fnName The function name\r\n * @param {!number} argumentNumber The index of the argument\r\n * @param {boolean} optional Whether or not the argument is optional\r\n * @return {!string} The prefix to add to the error thrown for validation.\r\n */\r\nfunction errorPrefix(fnName, argumentNumber, optional) {\r\n    var argName = '';\r\n    switch (argumentNumber) {\r\n        case 1:\r\n            argName = optional ? 'first' : 'First';\r\n            break;\r\n        case 2:\r\n            argName = optional ? 'second' : 'Second';\r\n            break;\r\n        case 3:\r\n            argName = optional ? 'third' : 'Third';\r\n            break;\r\n        case 4:\r\n            argName = optional ? 'fourth' : 'Fourth';\r\n            break;\r\n        default:\r\n            throw new Error('errorPrefix called with argumentNumber > 4.  Need to update it?');\r\n    }\r\n    var error = fnName + ' failed: ';\r\n    error += argName + ' argument ';\r\n    return error;\r\n}\r\n/**\r\n * @param {!string} fnName\r\n * @param {!number} argumentNumber\r\n * @param {!string} namespace\r\n * @param {boolean} optional\r\n */\r\nfunction validateNamespace(fnName, argumentNumber, namespace, optional) {\r\n    if (optional && !namespace)\r\n        return;\r\n    if (typeof namespace !== 'string') {\r\n        //TODO: I should do more validation here. We only allow certain chars in namespaces.\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid firebase namespace.');\r\n    }\r\n}\r\nfunction validateCallback(fnName, argumentNumber, callback, optional) {\r\n    if (optional && !callback)\r\n        return;\r\n    if (typeof callback !== 'function')\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid function.');\r\n}\r\nfunction validateContextObject(fnName, argumentNumber, context, optional) {\r\n    if (optional && !context)\r\n        return;\r\n    if (typeof context !== 'object' || context === null)\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid context object.');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\r\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\r\n// so it's been modified.\r\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\r\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\r\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\r\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\r\n// pair).\r\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\r\n/**\r\n * @param {string} str\r\n * @return {Array}\r\n */\r\nvar stringToByteArray$1 = function (str) {\r\n    var out = [], p = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var c = str.charCodeAt(i);\r\n        // Is this the lead surrogate in a surrogate pair?\r\n        if (c >= 0xd800 && c <= 0xdbff) {\r\n            var high = c - 0xd800; // the high 10 bits.\r\n            i++;\r\n            assert(i < str.length, 'Surrogate pair missing trail surrogate.');\r\n            var low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\r\n            c = 0x10000 + (high << 10) + low;\r\n        }\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if (c < 65536) {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Calculate length without actually converting; useful for doing cheaper validation.\r\n * @param {string} str\r\n * @return {number}\r\n */\r\nvar stringLength = function (str) {\r\n    var p = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            p++;\r\n        }\r\n        else if (c < 2048) {\r\n            p += 2;\r\n        }\r\n        else if (c >= 0xd800 && c <= 0xdbff) {\r\n            // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\r\n            p += 4;\r\n            i++; // skip trail surrogate.\r\n        }\r\n        else {\r\n            p += 3;\r\n        }\r\n    }\r\n    return p;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nexports.assert = assert;\nexports.assertionError = assertionError;\nexports.base64 = base64;\nexports.base64Decode = base64Decode;\nexports.base64Encode = base64Encode;\nexports.CONSTANTS = CONSTANTS;\nexports.deepCopy = deepCopy;\nexports.deepExtend = deepExtend;\nexports.patchProperty = patchProperty;\nexports.Deferred = Deferred;\nexports.getUA = getUA;\nexports.isMobileCordova = isMobileCordova;\nexports.isNodeSdk = isNodeSdk;\nexports.isReactNative = isReactNative;\nexports.ErrorFactory = ErrorFactory;\nexports.FirebaseError = FirebaseError;\nexports.patchCapture = patchCapture;\nexports.jsonEval = jsonEval;\nexports.stringify = stringify;\nexports.decode = decode;\nexports.isAdmin = isAdmin;\nexports.issuedAtTime = issuedAtTime;\nexports.isValidFormat = isValidFormat;\nexports.isValidTimestamp = isValidTimestamp;\nexports.clone = clone;\nexports.contains = contains;\nexports.every = every;\nexports.extend = extend;\nexports.findKey = findKey;\nexports.findValue = findValue;\nexports.forEach = forEach;\nexports.getAnyKey = getAnyKey;\nexports.getCount = getCount;\nexports.getValues = getValues;\nexports.isEmpty = isEmpty;\nexports.isNonNullObject = isNonNullObject;\nexports.map = map;\nexports.safeGet = safeGet;\nexports.querystring = querystring;\nexports.querystringDecode = querystringDecode;\nexports.Sha1 = Sha1;\nexports.async = async;\nexports.createSubscribe = createSubscribe;\nexports.errorPrefix = errorPrefix;\nexports.validateArgCount = validateArgCount;\nexports.validateCallback = validateCallback;\nexports.validateContextObject = validateContextObject;\nexports.validateNamespace = validateNamespace;\nexports.stringLength = stringLength;\nexports.stringToByteArray = stringToByteArray$1;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/util/dist/index.cjs.js\n// module id = Pxmi\n// module chunks = 0","require('./_wks-define')('asyncIterator');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/es7.symbol.async-iterator.js\n// module id = Q1to\n// module chunks = 0","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/_ie8-dom-define.js\n// module id = QnZi\n// module chunks = 0","exports.f = require('./_wks');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/_wks-ext.js\n// module id = R1u4\n// module chunks = 0","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/_descriptors.js\n// module id = S9oP\n// module chunks = 0","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/_hide.js\n// module id = Sozt\n// module chunks = 0","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tslib/tslib.es6.js\n// module id = TToO\n// module chunks = 0","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/_array-includes.js\n// module id = TjKY\n// module chunks = 0","module.exports = function (done, value) {\n  return { value: value, done: !!done };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/_iter-step.js\n// module id = U5fE\n// module chunks = 0","var global = require('./_global');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar SRC = require('./_uid')('src');\nvar TO_STRING = 'toString';\nvar $toString = Function[TO_STRING];\nvar TPL = ('' + $toString).split(TO_STRING);\n\nrequire('./_core').inspectSource = function (it) {\n  return $toString.call(it);\n};\n\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) has(val, 'name') || hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if (O === global) {\n    O[key] = val;\n  } else if (!safe) {\n    delete O[key];\n    hide(O, key, val);\n  } else if (O[key]) {\n    O[key] = val;\n  } else {\n    hide(O, key, val);\n  }\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/_redefine.js\n// module id = UBlI\n// module chunks = 0","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file.\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/component-normalizer.js\n// module id = VU/8\n// module chunks = 0","var MATCH = require('./_wks')('match');\nmodule.exports = function (KEY) {\n  var re = /./;\n  try {\n    '/./'[KEY](re);\n  } catch (e) {\n    try {\n      re[MATCH] = false;\n      return !'/./'[KEY](re);\n    } catch (f) { /* empty */ }\n  } return true;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/_fails-is-regexp.js\n// module id = VeCN\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/process/browser.js\n// module id = W2nU\n// module chunks = 0","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/_fails.js\n// module id = Waoe\n// module chunks = 0","'use strict';\nvar create = require('./_object-create');\nvar descriptor = require('./_property-desc');\nvar setToStringTag = require('./_set-to-string-tag');\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/_iter-create.js\n// module id = WfQj\n// module chunks = 0","// 22.1.3.31 Array.prototype[@@unscopables]\nvar UNSCOPABLES = require('./_wks')('unscopables');\nvar ArrayProto = Array.prototype;\nif (ArrayProto[UNSCOPABLES] == undefined) require('./_hide')(ArrayProto, UNSCOPABLES, {});\nmodule.exports = function (key) {\n  ArrayProto[UNSCOPABLES][key] = true;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/_add-to-unscopables.js\n// module id = XVIk\n// module chunks = 0","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/_global.js\n// module id = Z/0M\n// module chunks = 0","require('../../modules/es6.string.repeat');\nmodule.exports = require('../../modules/_core').String.repeat;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/fn/string/repeat.js\n// module id = aNVq\n// module chunks = 0","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/_to-length.js\n// module id = bhMP\n// module chunks = 0","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/_a-function.js\n// module id = dTvs\n// module chunks = 0","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/_uid.js\n// module id = dpee\n// module chunks = 0","'use strict';\n// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)\nvar $export = require('./_export');\nvar $find = require('./_array-methods')(5);\nvar KEY = 'find';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./_add-to-unscopables')(KEY);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/es6.array.find.js\n// module id = eOqs\n// module chunks = 0","// 21.1.3.18 String.prototype.startsWith(searchString [, position ])\n'use strict';\nvar $export = require('./_export');\nvar toLength = require('./_to-length');\nvar context = require('./_string-context');\nvar STARTS_WITH = 'startsWith';\nvar $startsWith = ''[STARTS_WITH];\n\n$export($export.P + $export.F * require('./_fails-is-regexp')(STARTS_WITH), 'String', {\n  startsWith: function startsWith(searchString /* , position = 0 */) {\n    var that = context(this, searchString, STARTS_WITH);\n    var index = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length));\n    var search = String(searchString);\n    return $startsWith\n      ? $startsWith.call(that, search, index)\n      : that.slice(index, index + search.length) === search;\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/es6.string.starts-with.js\n// module id = eczL\n// module chunks = 0","// helper for String#{startsWith, endsWith, includes}\nvar isRegExp = require('./_is-regexp');\nvar defined = require('./_defined');\n\nmodule.exports = function (that, searchString, NAME) {\n  if (isRegExp(searchString)) throw TypeError('String#' + NAME + \" doesn't accept regex!\");\n  return String(defined(that));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/_string-context.js\n// module id = f3Vh\n// module chunks = 0","var document = require('./_global').document;\nmodule.exports = document && document.documentElement;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/_html.js\n// module id = fEPr\n// module chunks = 0","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/_iobject.js\n// module id = fJi5\n// module chunks = 0","/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A container for all of the Logger instances\r\n */\r\nvar instances = [];\r\n/**\r\n * The JS SDK supports 5 log levels and also allows a user the ability to\r\n * silence the logs altogether.\r\n *\r\n * The order is a follows:\r\n * DEBUG < VERBOSE < INFO < WARN < ERROR\r\n *\r\n * All of the log types above the current log level will be captured (i.e. if\r\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\r\n * `VERBOSE` logs will not)\r\n */\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\r\n    LogLevel[LogLevel[\"VERBOSE\"] = 1] = \"VERBOSE\";\r\n    LogLevel[LogLevel[\"INFO\"] = 2] = \"INFO\";\r\n    LogLevel[LogLevel[\"WARN\"] = 3] = \"WARN\";\r\n    LogLevel[LogLevel[\"ERROR\"] = 4] = \"ERROR\";\r\n    LogLevel[LogLevel[\"SILENT\"] = 5] = \"SILENT\";\r\n})(LogLevel || (LogLevel = {}));\r\n/**\r\n * The default log level\r\n */\r\nvar defaultLogLevel = LogLevel.INFO;\r\n/**\r\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\r\n * messages on to their corresponding console counterparts (if the log method\r\n * is supported by the current log level)\r\n */\r\nvar defaultLogHandler = function (instance, logType) {\r\n    var args = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        args[_i - 2] = arguments[_i];\r\n    }\r\n    if (logType < instance.logLevel)\r\n        return;\r\n    var now = new Date().toISOString();\r\n    switch (logType) {\r\n        /**\r\n         * By default, `console.debug` is not displayed in the developer console (in\r\n         * chrome). To avoid forcing users to have to opt-in to these logs twice\r\n         * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\r\n         * logs to the `console.log` function.\r\n         */\r\n        case LogLevel.DEBUG:\r\n            console.log.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\r\n            break;\r\n        case LogLevel.VERBOSE:\r\n            console.log.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\r\n            break;\r\n        case LogLevel.INFO:\r\n            console.info.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\r\n            break;\r\n        case LogLevel.WARN:\r\n            console.warn.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\r\n            break;\r\n        case LogLevel.ERROR:\r\n            console.error.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\r\n            break;\r\n        default:\r\n            throw new Error(\"Attempted to log a message with an invalid logType (value: \" + logType + \")\");\r\n    }\r\n};\r\nvar Logger = /** @class */ (function () {\r\n    /**\r\n     * Gives you an instance of a Logger to capture messages according to\r\n     * Firebase's logging scheme.\r\n     *\r\n     * @param name The name that the logs will be associated with\r\n     */\r\n    function Logger(name) {\r\n        this.name = name;\r\n        /**\r\n         * The log level of the given Logger instance.\r\n         */\r\n        this._logLevel = defaultLogLevel;\r\n        /**\r\n         * The log handler for the Logger instance.\r\n         */\r\n        this._logHandler = defaultLogHandler;\r\n        /**\r\n         * Capture the current instance for later use\r\n         */\r\n        instances.push(this);\r\n    }\r\n    Object.defineProperty(Logger.prototype, \"logLevel\", {\r\n        get: function () {\r\n            return this._logLevel;\r\n        },\r\n        set: function (val) {\r\n            if (!(val in LogLevel)) {\r\n                throw new TypeError('Invalid value assigned to `logLevel`');\r\n            }\r\n            this._logLevel = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Logger.prototype, \"logHandler\", {\r\n        get: function () {\r\n            return this._logHandler;\r\n        },\r\n        set: function (val) {\r\n            if (typeof val !== 'function') {\r\n                throw new TypeError('Value assigned to `logHandler` must be a function');\r\n            }\r\n            this._logHandler = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * The functions below are all based on the `console` interface\r\n     */\r\n    Logger.prototype.debug = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, [this, LogLevel.DEBUG].concat(args));\r\n    };\r\n    Logger.prototype.log = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, [this, LogLevel.VERBOSE].concat(args));\r\n    };\r\n    Logger.prototype.info = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, [this, LogLevel.INFO].concat(args));\r\n    };\r\n    Logger.prototype.warn = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, [this, LogLevel.WARN].concat(args));\r\n    };\r\n    Logger.prototype.error = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, [this, LogLevel.ERROR].concat(args));\r\n    };\r\n    return Logger;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction setLogLevel(level) {\r\n    instances.forEach(function (inst) {\r\n        inst.logLevel = level;\r\n    });\r\n}\n\nexport { setLogLevel, Logger, LogLevel };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/logger/dist/index.esm.js\n// module id = fjI4\n// module chunks = 0","// all enumerable object keys, includes symbols\nvar getKeys = require('./_object-keys');\nvar gOPS = require('./_object-gops');\nvar pIE = require('./_object-pie');\nmodule.exports = function (it) {\n  var result = getKeys(it);\n  var getSymbols = gOPS.f;\n  if (getSymbols) {\n    var symbols = getSymbols(it);\n    var isEnum = pIE.f;\n    var i = 0;\n    var key;\n    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);\n  } return result;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/_enum-keys.js\n// module id = g+jW\n// module chunks = 0","var core = module.exports = { version: '2.5.5' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/_core.js\n// module id = gPsE\n// module chunks = 0","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables');\nvar step = require('./_iter-step');\nvar Iterators = require('./_iterators');\nvar toIObject = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/es6.array.iterator.js\n// module id = gYtg\n// module chunks = 0","import '@firebase/database';\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/firebase/database/dist/index.esm.js\n// module id = hZls\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar firebase = _interopDefault(require('@firebase/app'));\nvar tslib_1 = require('tslib');\nvar util = require('@firebase/util');\nvar logger$1 = require('@firebase/logger');\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Wraps a DOM Storage object and:\r\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\r\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\r\n *\r\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\r\n * and one for localStorage.\r\n *\r\n * @constructor\r\n */\r\nvar DOMStorageWrapper = /** @class */ (function () {\r\n    /**\r\n     * @param {Storage} domStorage_ The underlying storage object (e.g. localStorage or sessionStorage)\r\n     */\r\n    function DOMStorageWrapper(domStorage_) {\r\n        this.domStorage_ = domStorage_;\r\n        // Use a prefix to avoid collisions with other stuff saved by the app.\r\n        this.prefix_ = 'firebase:';\r\n    }\r\n    /**\r\n     * @param {string} key The key to save the value under\r\n     * @param {?Object} value The value being stored, or null to remove the key.\r\n     */\r\n    DOMStorageWrapper.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            this.domStorage_.removeItem(this.prefixedName_(key));\r\n        }\r\n        else {\r\n            this.domStorage_.setItem(this.prefixedName_(key), util.stringify(value));\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} key\r\n     * @return {*} The value that was stored under this key, or null\r\n     */\r\n    DOMStorageWrapper.prototype.get = function (key) {\r\n        var storedVal = this.domStorage_.getItem(this.prefixedName_(key));\r\n        if (storedVal == null) {\r\n            return null;\r\n        }\r\n        else {\r\n            return util.jsonEval(storedVal);\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} key\r\n     */\r\n    DOMStorageWrapper.prototype.remove = function (key) {\r\n        this.domStorage_.removeItem(this.prefixedName_(key));\r\n    };\r\n    /**\r\n     * @param {string} name\r\n     * @return {string}\r\n     */\r\n    DOMStorageWrapper.prototype.prefixedName_ = function (name) {\r\n        return this.prefix_ + name;\r\n    };\r\n    DOMStorageWrapper.prototype.toString = function () {\r\n        return this.domStorage_.toString();\r\n    };\r\n    return DOMStorageWrapper;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\r\n * (TODO: create interface for both to implement).\r\n *\r\n * @constructor\r\n */\r\nvar MemoryStorage = /** @class */ (function () {\r\n    function MemoryStorage() {\r\n        this.cache_ = {};\r\n        this.isInMemoryStorage = true;\r\n    }\r\n    MemoryStorage.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            delete this.cache_[key];\r\n        }\r\n        else {\r\n            this.cache_[key] = value;\r\n        }\r\n    };\r\n    MemoryStorage.prototype.get = function (key) {\r\n        if (util.contains(this.cache_, key)) {\r\n            return this.cache_[key];\r\n        }\r\n        return null;\r\n    };\r\n    MemoryStorage.prototype.remove = function (key) {\r\n        delete this.cache_[key];\r\n    };\r\n    return MemoryStorage;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\r\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\r\n * to reflect this type\r\n *\r\n * @param {string} domStorageName Name of the underlying storage object\r\n *   (e.g. 'localStorage' or 'sessionStorage').\r\n * @return {?} Turning off type information until a common interface is defined.\r\n */\r\nvar createStoragefor = function (domStorageName) {\r\n    try {\r\n        // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\r\n        // so it must be inside the try/catch.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window[domStorageName] !== 'undefined') {\r\n            // Need to test cache. Just because it's here doesn't mean it works\r\n            var domStorage = window[domStorageName];\r\n            domStorage.setItem('firebase:sentinel', 'cache');\r\n            domStorage.removeItem('firebase:sentinel');\r\n            return new DOMStorageWrapper(domStorage);\r\n        }\r\n    }\r\n    catch (e) { }\r\n    // Failed to create wrapper.  Just return in-memory storage.\r\n    // TODO: log?\r\n    return new MemoryStorage();\r\n};\r\n/** A storage object that lasts across sessions */\r\nvar PersistentStorage = createStoragefor('localStorage');\r\n/** A storage object that only lasts one session */\r\nvar SessionStorage = createStoragefor('sessionStorage');\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar logClient = new logger$1.Logger('@firebase/database');\r\n/**\r\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\r\n * @type {function(): number} Generated ID.\r\n */\r\nvar LUIDGenerator = (function () {\r\n    var id = 1;\r\n    return function () {\r\n        return id++;\r\n    };\r\n})();\r\n/**\r\n * Sha1 hash of the input string\r\n * @param {!string} str The string to hash\r\n * @return {!string} The resulting hash\r\n */\r\nvar sha1 = function (str) {\r\n    var utf8Bytes = util.stringToByteArray(str);\r\n    var sha1 = new util.Sha1();\r\n    sha1.update(utf8Bytes);\r\n    var sha1Bytes = sha1.digest();\r\n    return util.base64.encodeByteArray(sha1Bytes);\r\n};\r\n/**\r\n * @param {...*} var_args\r\n * @return {string}\r\n * @private\r\n */\r\nvar buildLogMessage_ = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var message = '';\r\n    for (var i = 0; i < var_args.length; i++) {\r\n        if (Array.isArray(var_args[i]) ||\r\n            (var_args[i] &&\r\n                typeof var_args[i] === 'object' &&\r\n                typeof var_args[i].length === 'number')) {\r\n            message += buildLogMessage_.apply(null, var_args[i]);\r\n        }\r\n        else if (typeof var_args[i] === 'object') {\r\n            message += util.stringify(var_args[i]);\r\n        }\r\n        else {\r\n            message += var_args[i];\r\n        }\r\n        message += ' ';\r\n    }\r\n    return message;\r\n};\r\n/**\r\n * Use this for all debug messages in Firebase.\r\n * @type {?function(string)}\r\n */\r\nvar logger = null;\r\n/**\r\n * Flag to check for log availability on first log message\r\n * @type {boolean}\r\n * @private\r\n */\r\nvar firstLog_ = true;\r\n/**\r\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\r\n * @param {boolean|?function(string)} logger_ A flag to turn on logging, or a custom logger\r\n * @param {boolean=} persistent Whether or not to persist logging settings across refreshes\r\n */\r\nvar enableLogging = function (logger_, persistent) {\r\n    util.assert(!persistent || (logger_ === true || logger_ === false), \"Can't turn on custom loggers persistently.\");\r\n    if (logger_ === true) {\r\n        logClient.logLevel = logger$1.LogLevel.VERBOSE;\r\n        logger = logClient.log.bind(logClient);\r\n        if (persistent)\r\n            SessionStorage.set('logging_enabled', true);\r\n    }\r\n    else if (typeof logger_ === 'function') {\r\n        logger = logger_;\r\n    }\r\n    else {\r\n        logger = null;\r\n        SessionStorage.remove('logging_enabled');\r\n    }\r\n};\r\n/**\r\n *\r\n * @param {...(string|Arguments)} var_args\r\n */\r\nvar log = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    if (firstLog_ === true) {\r\n        firstLog_ = false;\r\n        if (logger === null && SessionStorage.get('logging_enabled') === true)\r\n            enableLogging(true);\r\n    }\r\n    if (logger) {\r\n        var message = buildLogMessage_.apply(null, var_args);\r\n        logger(message);\r\n    }\r\n};\r\n/**\r\n * @param {!string} prefix\r\n * @return {function(...[*])}\r\n */\r\nvar logWrapper = function (prefix) {\r\n    return function () {\r\n        var var_args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            var_args[_i] = arguments[_i];\r\n        }\r\n        log.apply(void 0, [prefix].concat(var_args));\r\n    };\r\n};\r\n/**\r\n * @param {...string} var_args\r\n */\r\nvar error = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_.apply(void 0, var_args);\r\n    logClient.error(message);\r\n};\r\n/**\r\n * @param {...string} var_args\r\n */\r\nvar fatal = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var message = \"FIREBASE FATAL ERROR: \" + buildLogMessage_.apply(void 0, var_args);\r\n    logClient.error(message);\r\n    throw new Error(message);\r\n};\r\n/**\r\n * @param {...*} var_args\r\n */\r\nvar warn = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE WARNING: ' + buildLogMessage_.apply(void 0, var_args);\r\n    logClient.warn(message);\r\n};\r\n/**\r\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\r\n * does not use https.\r\n */\r\nvar warnIfPageIsSecure = function () {\r\n    // Be very careful accessing browser globals. Who knows what may or may not exist.\r\n    if (typeof window !== 'undefined' &&\r\n        window.location &&\r\n        window.location.protocol &&\r\n        window.location.protocol.indexOf('https:') !== -1) {\r\n        warn('Insecure Firebase access from a secure page. ' +\r\n            'Please use https in calls to new Firebase().');\r\n    }\r\n};\r\n/**\r\n * Returns true if data is NaN, or +/- Infinity.\r\n * @param {*} data\r\n * @return {boolean}\r\n */\r\nvar isInvalidJSONNumber = function (data) {\r\n    return (typeof data === 'number' &&\r\n        (data != data || // NaN\r\n            data == Number.POSITIVE_INFINITY ||\r\n            data == Number.NEGATIVE_INFINITY));\r\n};\r\n/**\r\n * @param {function()} fn\r\n */\r\nvar executeWhenDOMReady = function (fn) {\r\n    if (util.isNodeSdk() || document.readyState === 'complete') {\r\n        fn();\r\n    }\r\n    else {\r\n        // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\r\n        // fire before onload), but fall back to onload.\r\n        var called_1 = false;\r\n        var wrappedFn_1 = function () {\r\n            if (!document.body) {\r\n                setTimeout(wrappedFn_1, Math.floor(10));\r\n                return;\r\n            }\r\n            if (!called_1) {\r\n                called_1 = true;\r\n                fn();\r\n            }\r\n        };\r\n        if (document.addEventListener) {\r\n            document.addEventListener('DOMContentLoaded', wrappedFn_1, false);\r\n            // fallback to onload.\r\n            window.addEventListener('load', wrappedFn_1, false);\r\n        }\r\n        else if (document.attachEvent) {\r\n            // IE.\r\n            document.attachEvent('onreadystatechange', function () {\r\n                if (document.readyState === 'complete')\r\n                    wrappedFn_1();\r\n            });\r\n            // fallback to onload.\r\n            window.attachEvent('onload', wrappedFn_1);\r\n            // jQuery has an extra hack for IE that we could employ (based on\r\n            // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\r\n            // I'm hoping we don't need it.\r\n        }\r\n    }\r\n};\r\n/**\r\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\r\n * @type {!string}\r\n */\r\nvar MIN_NAME = '[MIN_NAME]';\r\n/**\r\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\r\n * @type {!string}\r\n */\r\nvar MAX_NAME = '[MAX_NAME]';\r\n/**\r\n * Compares valid Firebase key names, plus min and max name\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number}\r\n */\r\nvar nameCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a === MIN_NAME || b === MAX_NAME) {\r\n        return -1;\r\n    }\r\n    else if (b === MIN_NAME || a === MAX_NAME) {\r\n        return 1;\r\n    }\r\n    else {\r\n        var aAsInt = tryParseInt(a), bAsInt = tryParseInt(b);\r\n        if (aAsInt !== null) {\r\n            if (bAsInt !== null) {\r\n                return aAsInt - bAsInt == 0 ? a.length - b.length : aAsInt - bAsInt;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (bAsInt !== null) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return a < b ? -1 : 1;\r\n        }\r\n    }\r\n};\r\n/**\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number} comparison result.\r\n */\r\nvar stringCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a < b) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n};\r\n/**\r\n * @param {string} key\r\n * @param {Object} obj\r\n * @return {*}\r\n */\r\nvar requireKey = function (key, obj) {\r\n    if (obj && key in obj) {\r\n        return obj[key];\r\n    }\r\n    else {\r\n        throw new Error('Missing required key (' + key + ') in object: ' + util.stringify(obj));\r\n    }\r\n};\r\n/**\r\n * @param {*} obj\r\n * @return {string}\r\n */\r\nvar ObjectToUniqueKey = function (obj) {\r\n    if (typeof obj !== 'object' || obj === null)\r\n        return util.stringify(obj);\r\n    var keys = [];\r\n    for (var k in obj) {\r\n        keys.push(k);\r\n    }\r\n    // Export as json, but with the keys sorted.\r\n    keys.sort();\r\n    var key = '{';\r\n    for (var i = 0; i < keys.length; i++) {\r\n        if (i !== 0)\r\n            key += ',';\r\n        key += util.stringify(keys[i]);\r\n        key += ':';\r\n        key += ObjectToUniqueKey(obj[keys[i]]);\r\n    }\r\n    key += '}';\r\n    return key;\r\n};\r\n/**\r\n * Splits a string into a number of smaller segments of maximum size\r\n * @param {!string} str The string\r\n * @param {!number} segsize The maximum number of chars in the string.\r\n * @return {Array.<string>} The string, split into appropriately-sized chunks\r\n */\r\nvar splitStringBySize = function (str, segsize) {\r\n    var len = str.length;\r\n    if (len <= segsize) {\r\n        return [str];\r\n    }\r\n    var dataSegs = [];\r\n    for (var c = 0; c < len; c += segsize) {\r\n        if (c + segsize > len) {\r\n            dataSegs.push(str.substring(c, len));\r\n        }\r\n        else {\r\n            dataSegs.push(str.substring(c, c + segsize));\r\n        }\r\n    }\r\n    return dataSegs;\r\n};\r\n/**\r\n * Apply a function to each (key, value) pair in an object or\r\n * apply a function to each (index, value) pair in an array\r\n * @param {!(Object|Array)} obj The object or array to iterate over\r\n * @param {function(?, ?)} fn The function to apply\r\n */\r\nvar each = function (obj, fn) {\r\n    if (Array.isArray(obj)) {\r\n        for (var i = 0; i < obj.length; ++i) {\r\n            fn(i, obj[i]);\r\n        }\r\n    }\r\n    else {\r\n        /**\r\n         * in the conversion of code we removed the goog.object.forEach\r\n         * function which did a value,key callback. We standardized on\r\n         * a single impl that does a key, value callback. So we invert\r\n         * to not have to touch the `each` code points\r\n         */\r\n        util.forEach(obj, function (key, val) { return fn(val, key); });\r\n    }\r\n};\r\n/**\r\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\r\n * I made one modification at the end and removed the NaN / Infinity\r\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\r\n * @param {!number} v A double\r\n * @return {string}\r\n */\r\nvar doubleToIEEE754String = function (v) {\r\n    util.assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\r\n    var ebits = 11, fbits = 52;\r\n    var bias = (1 << (ebits - 1)) - 1, s, e, f, ln, i, bits, str;\r\n    // Compute sign, exponent, fraction\r\n    // Skip NaN / Infinity handling --MJL.\r\n    if (v === 0) {\r\n        e = 0;\r\n        f = 0;\r\n        s = 1 / v === -Infinity ? 1 : 0;\r\n    }\r\n    else {\r\n        s = v < 0;\r\n        v = Math.abs(v);\r\n        if (v >= Math.pow(2, 1 - bias)) {\r\n            // Normalized\r\n            ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\r\n            e = ln + bias;\r\n            f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\r\n        }\r\n        else {\r\n            // Denormalized\r\n            e = 0;\r\n            f = Math.round(v / Math.pow(2, 1 - bias - fbits));\r\n        }\r\n    }\r\n    // Pack sign, exponent, fraction\r\n    bits = [];\r\n    for (i = fbits; i; i -= 1) {\r\n        bits.push(f % 2 ? 1 : 0);\r\n        f = Math.floor(f / 2);\r\n    }\r\n    for (i = ebits; i; i -= 1) {\r\n        bits.push(e % 2 ? 1 : 0);\r\n        e = Math.floor(e / 2);\r\n    }\r\n    bits.push(s ? 1 : 0);\r\n    bits.reverse();\r\n    str = bits.join('');\r\n    // Return the data as a hex string. --MJL\r\n    var hexByteString = '';\r\n    for (i = 0; i < 64; i += 8) {\r\n        var hexByte = parseInt(str.substr(i, 8), 2).toString(16);\r\n        if (hexByte.length === 1)\r\n            hexByte = '0' + hexByte;\r\n        hexByteString = hexByteString + hexByte;\r\n    }\r\n    return hexByteString.toLowerCase();\r\n};\r\n/**\r\n * Used to detect if we're in a Chrome content script (which executes in an\r\n * isolated environment where long-polling doesn't work).\r\n * @return {boolean}\r\n */\r\nvar isChromeExtensionContentScript = function () {\r\n    return !!(typeof window === 'object' &&\r\n        window['chrome'] &&\r\n        window['chrome']['extension'] &&\r\n        !/^chrome/.test(window.location.href));\r\n};\r\n/**\r\n * Used to detect if we're in a Windows 8 Store app.\r\n * @return {boolean}\r\n */\r\nvar isWindowsStoreApp = function () {\r\n    // Check for the presence of a couple WinRT globals\r\n    return typeof Windows === 'object' && typeof Windows.UI === 'object';\r\n};\r\n/**\r\n * Converts a server error code to a Javascript Error\r\n * @param {!string} code\r\n * @param {!Query} query\r\n * @return {Error}\r\n */\r\nvar errorForServerCode = function (code, query) {\r\n    var reason = 'Unknown Error';\r\n    if (code === 'too_big') {\r\n        reason =\r\n            'The data requested exceeds the maximum size ' +\r\n                'that can be accessed with a single request.';\r\n    }\r\n    else if (code == 'permission_denied') {\r\n        reason = \"Client doesn't have permission to access the desired data.\";\r\n    }\r\n    else if (code == 'unavailable') {\r\n        reason = 'The service is unavailable';\r\n    }\r\n    var error = new Error(code + ' at ' + query.path.toString() + ': ' + reason);\r\n    error.code = code.toUpperCase();\r\n    return error;\r\n};\r\n/**\r\n * Used to test for integer-looking strings\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INTEGER_REGEXP_ = new RegExp('^-?\\\\d{1,10}$');\r\n/**\r\n * If the string contains a 32-bit integer, return it.  Else return null.\r\n * @param {!string} str\r\n * @return {?number}\r\n */\r\nvar tryParseInt = function (str) {\r\n    if (INTEGER_REGEXP_.test(str)) {\r\n        var intVal = Number(str);\r\n        if (intVal >= -2147483648 && intVal <= 2147483647) {\r\n            return intVal;\r\n        }\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Helper to run some code but catch any exceptions and re-throw them later.\r\n * Useful for preventing user callbacks from breaking internal code.\r\n *\r\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\r\n * convenient (we don't have to try to figure out when is a safe point to\r\n * re-throw it), and the behavior seems reasonable:\r\n *\r\n * * If you aren't pausing on exceptions, you get an error in the console with\r\n *   the correct stack trace.\r\n * * If you're pausing on all exceptions, the debugger will pause on your\r\n *   exception and then again when we rethrow it.\r\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\r\n *   on us re-throwing it.\r\n *\r\n * @param {!function()} fn The code to guard.\r\n */\r\nvar exceptionGuard = function (fn) {\r\n    try {\r\n        fn();\r\n    }\r\n    catch (e) {\r\n        // Re-throw exception when it's safe.\r\n        setTimeout(function () {\r\n            // It used to be that \"throw e\" would result in a good console error with\r\n            // relevant context, but as of Chrome 39, you just get the firebase.js\r\n            // file/line number where we re-throw it, which is useless. So we log\r\n            // e.stack explicitly.\r\n            var stack = e.stack || '';\r\n            warn('Exception was thrown by user callback.', stack);\r\n            throw e;\r\n        }, Math.floor(0));\r\n    }\r\n};\r\n/**\r\n * @return {boolean} true if we think we're currently being crawled.\r\n */\r\nvar beingCrawled = function () {\r\n    var userAgent = (typeof window === 'object' &&\r\n        window['navigator'] &&\r\n        window['navigator']['userAgent']) ||\r\n        '';\r\n    // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\r\n    // believe to support JavaScript/AJAX rendering.\r\n    // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\r\n    // would have seen the page\" is flaky if we don't treat it as a crawler.\r\n    return (userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0);\r\n};\r\n/**\r\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\r\n *\r\n * It is removed with clearTimeout() as normal.\r\n *\r\n * @param {Function} fn Function to run.\r\n * @param {number} time Milliseconds to wait before running.\r\n * @return {number|Object} The setTimeout() return value.\r\n */\r\nvar setTimeoutNonBlocking = function (fn, time) {\r\n    var timeout = setTimeout(fn, time);\r\n    if (typeof timeout === 'object' && timeout['unref']) {\r\n        timeout['unref']();\r\n    }\r\n    return timeout;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An immutable object representing a parsed path.  It's immutable so that you\r\n * can pass them around to other functions without worrying about them changing\r\n * it.\r\n */\r\nvar Path = /** @class */ (function () {\r\n    /**\r\n     * @param {string|Array.<string>} pathOrString Path string to parse,\r\n     *      or another path, or the raw tokens array\r\n     * @param {number=} pieceNum\r\n     */\r\n    function Path(pathOrString, pieceNum) {\r\n        if (pieceNum === void 0) {\r\n            this.pieces_ = pathOrString.split('/');\r\n            // Remove empty pieces.\r\n            var copyTo = 0;\r\n            for (var i = 0; i < this.pieces_.length; i++) {\r\n                if (this.pieces_[i].length > 0) {\r\n                    this.pieces_[copyTo] = this.pieces_[i];\r\n                    copyTo++;\r\n                }\r\n            }\r\n            this.pieces_.length = copyTo;\r\n            this.pieceNum_ = 0;\r\n        }\r\n        else {\r\n            this.pieces_ = pathOrString;\r\n            this.pieceNum_ = pieceNum;\r\n        }\r\n    }\r\n    Object.defineProperty(Path, \"Empty\", {\r\n        /**\r\n         * Singleton to represent an empty path\r\n         *\r\n         * @const\r\n         */\r\n        get: function () {\r\n            return new Path('');\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Path.prototype.getFront = function () {\r\n        if (this.pieceNum_ >= this.pieces_.length)\r\n            return null;\r\n        return this.pieces_[this.pieceNum_];\r\n    };\r\n    /**\r\n     * @return {number} The number of segments in this path\r\n     */\r\n    Path.prototype.getLength = function () {\r\n        return this.pieces_.length - this.pieceNum_;\r\n    };\r\n    /**\r\n     * @return {!Path}\r\n     */\r\n    Path.prototype.popFront = function () {\r\n        var pieceNum = this.pieceNum_;\r\n        if (pieceNum < this.pieces_.length) {\r\n            pieceNum++;\r\n        }\r\n        return new Path(this.pieces_, pieceNum);\r\n    };\r\n    /**\r\n     * @return {?string}\r\n     */\r\n    Path.prototype.getBack = function () {\r\n        if (this.pieceNum_ < this.pieces_.length)\r\n            return this.pieces_[this.pieces_.length - 1];\r\n        return null;\r\n    };\r\n    Path.prototype.toString = function () {\r\n        var pathString = '';\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '')\r\n                pathString += '/' + this.pieces_[i];\r\n        }\r\n        return pathString || '/';\r\n    };\r\n    Path.prototype.toUrlEncodedString = function () {\r\n        var pathString = '';\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '')\r\n                pathString += '/' + encodeURIComponent(String(this.pieces_[i]));\r\n        }\r\n        return pathString || '/';\r\n    };\r\n    /**\r\n     * Shallow copy of the parts of the path.\r\n     *\r\n     * @param {number=} begin\r\n     * @return {!Array<string>}\r\n     */\r\n    Path.prototype.slice = function (begin) {\r\n        if (begin === void 0) { begin = 0; }\r\n        return this.pieces_.slice(this.pieceNum_ + begin);\r\n    };\r\n    /**\r\n     * @return {?Path}\r\n     */\r\n    Path.prototype.parent = function () {\r\n        if (this.pieceNum_ >= this.pieces_.length)\r\n            return null;\r\n        var pieces = [];\r\n        for (var i = this.pieceNum_; i < this.pieces_.length - 1; i++)\r\n            pieces.push(this.pieces_[i]);\r\n        return new Path(pieces, 0);\r\n    };\r\n    /**\r\n     * @param {string|!Path} childPathObj\r\n     * @return {!Path}\r\n     */\r\n    Path.prototype.child = function (childPathObj) {\r\n        var pieces = [];\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++)\r\n            pieces.push(this.pieces_[i]);\r\n        if (childPathObj instanceof Path) {\r\n            for (var i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\r\n                pieces.push(childPathObj.pieces_[i]);\r\n            }\r\n        }\r\n        else {\r\n            var childPieces = childPathObj.split('/');\r\n            for (var i = 0; i < childPieces.length; i++) {\r\n                if (childPieces[i].length > 0)\r\n                    pieces.push(childPieces[i]);\r\n            }\r\n        }\r\n        return new Path(pieces, 0);\r\n    };\r\n    /**\r\n     * @return {boolean} True if there are no segments in this path\r\n     */\r\n    Path.prototype.isEmpty = function () {\r\n        return this.pieceNum_ >= this.pieces_.length;\r\n    };\r\n    /**\r\n     * @param {!Path} outerPath\r\n     * @param {!Path} innerPath\r\n     * @return {!Path} The path from outerPath to innerPath\r\n     */\r\n    Path.relativePath = function (outerPath, innerPath) {\r\n        var outer = outerPath.getFront(), inner = innerPath.getFront();\r\n        if (outer === null) {\r\n            return innerPath;\r\n        }\r\n        else if (outer === inner) {\r\n            return Path.relativePath(outerPath.popFront(), innerPath.popFront());\r\n        }\r\n        else {\r\n            throw new Error('INTERNAL ERROR: innerPath (' +\r\n                innerPath +\r\n                ') is not within ' +\r\n                'outerPath (' +\r\n                outerPath +\r\n                ')');\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Path} left\r\n     * @param {!Path} right\r\n     * @return {number} -1, 0, 1 if left is less, equal, or greater than the right.\r\n     */\r\n    Path.comparePaths = function (left, right) {\r\n        var leftKeys = left.slice();\r\n        var rightKeys = right.slice();\r\n        for (var i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\r\n            var cmp = nameCompare(leftKeys[i], rightKeys[i]);\r\n            if (cmp !== 0)\r\n                return cmp;\r\n        }\r\n        if (leftKeys.length === rightKeys.length)\r\n            return 0;\r\n        return leftKeys.length < rightKeys.length ? -1 : 1;\r\n    };\r\n    /**\r\n     *\r\n     * @param {Path} other\r\n     * @return {boolean} true if paths are the same.\r\n     */\r\n    Path.prototype.equals = function (other) {\r\n        if (this.getLength() !== other.getLength()) {\r\n            return false;\r\n        }\r\n        for (var i = this.pieceNum_, j = other.pieceNum_; i <= this.pieces_.length; i++, j++) {\r\n            if (this.pieces_[i] !== other.pieces_[j]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} other\r\n     * @return {boolean} True if this path is a parent (or the same as) other\r\n     */\r\n    Path.prototype.contains = function (other) {\r\n        var i = this.pieceNum_;\r\n        var j = other.pieceNum_;\r\n        if (this.getLength() > other.getLength()) {\r\n            return false;\r\n        }\r\n        while (i < this.pieces_.length) {\r\n            if (this.pieces_[i] !== other.pieces_[j]) {\r\n                return false;\r\n            }\r\n            ++i;\r\n            ++j;\r\n        }\r\n        return true;\r\n    };\r\n    return Path;\r\n}()); // end Path\r\n/**\r\n * Dynamic (mutable) path used to count path lengths.\r\n *\r\n * This class is used to efficiently check paths for valid\r\n * length (in UTF8 bytes) and depth (used in path validation).\r\n *\r\n * Throws Error exception if path is ever invalid.\r\n *\r\n * The definition of a path always begins with '/'.\r\n */\r\nvar ValidationPath = /** @class */ (function () {\r\n    /**\r\n     * @param {!Path} path Initial Path.\r\n     * @param {string} errorPrefix_ Prefix for any error messages.\r\n     */\r\n    function ValidationPath(path, errorPrefix_) {\r\n        this.errorPrefix_ = errorPrefix_;\r\n        /** @type {!Array<string>} */\r\n        this.parts_ = path.slice();\r\n        /** @type {number} Initialize to number of '/' chars needed in path. */\r\n        this.byteLength_ = Math.max(1, this.parts_.length);\r\n        for (var i = 0; i < this.parts_.length; i++) {\r\n            this.byteLength_ += util.stringLength(this.parts_[i]);\r\n        }\r\n        this.checkValid_();\r\n    }\r\n    Object.defineProperty(ValidationPath, \"MAX_PATH_DEPTH\", {\r\n        /** @const {number} Maximum key depth. */\r\n        get: function () {\r\n            return 32;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ValidationPath, \"MAX_PATH_LENGTH_BYTES\", {\r\n        /** @const {number} Maximum number of (UTF8) bytes in a Firebase path. */\r\n        get: function () {\r\n            return 768;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** @param {string} child */\r\n    ValidationPath.prototype.push = function (child) {\r\n        // Count the needed '/'\r\n        if (this.parts_.length > 0) {\r\n            this.byteLength_ += 1;\r\n        }\r\n        this.parts_.push(child);\r\n        this.byteLength_ += util.stringLength(child);\r\n        this.checkValid_();\r\n    };\r\n    ValidationPath.prototype.pop = function () {\r\n        var last = this.parts_.pop();\r\n        this.byteLength_ -= util.stringLength(last);\r\n        // Un-count the previous '/'\r\n        if (this.parts_.length > 0) {\r\n            this.byteLength_ -= 1;\r\n        }\r\n    };\r\n    ValidationPath.prototype.checkValid_ = function () {\r\n        if (this.byteLength_ > ValidationPath.MAX_PATH_LENGTH_BYTES) {\r\n            throw new Error(this.errorPrefix_ +\r\n                'has a key path longer than ' +\r\n                ValidationPath.MAX_PATH_LENGTH_BYTES +\r\n                ' bytes (' +\r\n                this.byteLength_ +\r\n                ').');\r\n        }\r\n        if (this.parts_.length > ValidationPath.MAX_PATH_DEPTH) {\r\n            throw new Error(this.errorPrefix_ +\r\n                'path specified exceeds the maximum depth that can be written (' +\r\n                ValidationPath.MAX_PATH_DEPTH +\r\n                ') or object contains a cycle ' +\r\n                this.toErrorString());\r\n        }\r\n    };\r\n    /**\r\n     * String for use in error messages - uses '.' notation for path.\r\n     *\r\n     * @return {string}\r\n     */\r\n    ValidationPath.prototype.toErrorString = function () {\r\n        if (this.parts_.length == 0) {\r\n            return '';\r\n        }\r\n        return \"in property '\" + this.parts_.join('.') + \"'\";\r\n    };\r\n    return ValidationPath;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PROTOCOL_VERSION = '5';\r\nvar VERSION_PARAM = 'v';\r\nvar TRANSPORT_SESSION_PARAM = 's';\r\nvar REFERER_PARAM = 'r';\r\nvar FORGE_REF = 'f';\r\nvar FORGE_DOMAIN = 'firebaseio.com';\r\nvar LAST_SESSION_PARAM = 'ls';\r\nvar WEBSOCKET = 'websocket';\r\nvar LONG_POLLING = 'long_polling';\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A class that holds metadata about a Repo object\r\n *\r\n * @constructor\r\n */\r\nvar RepoInfo = /** @class */ (function () {\r\n    /**\r\n     * @param {string} host Hostname portion of the url for the repo\r\n     * @param {boolean} secure Whether or not this repo is accessed over ssl\r\n     * @param {string} namespace The namespace represented by the repo\r\n     * @param {boolean} webSocketOnly Whether to prefer websockets over all other transports (used by Nest).\r\n     * @param {string=} persistenceKey Override the default session persistence storage key\r\n     */\r\n    function RepoInfo(host, secure, namespace, webSocketOnly, persistenceKey) {\r\n        if (persistenceKey === void 0) { persistenceKey = ''; }\r\n        this.secure = secure;\r\n        this.namespace = namespace;\r\n        this.webSocketOnly = webSocketOnly;\r\n        this.persistenceKey = persistenceKey;\r\n        this.host = host.toLowerCase();\r\n        this.domain = this.host.substr(this.host.indexOf('.') + 1);\r\n        this.internalHost = PersistentStorage.get('host:' + host) || this.host;\r\n    }\r\n    RepoInfo.prototype.needsQueryParam = function () {\r\n        return this.host !== this.internalHost || this.isCustomHost();\r\n    };\r\n    RepoInfo.prototype.isCacheableHost = function () {\r\n        return this.internalHost.substr(0, 2) === 's-';\r\n    };\r\n    RepoInfo.prototype.isDemoHost = function () {\r\n        return this.domain === 'firebaseio-demo.com';\r\n    };\r\n    RepoInfo.prototype.isCustomHost = function () {\r\n        return (this.domain !== 'firebaseio.com' && this.domain !== 'firebaseio-demo.com');\r\n    };\r\n    RepoInfo.prototype.updateHost = function (newHost) {\r\n        if (newHost !== this.internalHost) {\r\n            this.internalHost = newHost;\r\n            if (this.isCacheableHost()) {\r\n                PersistentStorage.set('host:' + this.host, this.internalHost);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns the websocket URL for this repo\r\n     * @param {string} type of connection\r\n     * @param {Object} params list\r\n     * @return {string} The URL for this repo\r\n     */\r\n    RepoInfo.prototype.connectionURL = function (type, params) {\r\n        util.assert(typeof type === 'string', 'typeof type must == string');\r\n        util.assert(typeof params === 'object', 'typeof params must == object');\r\n        var connURL;\r\n        if (type === WEBSOCKET) {\r\n            connURL =\r\n                (this.secure ? 'wss://' : 'ws://') + this.internalHost + '/.ws?';\r\n        }\r\n        else if (type === LONG_POLLING) {\r\n            connURL =\r\n                (this.secure ? 'https://' : 'http://') + this.internalHost + '/.lp?';\r\n        }\r\n        else {\r\n            throw new Error('Unknown connection type: ' + type);\r\n        }\r\n        if (this.needsQueryParam()) {\r\n            params['ns'] = this.namespace;\r\n        }\r\n        var pairs = [];\r\n        util.forEach(params, function (key, value) {\r\n            pairs.push(key + '=' + value);\r\n        });\r\n        return connURL + pairs.join('&');\r\n    };\r\n    /** @return {string} */\r\n    RepoInfo.prototype.toString = function () {\r\n        var str = this.toURLString();\r\n        if (this.persistenceKey) {\r\n            str += '<' + this.persistenceKey + '>';\r\n        }\r\n        return str;\r\n    };\r\n    /** @return {string} */\r\n    RepoInfo.prototype.toURLString = function () {\r\n        return (this.secure ? 'https://' : 'http://') + this.host;\r\n    };\r\n    return RepoInfo;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!string} pathString\r\n * @return {string}\r\n */\r\nfunction decodePath(pathString) {\r\n    var pathStringDecoded = '';\r\n    var pieces = pathString.split('/');\r\n    for (var i = 0; i < pieces.length; i++) {\r\n        if (pieces[i].length > 0) {\r\n            var piece = pieces[i];\r\n            try {\r\n                piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\r\n            }\r\n            catch (e) { }\r\n            pathStringDecoded += '/' + piece;\r\n        }\r\n    }\r\n    return pathStringDecoded;\r\n}\r\n/**\r\n * @param {!string} queryString\r\n * @return {!{[key:string]:string}} key value hash\r\n */\r\nfunction decodeQuery(queryString) {\r\n    var results = {};\r\n    if (queryString.charAt(0) === '?') {\r\n        queryString = queryString.substring(1);\r\n    }\r\n    for (var _i = 0, _a = queryString.split('&'); _i < _a.length; _i++) {\r\n        var segment = _a[_i];\r\n        if (segment.length === 0) {\r\n            continue;\r\n        }\r\n        var kv = segment.split('=');\r\n        if (kv.length === 2) {\r\n            results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\r\n        }\r\n        else {\r\n            warn(\"Invalid query segment '\" + segment + \"' in query '\" + queryString + \"'\");\r\n        }\r\n    }\r\n    return results;\r\n}\r\n/**\r\n *\r\n * @param {!string} dataURL\r\n * @return {{repoInfo: !RepoInfo, path: !Path}}\r\n */\r\nvar parseRepoInfo = function (dataURL) {\r\n    var parsedUrl = parseURL(dataURL), namespace = parsedUrl.subdomain;\r\n    if (parsedUrl.domain === 'firebase') {\r\n        fatal(parsedUrl.host +\r\n            ' is no longer supported. ' +\r\n            'Please use <YOUR FIREBASE>.firebaseio.com instead');\r\n    }\r\n    // Catch common error of uninitialized namespace value.\r\n    if ((!namespace || namespace == 'undefined') &&\r\n        parsedUrl.domain !== 'localhost') {\r\n        fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');\r\n    }\r\n    if (!parsedUrl.secure) {\r\n        warnIfPageIsSecure();\r\n    }\r\n    var webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\r\n    return {\r\n        repoInfo: new RepoInfo(parsedUrl.host, parsedUrl.secure, namespace, webSocketOnly),\r\n        path: new Path(parsedUrl.pathString)\r\n    };\r\n};\r\n/**\r\n *\r\n * @param {!string} dataURL\r\n * @return {{host: string, port: number, domain: string, subdomain: string, secure: boolean, scheme: string, pathString: string}}\r\n */\r\nvar parseURL = function (dataURL) {\r\n    // Default to empty strings in the event of a malformed string.\r\n    var host = '', domain = '', subdomain = '', pathString = '';\r\n    // Always default to SSL, unless otherwise specified.\r\n    var secure = true, scheme = 'https', port = 443;\r\n    // Don't do any validation here. The caller is responsible for validating the result of parsing.\r\n    if (typeof dataURL === 'string') {\r\n        // Parse scheme.\r\n        var colonInd = dataURL.indexOf('//');\r\n        if (colonInd >= 0) {\r\n            scheme = dataURL.substring(0, colonInd - 1);\r\n            dataURL = dataURL.substring(colonInd + 2);\r\n        }\r\n        // Parse host, path, and query string.\r\n        var slashInd = dataURL.indexOf('/');\r\n        if (slashInd === -1) {\r\n            slashInd = dataURL.length;\r\n        }\r\n        var questionMarkInd = dataURL.indexOf('?');\r\n        if (questionMarkInd === -1) {\r\n            questionMarkInd = dataURL.length;\r\n        }\r\n        host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\r\n        if (slashInd < questionMarkInd) {\r\n            // For pathString, questionMarkInd will always come after slashInd\r\n            pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\r\n        }\r\n        var queryParams = decodeQuery(dataURL.substring(Math.min(dataURL.length, questionMarkInd)));\r\n        // If we have a port, use scheme for determining if it's secure.\r\n        colonInd = host.indexOf(':');\r\n        if (colonInd >= 0) {\r\n            secure = scheme === 'https' || scheme === 'wss';\r\n            port = parseInt(host.substring(colonInd + 1), 10);\r\n        }\r\n        else {\r\n            colonInd = dataURL.length;\r\n        }\r\n        var parts = host.split('.');\r\n        if (parts.length === 3) {\r\n            // Normalize namespaces to lowercase to share storage / connection.\r\n            domain = parts[1];\r\n            subdomain = parts[0].toLowerCase();\r\n        }\r\n        else if (parts.length === 2) {\r\n            domain = parts[0];\r\n        }\r\n        else if (parts[0].slice(0, colonInd).toLowerCase() === 'localhost') {\r\n            domain = 'localhost';\r\n        }\r\n        // Support `ns` query param if subdomain not already set\r\n        if (subdomain === '' && 'ns' in queryParams) {\r\n            subdomain = queryParams['ns'];\r\n        }\r\n    }\r\n    return {\r\n        host: host,\r\n        port: port,\r\n        domain: domain,\r\n        subdomain: subdomain,\r\n        secure: secure,\r\n        scheme: scheme,\r\n        pathString: pathString\r\n    };\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * True for invalid Firebase keys\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * True for invalid Firebase paths.\r\n * Allows '/' in paths.\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * Maximum number of characters to allow in leaf value\r\n * @type {number}\r\n * @private\r\n */\r\nvar MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\r\n/**\r\n * @param {*} key\r\n * @return {boolean}\r\n */\r\nvar isValidKey = function (key) {\r\n    return (typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key));\r\n};\r\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\r\nvar isValidPathString = function (pathString) {\r\n    return (typeof pathString === 'string' &&\r\n        pathString.length !== 0 &&\r\n        !INVALID_PATH_REGEX_.test(pathString));\r\n};\r\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\r\nvar isValidRootPathString = function (pathString) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    return isValidPathString(pathString);\r\n};\r\n/**\r\n * @param {*} priority\r\n * @return {boolean}\r\n */\r\nvar isValidPriority = function (priority) {\r\n    return (priority === null ||\r\n        typeof priority === 'string' ||\r\n        (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\r\n        (priority && typeof priority === 'object' && util.contains(priority, '.sv')));\r\n};\r\n/**\r\n * Pre-validate a datum passed as an argument to Firebase function.\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\r\nvar validateFirebaseDataArg = function (fnName, argumentNumber, data, path, optional) {\r\n    if (optional && data === undefined)\r\n        return;\r\n    validateFirebaseData(util.errorPrefix(fnName, argumentNumber, optional), data, path);\r\n};\r\n/**\r\n * Validate a data object client-side before sending to server.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {*} data\r\n * @param {!Path|!ValidationPath} path_\r\n */\r\nvar validateFirebaseData = function (errorPrefix, data, path_) {\r\n    var path = path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\r\n    if (data === undefined) {\r\n        throw new Error(errorPrefix + 'contains undefined ' + path.toErrorString());\r\n    }\r\n    if (typeof data === 'function') {\r\n        throw new Error(errorPrefix +\r\n            'contains a function ' +\r\n            path.toErrorString() +\r\n            ' with contents = ' +\r\n            data.toString());\r\n    }\r\n    if (isInvalidJSONNumber(data)) {\r\n        throw new Error(errorPrefix + 'contains ' + data.toString() + ' ' + path.toErrorString());\r\n    }\r\n    // Check max leaf size, but try to avoid the utf8 conversion if we can.\r\n    if (typeof data === 'string' &&\r\n        data.length > MAX_LEAF_SIZE_ / 3 &&\r\n        util.stringLength(data) > MAX_LEAF_SIZE_) {\r\n        throw new Error(errorPrefix +\r\n            'contains a string greater than ' +\r\n            MAX_LEAF_SIZE_ +\r\n            ' utf8 bytes ' +\r\n            path.toErrorString() +\r\n            \" ('\" +\r\n            data.substring(0, 50) +\r\n            \"...')\");\r\n    }\r\n    // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\r\n    // to save extra walking of large objects.\r\n    if (data && typeof data === 'object') {\r\n        var hasDotValue_1 = false, hasActualChild_1 = false;\r\n        util.forEach(data, function (key, value) {\r\n            if (key === '.value') {\r\n                hasDotValue_1 = true;\r\n            }\r\n            else if (key !== '.priority' && key !== '.sv') {\r\n                hasActualChild_1 = true;\r\n                if (!isValidKey(key)) {\r\n                    throw new Error(errorPrefix +\r\n                        ' contains an invalid key (' +\r\n                        key +\r\n                        ') ' +\r\n                        path.toErrorString() +\r\n                        '.  Keys must be non-empty strings ' +\r\n                        'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n                }\r\n            }\r\n            path.push(key);\r\n            validateFirebaseData(errorPrefix, value, path);\r\n            path.pop();\r\n        });\r\n        if (hasDotValue_1 && hasActualChild_1) {\r\n            throw new Error(errorPrefix +\r\n                ' contains \".value\" child ' +\r\n                path.toErrorString() +\r\n                ' in addition to actual children.');\r\n        }\r\n    }\r\n};\r\n/**\r\n * Pre-validate paths passed in the firebase function.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {Array<!Path>} mergePaths\r\n */\r\nvar validateFirebaseMergePaths = function (errorPrefix, mergePaths) {\r\n    var i, curPath;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        var keys = curPath.slice();\r\n        for (var j = 0; j < keys.length; j++) {\r\n            if (keys[j] === '.priority' && j === keys.length - 1) ;\r\n            else if (!isValidKey(keys[j])) {\r\n                throw new Error(errorPrefix +\r\n                    'contains an invalid key (' +\r\n                    keys[j] +\r\n                    ') in path ' +\r\n                    curPath.toString() +\r\n                    '. Keys must be non-empty strings ' +\r\n                    'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n            }\r\n        }\r\n    }\r\n    // Check that update keys are not descendants of each other.\r\n    // We rely on the property that sorting guarantees that ancestors come\r\n    // right before descendants.\r\n    mergePaths.sort(Path.comparePaths);\r\n    var prevPath = null;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        if (prevPath !== null && prevPath.contains(curPath)) {\r\n            throw new Error(errorPrefix +\r\n                'contains a path ' +\r\n                prevPath.toString() +\r\n                ' that is ancestor of another path ' +\r\n                curPath.toString());\r\n        }\r\n        prevPath = curPath;\r\n    }\r\n};\r\n/**\r\n * pre-validate an object passed as an argument to firebase function (\r\n * must be an object - e.g. for firebase.update()).\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\r\nvar validateFirebaseMergeDataArg = function (fnName, argumentNumber, data, path, optional) {\r\n    if (optional && data === undefined)\r\n        return;\r\n    var errorPrefix = util.errorPrefix(fnName, argumentNumber, optional);\r\n    if (!(data && typeof data === 'object') || Array.isArray(data)) {\r\n        throw new Error(errorPrefix + ' must be an object containing the children to replace.');\r\n    }\r\n    var mergePaths = [];\r\n    util.forEach(data, function (key, value) {\r\n        var curPath = new Path(key);\r\n        validateFirebaseData(errorPrefix, value, path.child(curPath));\r\n        if (curPath.getBack() === '.priority') {\r\n            if (!isValidPriority(value)) {\r\n                throw new Error(errorPrefix +\r\n                    \"contains an invalid value for '\" +\r\n                    curPath.toString() +\r\n                    \"', which must be a valid \" +\r\n                    'Firebase priority (a string, finite number, server value, or null).');\r\n            }\r\n        }\r\n        mergePaths.push(curPath);\r\n    });\r\n    validateFirebaseMergePaths(errorPrefix, mergePaths);\r\n};\r\nvar validatePriority = function (fnName, argumentNumber, priority, optional) {\r\n    if (optional && priority === undefined)\r\n        return;\r\n    if (isInvalidJSONNumber(priority))\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'is ' +\r\n            priority.toString() +\r\n            ', but must be a valid Firebase priority (a string, finite number, ' +\r\n            'server value, or null).');\r\n    // Special case to allow importing data with a .sv.\r\n    if (!isValidPriority(priority))\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid Firebase priority ' +\r\n            '(a string, finite number, server value, or null).');\r\n};\r\nvar validateEventType = function (fnName, argumentNumber, eventType, optional) {\r\n    if (optional && eventType === undefined)\r\n        return;\r\n    switch (eventType) {\r\n        case 'value':\r\n        case 'child_added':\r\n        case 'child_removed':\r\n        case 'child_changed':\r\n        case 'child_moved':\r\n            break;\r\n        default:\r\n            throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n                'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\r\n                '\"child_changed\", or \"child_moved\".');\r\n    }\r\n};\r\nvar validateKey = function (fnName, argumentNumber, key, optional) {\r\n    if (optional && key === undefined)\r\n        return;\r\n    if (!isValidKey(key))\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'was an invalid key = \"' +\r\n            key +\r\n            '\".  Firebase keys must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');\r\n};\r\nvar validatePathString = function (fnName, argumentNumber, pathString, optional) {\r\n    if (optional && pathString === undefined)\r\n        return;\r\n    if (!isValidPathString(pathString))\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'was an invalid path = \"' +\r\n            pathString +\r\n            '\". Paths must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\r\n};\r\nvar validateRootPathString = function (fnName, argumentNumber, pathString, optional) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    validatePathString(fnName, argumentNumber, pathString, optional);\r\n};\r\nvar validateWritablePath = function (fnName, path) {\r\n    if (path.getFront() === '.info') {\r\n        throw new Error(fnName + \" failed = Can't modify data under /.info/\");\r\n    }\r\n};\r\nvar validateUrl = function (fnName, argumentNumber, parsedUrl) {\r\n    // TODO = Validate server better.\r\n    var pathString = parsedUrl.path.toString();\r\n    if (!(typeof parsedUrl.repoInfo.host === 'string') ||\r\n        parsedUrl.repoInfo.host.length === 0 ||\r\n        (!isValidKey(parsedUrl.repoInfo.namespace) &&\r\n            parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\r\n        (pathString.length !== 0 && !isValidRootPathString(pathString))) {\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, false) +\r\n            'must be a valid firebase URL and ' +\r\n            'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');\r\n    }\r\n};\r\nvar validateBoolean = function (fnName, argumentNumber, bool, optional) {\r\n    if (optional && bool === undefined)\r\n        return;\r\n    if (typeof bool !== 'boolean')\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) + 'must be a boolean.');\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n */\r\nvar OnDisconnect = /** @class */ (function () {\r\n    /**\r\n     * @param {!Repo} repo_\r\n     * @param {!Path} path_\r\n     */\r\n    function OnDisconnect(repo_, path_) {\r\n        this.repo_ = repo_;\r\n        this.path_ = path_;\r\n    }\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.cancel = function (onComplete) {\r\n        util.validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);\r\n        util.validateCallback('OnDisconnect.cancel', 1, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectCancel(this.path_, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.remove = function (onComplete) {\r\n        util.validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);\r\n        validateWritablePath('OnDisconnect.remove', this.path_);\r\n        util.validateCallback('OnDisconnect.remove', 1, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSet(this.path_, null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} value\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.set = function (value, onComplete) {\r\n        util.validateArgCount('OnDisconnect.set', 1, 2, arguments.length);\r\n        validateWritablePath('OnDisconnect.set', this.path_);\r\n        validateFirebaseDataArg('OnDisconnect.set', 1, value, this.path_, false);\r\n        util.validateCallback('OnDisconnect.set', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSet(this.path_, value, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} value\r\n     * @param {number|string|null} priority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.setWithPriority = function (value, priority, onComplete) {\r\n        util.validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);\r\n        validateWritablePath('OnDisconnect.setWithPriority', this.path_);\r\n        validateFirebaseDataArg('OnDisconnect.setWithPriority', 1, value, this.path_, false);\r\n        validatePriority('OnDisconnect.setWithPriority', 2, priority, false);\r\n        util.validateCallback('OnDisconnect.setWithPriority', 3, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSetWithPriority(this.path_, value, priority, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {!Object} objectToMerge\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.update = function (objectToMerge, onComplete) {\r\n        util.validateArgCount('OnDisconnect.update', 1, 2, arguments.length);\r\n        validateWritablePath('OnDisconnect.update', this.path_);\r\n        if (Array.isArray(objectToMerge)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < objectToMerge.length; ++i) {\r\n                newObjectToMerge['' + i] = objectToMerge[i];\r\n            }\r\n            objectToMerge = newObjectToMerge;\r\n            warn('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' +\r\n                'existing data, or an Object with integer keys if you really do want to only update some of the children.');\r\n        }\r\n        validateFirebaseMergeDataArg('OnDisconnect.update', 1, objectToMerge, this.path_, false);\r\n        util.validateCallback('OnDisconnect.update', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectUpdate(this.path_, objectToMerge, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    return OnDisconnect;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar TransactionResult = /** @class */ (function () {\r\n    /**\r\n     * A type for the resolve value of Firebase.transaction.\r\n     * @constructor\r\n     * @dict\r\n     * @param {boolean} committed\r\n     * @param {DataSnapshot} snapshot\r\n     */\r\n    function TransactionResult(committed, snapshot) {\r\n        this.committed = committed;\r\n        this.snapshot = snapshot;\r\n    }\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    TransactionResult.prototype.toJSON = function () {\r\n        util.validateArgCount('TransactionResult.toJSON', 0, 1, arguments.length);\r\n        return { committed: this.committed, snapshot: this.snapshot.toJSON() };\r\n    };\r\n    return TransactionResult;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Fancy ID generator that creates 20-character string identifiers with the\r\n * following properties:\r\n *\r\n * 1. They're based on timestamp so that they sort *after* any existing ids.\r\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\r\n *    collide with other clients' IDs.\r\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\r\n *    that will sort properly).\r\n * 4. They're monotonically increasing. Even if you generate more than one in\r\n *    the same timestamp, the latter ones will sort after the former ones. We do\r\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\r\n *    in the case of a timestamp collision).\r\n */\r\nvar nextPushId = (function () {\r\n    // Modeled after base64 web-safe chars, but ordered by ASCII.\r\n    var PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\r\n    // Timestamp of last push, used to prevent local collisions if you push twice\r\n    // in one ms.\r\n    var lastPushTime = 0;\r\n    // We generate 72-bits of randomness which get turned into 12 characters and\r\n    // appended to the timestamp to prevent collisions with other clients. We\r\n    // store the last characters we generated because in the event of a collision,\r\n    // we'll use those same characters except \"incremented\" by one.\r\n    var lastRandChars = [];\r\n    return function (now) {\r\n        var duplicateTime = now === lastPushTime;\r\n        lastPushTime = now;\r\n        var i;\r\n        var timeStampChars = new Array(8);\r\n        for (i = 7; i >= 0; i--) {\r\n            timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\r\n            // NOTE: Can't use << here because javascript will convert to int and lose\r\n            // the upper bits.\r\n            now = Math.floor(now / 64);\r\n        }\r\n        util.assert(now === 0, 'Cannot push at time == 0');\r\n        var id = timeStampChars.join('');\r\n        if (!duplicateTime) {\r\n            for (i = 0; i < 12; i++) {\r\n                lastRandChars[i] = Math.floor(Math.random() * 64);\r\n            }\r\n        }\r\n        else {\r\n            // If the timestamp hasn't changed since last push, use the same random\r\n            // number, except incremented by 1.\r\n            for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\r\n                lastRandChars[i] = 0;\r\n            }\r\n            lastRandChars[i]++;\r\n        }\r\n        for (i = 0; i < 12; i++) {\r\n            id += PUSH_CHARS.charAt(lastRandChars[i]);\r\n        }\r\n        util.assert(id.length === 20, 'nextPushId: Length should be 20.');\r\n        return id;\r\n    };\r\n})();\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @param {!string} name\r\n * @param {!Node} node\r\n * @constructor\r\n * @struct\r\n */\r\nvar NamedNode = /** @class */ (function () {\r\n    function NamedNode(name, node) {\r\n        this.name = name;\r\n        this.node = node;\r\n    }\r\n    /**\r\n     *\r\n     * @param {!string} name\r\n     * @param {!Node} node\r\n     * @return {NamedNode}\r\n     */\r\n    NamedNode.Wrap = function (name, node) {\r\n        return new NamedNode(name, node);\r\n    };\r\n    return NamedNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @constructor\r\n */\r\nvar Index = /** @class */ (function () {\r\n    function Index() {\r\n    }\r\n    /**\r\n     * @return {function(!NamedNode, !NamedNode):number} A standalone comparison function for\r\n     * this index\r\n     */\r\n    Index.prototype.getCompare = function () {\r\n        return this.compare.bind(this);\r\n    };\r\n    /**\r\n     * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\r\n     * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\r\n     *\r\n     * @param {!Node} oldNode\r\n     * @param {!Node} newNode\r\n     * @return {boolean} True if the portion of the snapshot being indexed changed between oldNode and newNode\r\n     */\r\n    Index.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        var oldWrapped = new NamedNode(MIN_NAME, oldNode);\r\n        var newWrapped = new NamedNode(MIN_NAME, newNode);\r\n        return this.compare(oldWrapped, newWrapped) !== 0;\r\n    };\r\n    /**\r\n     * @return {!NamedNode} a node wrapper that will sort equal to or less than\r\n     * any other node wrapper, using this index\r\n     */\r\n    Index.prototype.minPost = function () {\r\n        return NamedNode.MIN;\r\n    };\r\n    return Index;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __EMPTY_NODE;\r\nvar KeyIndex = /** @class */ (function (_super) {\r\n    tslib_1.__extends(KeyIndex, _super);\r\n    function KeyIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(KeyIndex, \"__EMPTY_NODE\", {\r\n        get: function () {\r\n            return __EMPTY_NODE;\r\n        },\r\n        set: function (val) {\r\n            __EMPTY_NODE = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.compare = function (a, b) {\r\n        return nameCompare(a.name, b.name);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.isDefinedOn = function (node) {\r\n        // We could probably return true here (since every node has a key), but it's never called\r\n        // so just leaving unimplemented for now.\r\n        throw util.assertionError('KeyIndex.isDefinedOn not expected to be called.');\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return false; // The key for a node never changes.\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.minPost = function () {\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.maxPost = function () {\r\n        // TODO: This should really be created once and cached in a static property, but\r\n        // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\r\n        return new NamedNode(MAX_NAME, __EMPTY_NODE);\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    KeyIndex.prototype.makePost = function (indexValue, name) {\r\n        util.assert(typeof indexValue === 'string', 'KeyIndex indexValue must always be a string.');\r\n        // We just use empty node, but it'll never be compared, since our comparator only looks at name.\r\n        return new NamedNode(indexValue, __EMPTY_NODE);\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    KeyIndex.prototype.toString = function () {\r\n        return '.key';\r\n    };\r\n    return KeyIndex;\r\n}(Index));\r\nvar KEY_INDEX = new KeyIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MAX_NODE;\r\nfunction setMaxNode(val) {\r\n    MAX_NODE = val;\r\n}\r\n/**\r\n * @param {(!string|!number)} priority\r\n * @return {!string}\r\n */\r\nvar priorityHashText = function (priority) {\r\n    if (typeof priority === 'number')\r\n        return 'number:' + doubleToIEEE754String(priority);\r\n    else\r\n        return 'string:' + priority;\r\n};\r\n/**\r\n * Validates that a priority snapshot Node is valid.\r\n *\r\n * @param {!Node} priorityNode\r\n */\r\nvar validatePriorityNode = function (priorityNode) {\r\n    if (priorityNode.isLeafNode()) {\r\n        var val = priorityNode.val();\r\n        util.assert(typeof val === 'string' ||\r\n            typeof val === 'number' ||\r\n            (typeof val === 'object' && util.contains(val, '.sv')), 'Priority must be a string or number.');\r\n    }\r\n    else {\r\n        util.assert(priorityNode === MAX_NODE || priorityNode.isEmpty(), 'priority of unexpected type.');\r\n    }\r\n    // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\r\n    util.assert(priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(), \"Priority nodes can't have a priority of their own.\");\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __childrenNodeConstructor;\r\n/**\r\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\r\n * implements Node and stores the value of the node (a string,\r\n * number, or boolean) accessible via getValue().\r\n */\r\nvar LeafNode = /** @class */ (function () {\r\n    /**\r\n     * @implements {Node}\r\n     * @param {!(string|number|boolean|Object)} value_ The value to store in this leaf node.\r\n     *                                         The object type is possible in the event of a deferred value\r\n     * @param {!Node=} priorityNode_ The priority of this node.\r\n     */\r\n    function LeafNode(value_, priorityNode_) {\r\n        if (priorityNode_ === void 0) { priorityNode_ = LeafNode.__childrenNodeConstructor.EMPTY_NODE; }\r\n        this.value_ = value_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.lazyHash_ = null;\r\n        util.assert(this.value_ !== undefined && this.value_ !== null, \"LeafNode shouldn't be created with null/undefined value.\");\r\n        validatePriorityNode(this.priorityNode_);\r\n    }\r\n    Object.defineProperty(LeafNode, \"__childrenNodeConstructor\", {\r\n        get: function () {\r\n            return __childrenNodeConstructor;\r\n        },\r\n        set: function (val) {\r\n            __childrenNodeConstructor = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isLeafNode = function () {\r\n        return true;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPriority = function () {\r\n        return this.priorityNode_;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updatePriority = function (newPriorityNode) {\r\n        return new LeafNode(this.value_, newPriorityNode);\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getChild = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this;\r\n        }\r\n        else if (path.getFront() === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.hasChild = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPredecessorChildName = function (childName, childNode) {\r\n        return null;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else if (newChildNode.isEmpty() && childName !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName, newChildNode).updatePriority(this.priorityNode_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = path.getFront();\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else if (newChildNode.isEmpty() && front !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            util.assert(front !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\r\n            return this.updateImmediateChild(front, LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(path.popFront(), newChildNode));\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.numChildren = function () {\r\n        return 0;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.forEachChild = function (index, action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.val = function (exportFormat) {\r\n        if (exportFormat && !this.getPriority().isEmpty())\r\n            return {\r\n                '.value': this.getValue(),\r\n                '.priority': this.getPriority().val()\r\n            };\r\n        else\r\n            return this.getValue();\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash = '';\r\n            if (!this.priorityNode_.isEmpty())\r\n                toHash +=\r\n                    'priority:' +\r\n                        priorityHashText(this.priorityNode_.val()) +\r\n                        ':';\r\n            var type = typeof this.value_;\r\n            toHash += type + ':';\r\n            if (type === 'number') {\r\n                toHash += doubleToIEEE754String(this.value_);\r\n            }\r\n            else {\r\n                toHash += this.value_;\r\n            }\r\n            this.lazyHash_ = sha1(toHash);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /**\r\n     * Returns the value of the leaf node.\r\n     * @return {Object|string|number|boolean} The value of the node.\r\n     */\r\n    LeafNode.prototype.getValue = function () {\r\n        return this.value_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.compareTo = function (other) {\r\n        if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\r\n            return 1;\r\n        }\r\n        else if (other instanceof LeafNode.__childrenNodeConstructor) {\r\n            return -1;\r\n        }\r\n        else {\r\n            util.assert(other.isLeafNode(), 'Unknown node type');\r\n            return this.compareToLeafNode_(other);\r\n        }\r\n    };\r\n    /**\r\n     * Comparison specifically for two leaf nodes\r\n     * @param {!LeafNode} otherLeaf\r\n     * @return {!number}\r\n     * @private\r\n     */\r\n    LeafNode.prototype.compareToLeafNode_ = function (otherLeaf) {\r\n        var otherLeafType = typeof otherLeaf.value_;\r\n        var thisLeafType = typeof this.value_;\r\n        var otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\r\n        var thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\r\n        util.assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\r\n        util.assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\r\n        if (otherIndex === thisIndex) {\r\n            // Same type, compare values\r\n            if (thisLeafType === 'object') {\r\n                // Deferred value nodes are all equal, but we should also never get to this point...\r\n                return 0;\r\n            }\r\n            else {\r\n                // Note that this works because true > false, all others are number or string comparisons\r\n                if (this.value_ < otherLeaf.value_) {\r\n                    return -1;\r\n                }\r\n                else if (this.value_ === otherLeaf.value_) {\r\n                    return 0;\r\n                }\r\n                else {\r\n                    return 1;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return thisIndex - otherIndex;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.withIndex = function () {\r\n        return this;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.isIndexed = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.equals = function (other) {\r\n        /**\r\n         * @inheritDoc\r\n         */\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            var otherLeaf = other;\r\n            return (this.value_ === otherLeaf.value_ &&\r\n                this.priorityNode_.equals(otherLeaf.priorityNode_));\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * The sort order for comparing leaf nodes of different types. If two leaf nodes have\r\n     * the same type, the comparison falls back to their value\r\n     * @type {Array.<!string>}\r\n     * @const\r\n     */\r\n    LeafNode.VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\r\n    return LeafNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar nodeFromJSON;\r\nvar MAX_NODE$1;\r\nfunction setNodeFromJSON(val) {\r\n    nodeFromJSON = val;\r\n}\r\nfunction setMaxNode$1(val) {\r\n    MAX_NODE$1 = val;\r\n}\r\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\r\nvar PriorityIndex = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PriorityIndex, _super);\r\n    function PriorityIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.compare = function (a, b) {\r\n        var aPriority = a.node.getPriority();\r\n        var bPriority = b.node.getPriority();\r\n        var indexCmp = aPriority.compareTo(bPriority);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getPriority().isEmpty();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.getPriority().equals(newNode.getPriority());\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.minPost = function () {\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.maxPost = function () {\r\n        return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE$1));\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    PriorityIndex.prototype.makePost = function (indexValue, name) {\r\n        var priorityNode = nodeFromJSON(indexValue);\r\n        return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    PriorityIndex.prototype.toString = function () {\r\n        return '.priority';\r\n    };\r\n    return PriorityIndex;\r\n}(Index));\r\nvar PRIORITY_INDEX = new PriorityIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An iterator over an LLRBNode.\r\n */\r\nvar SortedMapIterator = /** @class */ (function () {\r\n    /**\r\n     * @template K, V, T\r\n     * @param {LLRBNode|LLRBEmptyNode} node Node to iterate.\r\n     * @param {?K} startKey\r\n     * @param {function(K, K): number} comparator\r\n     * @param {boolean} isReverse_ Whether or not to iterate in reverse\r\n     * @param {(function(K, V):T)=} resultGenerator_\r\n     */\r\n    function SortedMapIterator(node, startKey, comparator, isReverse_, resultGenerator_) {\r\n        if (resultGenerator_ === void 0) { resultGenerator_ = null; }\r\n        this.isReverse_ = isReverse_;\r\n        this.resultGenerator_ = resultGenerator_;\r\n        /** @private\r\n         * @type {Array.<!LLRBNode>}\r\n         */\r\n        this.nodeStack_ = [];\r\n        var cmp = 1;\r\n        while (!node.isEmpty()) {\r\n            node = node;\r\n            cmp = startKey ? comparator(node.key, startKey) : 1;\r\n            // flip the comparison if we're going in reverse\r\n            if (isReverse_)\r\n                cmp *= -1;\r\n            if (cmp < 0) {\r\n                // This node is less than our start key. ignore it\r\n                if (this.isReverse_) {\r\n                    node = node.left;\r\n                }\r\n                else {\r\n                    node = node.right;\r\n                }\r\n            }\r\n            else if (cmp === 0) {\r\n                // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\r\n                this.nodeStack_.push(node);\r\n                break;\r\n            }\r\n            else {\r\n                // This node is greater than our start key, add it to the stack and move to the next one\r\n                this.nodeStack_.push(node);\r\n                if (this.isReverse_) {\r\n                    node = node.right;\r\n                }\r\n                else {\r\n                    node = node.left;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SortedMapIterator.prototype.getNext = function () {\r\n        if (this.nodeStack_.length === 0)\r\n            return null;\r\n        var node = this.nodeStack_.pop();\r\n        var result;\r\n        if (this.resultGenerator_)\r\n            result = this.resultGenerator_(node.key, node.value);\r\n        else\r\n            result = { key: node.key, value: node.value };\r\n        if (this.isReverse_) {\r\n            node = node.left;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.right;\r\n            }\r\n        }\r\n        else {\r\n            node = node.right;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.left;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    SortedMapIterator.prototype.hasNext = function () {\r\n        return this.nodeStack_.length > 0;\r\n    };\r\n    SortedMapIterator.prototype.peek = function () {\r\n        if (this.nodeStack_.length === 0)\r\n            return null;\r\n        var node = this.nodeStack_[this.nodeStack_.length - 1];\r\n        if (this.resultGenerator_) {\r\n            return this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            return { key: node.key, value: node.value };\r\n        }\r\n    };\r\n    return SortedMapIterator;\r\n}());\r\n/**\r\n * Represents a node in a Left-leaning Red-Black tree.\r\n */\r\nvar LLRBNode = /** @class */ (function () {\r\n    /**\r\n     * @template K, V\r\n     * @param {!K} key Key associated with this node.\r\n     * @param {!V} value Value associated with this node.\r\n     * @param {?boolean} color Whether this node is red.\r\n     * @param {?(LLRBNode|LLRBEmptyNode)=} left Left child.\r\n     * @param {?(LLRBNode|LLRBEmptyNode)=} right Right child.\r\n     */\r\n    function LLRBNode(key, value, color, left, right) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.color = color != null ? color : LLRBNode.RED;\r\n        this.left =\r\n            left != null ? left : SortedMap.EMPTY_NODE;\r\n        this.right =\r\n            right != null ? right : SortedMap.EMPTY_NODE;\r\n    }\r\n    /**\r\n     * Returns a copy of the current node, optionally replacing pieces of it.\r\n     *\r\n     * @param {?K} key New key for the node, or null.\r\n     * @param {?V} value New value for the node, or null.\r\n     * @param {?boolean} color New color for the node, or null.\r\n     * @param {?LLRBNode|LLRBEmptyNode} left New left child for the node, or null.\r\n     * @param {?LLRBNode|LLRBEmptyNode} right New right child for the node, or null.\r\n     * @return {!LLRBNode} The node copy.\r\n     */\r\n    LLRBNode.prototype.copy = function (key, value, color, left, right) {\r\n        return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the tree.\r\n     */\r\n    LLRBNode.prototype.count = function () {\r\n        return this.left.count() + 1 + this.right.count();\r\n    };\r\n    /**\r\n     * @return {boolean} True if the tree is empty.\r\n     */\r\n    LLRBNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called for each\r\n     *   node.  If it returns true, traversal is aborted.\r\n     * @return {*} The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    LLRBNode.prototype.inorderTraversal = function (action) {\r\n        return (this.left.inorderTraversal(action) ||\r\n            action(this.key, this.value) ||\r\n            this.right.inorderTraversal(action));\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!Object, !Object)} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {*} True if traversal was aborted.\r\n     */\r\n    LLRBNode.prototype.reverseTraversal = function (action) {\r\n        return (this.right.reverseTraversal(action) ||\r\n            action(this.key, this.value) ||\r\n            this.left.reverseTraversal(action));\r\n    };\r\n    /**\r\n     * @return {!Object} The minimum node in the tree.\r\n     * @private\r\n     */\r\n    LLRBNode.prototype.min_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            return this.left.min_();\r\n        }\r\n    };\r\n    /**\r\n     * @return {!K} The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.minKey = function () {\r\n        return this.min_().key;\r\n    };\r\n    /**\r\n     * @return {!K} The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.maxKey = function () {\r\n        if (this.right.isEmpty()) {\r\n            return this.key;\r\n        }\r\n        else {\r\n            return this.right.maxKey();\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Object} key Key to insert.\r\n     * @param {!Object} value Value to insert.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode} New tree, with the key/value added.\r\n     */\r\n    LLRBNode.prototype.insert = function (key, value, comparator) {\r\n        var cmp, n;\r\n        n = this;\r\n        cmp = comparator(key, n.key);\r\n        if (cmp < 0) {\r\n            n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\r\n        }\r\n        else if (cmp === 0) {\r\n            n = n.copy(null, value, null, null, null);\r\n        }\r\n        else {\r\n            n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the minimum key removed.\r\n     */\r\n    LLRBNode.prototype.removeMin_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return SortedMap.EMPTY_NODE;\r\n        }\r\n        var n = this;\r\n        if (!n.left.isRed_() && !n.left.left.isRed_())\r\n            n = n.moveRedLeft_();\r\n        n = n.copy(null, null, null, n.left.removeMin_(), null);\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @param {!Object} key The key of the item to remove.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the specified item removed.\r\n     */\r\n    LLRBNode.prototype.remove = function (key, comparator) {\r\n        var n, smallest;\r\n        n = this;\r\n        if (comparator(key, n.key) < 0) {\r\n            if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\r\n                n = n.moveRedLeft_();\r\n            }\r\n            n = n.copy(null, null, null, n.left.remove(key, comparator), null);\r\n        }\r\n        else {\r\n            if (n.left.isRed_())\r\n                n = n.rotateRight_();\r\n            if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\r\n                n = n.moveRedRight_();\r\n            }\r\n            if (comparator(key, n.key) === 0) {\r\n                if (n.right.isEmpty()) {\r\n                    return SortedMap.EMPTY_NODE;\r\n                }\r\n                else {\r\n                    smallest = n.right.min_();\r\n                    n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin_());\r\n                }\r\n            }\r\n            n = n.copy(null, null, null, null, n.right.remove(key, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {boolean} Whether this is a RED node.\r\n     */\r\n    LLRBNode.prototype.isRed_ = function () {\r\n        return this.color;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree after performing any needed rotations.\r\n     */\r\n    LLRBNode.prototype.fixUp_ = function () {\r\n        var n = this;\r\n        if (n.right.isRed_() && !n.left.isRed_())\r\n            n = n.rotateLeft_();\r\n        if (n.left.isRed_() && n.left.left.isRed_())\r\n            n = n.rotateRight_();\r\n        if (n.left.isRed_() && n.right.isRed_())\r\n            n = n.colorFlip_();\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after moveRedLeft.\r\n     */\r\n    LLRBNode.prototype.moveRedLeft_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.right.left.isRed_()) {\r\n            n = n.copy(null, null, null, null, n.right.rotateRight_());\r\n            n = n.rotateLeft_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after moveRedRight.\r\n     */\r\n    LLRBNode.prototype.moveRedRight_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after rotateLeft.\r\n     */\r\n    LLRBNode.prototype.rotateLeft_ = function () {\r\n        var nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\r\n        return this.right.copy(null, null, this.color, nl, null);\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after rotateRight.\r\n     */\r\n    LLRBNode.prototype.rotateRight_ = function () {\r\n        var nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\r\n        return this.left.copy(null, null, this.color, null, nr);\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after colorFlip.\r\n     */\r\n    LLRBNode.prototype.colorFlip_ = function () {\r\n        var left = this.left.copy(null, null, !this.left.color, null, null);\r\n        var right = this.right.copy(null, null, !this.right.color, null, null);\r\n        return this.copy(null, null, !this.color, left, right);\r\n    };\r\n    /**\r\n     * For testing.\r\n     *\r\n     * @private\r\n     * @return {boolean} True if all is well.\r\n     */\r\n    LLRBNode.prototype.checkMaxDepth_ = function () {\r\n        var blackDepth = this.check_();\r\n        return Math.pow(2.0, blackDepth) <= this.count() + 1;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {number} Not sure what this returns exactly. :-).\r\n     */\r\n    LLRBNode.prototype.check_ = function () {\r\n        var blackDepth;\r\n        if (this.isRed_() && this.left.isRed_()) {\r\n            throw new Error('Red node has red child(' + this.key + ',' + this.value + ')');\r\n        }\r\n        if (this.right.isRed_()) {\r\n            throw new Error('Right child of (' + this.key + ',' + this.value + ') is red');\r\n        }\r\n        blackDepth = this.left.check_();\r\n        if (blackDepth !== this.right.check_()) {\r\n            throw new Error('Black depths differ');\r\n        }\r\n        else {\r\n            return blackDepth + (this.isRed_() ? 0 : 1);\r\n        }\r\n    };\r\n    LLRBNode.RED = true;\r\n    LLRBNode.BLACK = false;\r\n    return LLRBNode;\r\n}());\r\n/**\r\n * Represents an empty node (a leaf node in the Red-Black Tree).\r\n */\r\nvar LLRBEmptyNode = /** @class */ (function () {\r\n    function LLRBEmptyNode() {\r\n    }\r\n    /**\r\n     * Returns a copy of the current node.\r\n     *\r\n     * @return {!LLRBEmptyNode} The node copy.\r\n     */\r\n    LLRBEmptyNode.prototype.copy = function (key, value, color, left, right) {\r\n        return this;\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key/value added.\r\n     *\r\n     * @param {!K} key Key to be added.\r\n     * @param {!V} value Value to be added.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode} New tree, with item added.\r\n     */\r\n    LLRBEmptyNode.prototype.insert = function (key, value, comparator) {\r\n        return new LLRBNode(key, value, null);\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key removed.\r\n     *\r\n     * @param {!K} key The key to remove.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBEmptyNode} New tree, with item removed.\r\n     */\r\n    LLRBEmptyNode.prototype.remove = function (key, comparator) {\r\n        return this;\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the tree.\r\n     */\r\n    LLRBEmptyNode.prototype.count = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @return {boolean} True if the tree is empty.\r\n     */\r\n    LLRBEmptyNode.prototype.isEmpty = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {boolean} True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.inorderTraversal = function (action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V)} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {boolean} True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.reverseTraversal = function (action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * @return {null}\r\n     */\r\n    LLRBEmptyNode.prototype.minKey = function () {\r\n        return null;\r\n    };\r\n    /**\r\n     * @return {null}\r\n     */\r\n    LLRBEmptyNode.prototype.maxKey = function () {\r\n        return null;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {number} Not sure what this returns exactly. :-).\r\n     */\r\n    LLRBEmptyNode.prototype.check_ = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {boolean} Whether this node is red.\r\n     */\r\n    LLRBEmptyNode.prototype.isRed_ = function () {\r\n        return false;\r\n    };\r\n    return LLRBEmptyNode;\r\n}());\r\n/**\r\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\r\n * tree.\r\n */\r\nvar SortedMap = /** @class */ (function () {\r\n    /**\r\n     * @template K, V\r\n     * @param {function(K, K):number} comparator_ Key comparator.\r\n     * @param {LLRBNode=} root_ (Optional) Root node for the map.\r\n     */\r\n    function SortedMap(comparator_, root_) {\r\n        if (root_ === void 0) { root_ = SortedMap.EMPTY_NODE; }\r\n        this.comparator_ = comparator_;\r\n        this.root_ = root_;\r\n    }\r\n    /**\r\n     * Returns a copy of the map, with the specified key/value added or replaced.\r\n     * (TODO: We should perhaps rename this method to 'put')\r\n     *\r\n     * @param {!K} key Key to be added.\r\n     * @param {!V} value Value to be added.\r\n     * @return {!SortedMap.<K, V>} New map, with item added.\r\n     */\r\n    SortedMap.prototype.insert = function (key, value) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .insert(key, value, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns a copy of the map, with the specified key removed.\r\n     *\r\n     * @param {!K} key The key to remove.\r\n     * @return {!SortedMap.<K, V>} New map, with item removed.\r\n     */\r\n    SortedMap.prototype.remove = function (key) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .remove(key, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns the value of the node with the given key, or null.\r\n     *\r\n     * @param {!K} key The key to look up.\r\n     * @return {?V} The value of the node with the given key, or null if the\r\n     * key doesn't exist.\r\n     */\r\n    SortedMap.prototype.get = function (key) {\r\n        var cmp;\r\n        var node = this.root_;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                return node.value;\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                node = node.right;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Returns the key of the item *before* the specified key, or null if key is the first item.\r\n     * @param {K} key The key to find the predecessor of\r\n     * @return {?K} The predecessor key.\r\n     */\r\n    SortedMap.prototype.getPredecessorKey = function (key) {\r\n        var cmp, node = this.root_, rightParent = null;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                if (!node.left.isEmpty()) {\r\n                    node = node.left;\r\n                    while (!node.right.isEmpty())\r\n                        node = node.right;\r\n                    return node.key;\r\n                }\r\n                else if (rightParent) {\r\n                    return rightParent.key;\r\n                }\r\n                else {\r\n                    return null; // first item.\r\n                }\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                rightParent = node;\r\n                node = node.right;\r\n            }\r\n        }\r\n        throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');\r\n    };\r\n    /**\r\n     * @return {boolean} True if the map is empty.\r\n     */\r\n    SortedMap.prototype.isEmpty = function () {\r\n        return this.root_.isEmpty();\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the map.\r\n     */\r\n    SortedMap.prototype.count = function () {\r\n        return this.root_.count();\r\n    };\r\n    /**\r\n     * @return {?K} The minimum key in the map.\r\n     */\r\n    SortedMap.prototype.minKey = function () {\r\n        return this.root_.minKey();\r\n    };\r\n    /**\r\n     * @return {?K} The maximum key in the map.\r\n     */\r\n    SortedMap.prototype.maxKey = function () {\r\n        return this.root_.maxKey();\r\n    };\r\n    /**\r\n     * Traverses the map in key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @return {*} The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    SortedMap.prototype.inorderTraversal = function (action) {\r\n        return this.root_.inorderTraversal(action);\r\n    };\r\n    /**\r\n     * Traverses the map in reverse key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param {function(!Object, !Object)} action Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @return {*} True if the traversal was aborted.\r\n     */\r\n    SortedMap.prototype.reverseTraversal = function (action) {\r\n        return this.root_.reverseTraversal(action);\r\n    };\r\n    /**\r\n     * Returns an iterator over the SortedMap.\r\n     * @template T\r\n     * @param {(function(K, V):T)=} resultGenerator\r\n     * @return {SortedMapIterator.<K, V, T>} The iterator.\r\n     */\r\n    SortedMap.prototype.getIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, true, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, true, resultGenerator);\r\n    };\r\n    /**\r\n     * Always use the same empty node, to reduce memory.\r\n     * @const\r\n     */\r\n    SortedMap.EMPTY_NODE = new LLRBEmptyNode();\r\n    return SortedMap;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar LOG_2 = Math.log(2);\r\n/**\r\n * @constructor\r\n */\r\nvar Base12Num = /** @class */ (function () {\r\n    /**\r\n     * @param {number} length\r\n     */\r\n    function Base12Num(length) {\r\n        var logBase2 = function (num) {\r\n            return parseInt((Math.log(num) / LOG_2), 10);\r\n        };\r\n        var bitMask = function (bits) { return parseInt(Array(bits + 1).join('1'), 2); };\r\n        this.count = logBase2(length + 1);\r\n        this.current_ = this.count - 1;\r\n        var mask = bitMask(this.count);\r\n        this.bits_ = (length + 1) & mask;\r\n    }\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    Base12Num.prototype.nextBitIsOne = function () {\r\n        //noinspection JSBitwiseOperatorUsage\r\n        var result = !(this.bits_ & (0x1 << this.current_));\r\n        this.current_--;\r\n        return result;\r\n    };\r\n    return Base12Num;\r\n}());\r\n/**\r\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\r\n * function\r\n *\r\n * Uses the algorithm described in the paper linked here:\r\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\r\n *\r\n * @template K, V\r\n * @param {Array.<!NamedNode>} childList Unsorted list of children\r\n * @param {function(!NamedNode, !NamedNode):number} cmp The comparison method to be used\r\n * @param {(function(NamedNode):K)=} keyFn An optional function to extract K from a node wrapper, if K's\r\n *                                                        type is not NamedNode\r\n * @param {(function(K, K):number)=} mapSortFn An optional override for comparator used by the generated sorted map\r\n * @return {SortedMap.<K, V>}\r\n */\r\nvar buildChildSet = function (childList, cmp, keyFn, mapSortFn) {\r\n    childList.sort(cmp);\r\n    var buildBalancedTree = function (low, high) {\r\n        var length = high - low;\r\n        var namedNode;\r\n        var key;\r\n        if (length == 0) {\r\n            return null;\r\n        }\r\n        else if (length == 1) {\r\n            namedNode = childList[low];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, null, null);\r\n        }\r\n        else {\r\n            var middle = parseInt((length / 2), 10) + low;\r\n            var left = buildBalancedTree(low, middle);\r\n            var right = buildBalancedTree(middle + 1, high);\r\n            namedNode = childList[middle];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, left, right);\r\n        }\r\n    };\r\n    var buildFrom12Array = function (base12) {\r\n        var node = null;\r\n        var root = null;\r\n        var index = childList.length;\r\n        var buildPennant = function (chunkSize, color) {\r\n            var low = index - chunkSize;\r\n            var high = index;\r\n            index -= chunkSize;\r\n            var childTree = buildBalancedTree(low + 1, high);\r\n            var namedNode = childList[low];\r\n            var key = keyFn ? keyFn(namedNode) : namedNode;\r\n            attachPennant(new LLRBNode(key, namedNode.node, color, null, childTree));\r\n        };\r\n        var attachPennant = function (pennant) {\r\n            if (node) {\r\n                node.left = pennant;\r\n                node = pennant;\r\n            }\r\n            else {\r\n                root = pennant;\r\n                node = pennant;\r\n            }\r\n        };\r\n        for (var i = 0; i < base12.count; ++i) {\r\n            var isOne = base12.nextBitIsOne();\r\n            // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\r\n            var chunkSize = Math.pow(2, base12.count - (i + 1));\r\n            if (isOne) {\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n            }\r\n            else {\r\n                // current == 2\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n                buildPennant(chunkSize, LLRBNode.RED);\r\n            }\r\n        }\r\n        return root;\r\n    };\r\n    var base12 = new Base12Num(childList.length);\r\n    var root = buildFrom12Array(base12);\r\n    return new SortedMap(mapSortFn || cmp, root);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _defaultIndexMap;\r\nvar fallbackObject = {};\r\n/**\r\n *\r\n * @param {Object.<string, FallbackType|SortedMap.<NamedNode, Node>>} indexes\r\n * @param {Object.<string, Index>} indexSet\r\n * @constructor\r\n */\r\nvar IndexMap = /** @class */ (function () {\r\n    function IndexMap(indexes_, indexSet_) {\r\n        this.indexes_ = indexes_;\r\n        this.indexSet_ = indexSet_;\r\n    }\r\n    Object.defineProperty(IndexMap, \"Default\", {\r\n        /**\r\n         * The default IndexMap for nodes without a priority\r\n         * @type {!IndexMap}\r\n         * @const\r\n         */\r\n        get: function () {\r\n            util.assert(fallbackObject && PRIORITY_INDEX, 'ChildrenNode.ts has not been loaded');\r\n            _defaultIndexMap =\r\n                _defaultIndexMap ||\r\n                    new IndexMap({ '.priority': fallbackObject }, { '.priority': PRIORITY_INDEX });\r\n            return _defaultIndexMap;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     *\r\n     * @param {!string} indexKey\r\n     * @return {?SortedMap.<NamedNode, Node>}\r\n     */\r\n    IndexMap.prototype.get = function (indexKey) {\r\n        var sortedMap = util.safeGet(this.indexes_, indexKey);\r\n        if (!sortedMap)\r\n            throw new Error('No index defined for ' + indexKey);\r\n        if (sortedMap === fallbackObject) {\r\n            // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\r\n            // regular child map\r\n            return null;\r\n        }\r\n        else {\r\n            return sortedMap;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {boolean}\r\n     */\r\n    IndexMap.prototype.hasIndex = function (indexDefinition) {\r\n        return util.contains(this.indexSet_, indexDefinition.toString());\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @param {!SortedMap.<string, !Node>} existingChildren\r\n     * @return {!IndexMap}\r\n     */\r\n    IndexMap.prototype.addIndex = function (indexDefinition, existingChildren) {\r\n        util.assert(indexDefinition !== KEY_INDEX, \"KeyIndex always exists and isn't meant to be added to the IndexMap.\");\r\n        var childList = [];\r\n        var sawIndexedValue = false;\r\n        var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n        var next = iter.getNext();\r\n        while (next) {\r\n            sawIndexedValue =\r\n                sawIndexedValue || indexDefinition.isDefinedOn(next.node);\r\n            childList.push(next);\r\n            next = iter.getNext();\r\n        }\r\n        var newIndex;\r\n        if (sawIndexedValue) {\r\n            newIndex = buildChildSet(childList, indexDefinition.getCompare());\r\n        }\r\n        else {\r\n            newIndex = fallbackObject;\r\n        }\r\n        var indexName = indexDefinition.toString();\r\n        var newIndexSet = util.clone(this.indexSet_);\r\n        newIndexSet[indexName] = indexDefinition;\r\n        var newIndexes = util.clone(this.indexes_);\r\n        newIndexes[indexName] = newIndex;\r\n        return new IndexMap(newIndexes, newIndexSet);\r\n    };\r\n    /**\r\n     * Ensure that this node is properly tracked in any indexes that we're maintaining\r\n     * @param {!NamedNode} namedNode\r\n     * @param {!SortedMap.<string, !Node>} existingChildren\r\n     * @return {!IndexMap}\r\n     */\r\n    IndexMap.prototype.addToIndexes = function (namedNode, existingChildren) {\r\n        var _this = this;\r\n        var newIndexes = util.map(this.indexes_, function (indexedChildren, indexName) {\r\n            var index = util.safeGet(_this.indexSet_, indexName);\r\n            util.assert(index, 'Missing index implementation for ' + indexName);\r\n            if (indexedChildren === fallbackObject) {\r\n                // Check to see if we need to index everything\r\n                if (index.isDefinedOn(namedNode.node)) {\r\n                    // We need to build this index\r\n                    var childList = [];\r\n                    var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n                    var next = iter.getNext();\r\n                    while (next) {\r\n                        if (next.name != namedNode.name) {\r\n                            childList.push(next);\r\n                        }\r\n                        next = iter.getNext();\r\n                    }\r\n                    childList.push(namedNode);\r\n                    return buildChildSet(childList, index.getCompare());\r\n                }\r\n                else {\r\n                    // No change, this remains a fallback\r\n                    return fallbackObject;\r\n                }\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                var newChildren = indexedChildren;\r\n                if (existingSnap) {\r\n                    newChildren = newChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                return newChildren.insert(namedNode, namedNode.node);\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    /**\r\n     * Create a new IndexMap instance with the given value removed\r\n     * @param {!NamedNode} namedNode\r\n     * @param {!SortedMap.<string, !Node>} existingChildren\r\n     * @return {!IndexMap}\r\n     */\r\n    IndexMap.prototype.removeFromIndexes = function (namedNode, existingChildren) {\r\n        var newIndexes = util.map(this.indexes_, function (indexedChildren) {\r\n            if (indexedChildren === fallbackObject) {\r\n                // This is the fallback. Just return it, nothing to do in this case\r\n                return indexedChildren;\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                if (existingSnap) {\r\n                    return indexedChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                else {\r\n                    // No record of this child\r\n                    return indexedChildren;\r\n                }\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    return IndexMap;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction NAME_ONLY_COMPARATOR(left, right) {\r\n    return nameCompare(left.name, right.name);\r\n}\r\nfunction NAME_COMPARATOR(left, right) {\r\n    return nameCompare(left, right);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\r\nvar EMPTY_NODE;\r\n/**\r\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\r\n * (i.e. nodes with children).  It implements Node and stores the\r\n * list of children in the children property, sorted by child name.\r\n *\r\n * @constructor\r\n * @implements {Node}\r\n */\r\nvar ChildrenNode = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!SortedMap.<string, !Node>} children_ List of children\r\n     * of this node..\r\n     * @param {?Node} priorityNode_ The priority of this node (as a snapshot node).\r\n     * @param {!IndexMap} indexMap_\r\n     */\r\n    function ChildrenNode(children_, priorityNode_, indexMap_) {\r\n        this.children_ = children_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.indexMap_ = indexMap_;\r\n        this.lazyHash_ = null;\r\n        /**\r\n         * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\r\n         * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\r\n         * class instead of an empty ChildrenNode.\r\n         */\r\n        if (this.priorityNode_) {\r\n            validatePriorityNode(this.priorityNode_);\r\n        }\r\n        if (this.children_.isEmpty()) {\r\n            util.assert(!this.priorityNode_ || this.priorityNode_.isEmpty(), 'An empty node cannot have a priority');\r\n        }\r\n    }\r\n    Object.defineProperty(ChildrenNode, \"EMPTY_NODE\", {\r\n        get: function () {\r\n            return (EMPTY_NODE ||\r\n                (EMPTY_NODE = new ChildrenNode(new SortedMap(NAME_COMPARATOR), null, IndexMap.Default)));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isLeafNode = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPriority = function () {\r\n        return this.priorityNode_ || EMPTY_NODE;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updatePriority = function (newPriorityNode) {\r\n        if (this.children_.isEmpty()) {\r\n            // Don't allow priorities on empty nodes\r\n            return this;\r\n        }\r\n        else {\r\n            return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.getPriority();\r\n        }\r\n        else {\r\n            var child = this.children_.get(childName);\r\n            return child === null ? EMPTY_NODE : child;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getChild = function (path) {\r\n        var front = path.getFront();\r\n        if (front === null)\r\n            return this;\r\n        return this.getImmediateChild(front).getChild(path.popFront());\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hasChild = function (childName) {\r\n        return this.children_.get(childName) !== null;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        util.assert(newChildNode, 'We should always be passing snapshot nodes');\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else {\r\n            var namedNode = new NamedNode(childName, newChildNode);\r\n            var newChildren = void 0, newIndexMap = void 0, newPriority = void 0;\r\n            if (newChildNode.isEmpty()) {\r\n                newChildren = this.children_.remove(childName);\r\n                newIndexMap = this.indexMap_.removeFromIndexes(namedNode, this.children_);\r\n            }\r\n            else {\r\n                newChildren = this.children_.insert(childName, newChildNode);\r\n                newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\r\n            }\r\n            newPriority = newChildren.isEmpty() ? EMPTY_NODE : this.priorityNode_;\r\n            return new ChildrenNode(newChildren, newPriority, newIndexMap);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = path.getFront();\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else {\r\n            util.assert(path.getFront() !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\r\n            var newImmediateChild = this.getImmediateChild(front).updateChild(path.popFront(), newChildNode);\r\n            return this.updateImmediateChild(front, newImmediateChild);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isEmpty = function () {\r\n        return this.children_.isEmpty();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.numChildren = function () {\r\n        return this.children_.count();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.val = function (exportFormat) {\r\n        if (this.isEmpty())\r\n            return null;\r\n        var obj = {};\r\n        var numKeys = 0, maxKey = 0, allIntegerKeys = true;\r\n        this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            obj[key] = childNode.val(exportFormat);\r\n            numKeys++;\r\n            if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\r\n                maxKey = Math.max(maxKey, Number(key));\r\n            }\r\n            else {\r\n                allIntegerKeys = false;\r\n            }\r\n        });\r\n        if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\r\n            // convert to array.\r\n            var array = [];\r\n            for (var key in obj)\r\n                array[key] = obj[key];\r\n            return array;\r\n        }\r\n        else {\r\n            if (exportFormat && !this.getPriority().isEmpty()) {\r\n                obj['.priority'] = this.getPriority().val();\r\n            }\r\n            return obj;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash_1 = '';\r\n            if (!this.getPriority().isEmpty())\r\n                toHash_1 +=\r\n                    'priority:' +\r\n                        priorityHashText(this.getPriority().val()) +\r\n                        ':';\r\n            this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                var childHash = childNode.hash();\r\n                if (childHash !== '')\r\n                    toHash_1 += ':' + key + ':' + childHash;\r\n            });\r\n            this.lazyHash_ = toHash_1 === '' ? '' : sha1(toHash_1);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPredecessorChildName = function (childName, childNode, index) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            var predecessor = idx.getPredecessorKey(new NamedNode(childName, childNode));\r\n            return predecessor ? predecessor.name : null;\r\n        }\r\n        else {\r\n            return this.children_.getPredecessorKey(childName);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?string}\r\n     */\r\n    ChildrenNode.prototype.getFirstChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var minKey = idx.minKey();\r\n            return minKey && minKey.name;\r\n        }\r\n        else {\r\n            return this.children_.minKey();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?NamedNode}\r\n     */\r\n    ChildrenNode.prototype.getFirstChild = function (indexDefinition) {\r\n        var minKey = this.getFirstChildName(indexDefinition);\r\n        if (minKey) {\r\n            return new NamedNode(minKey, this.children_.get(minKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Given an index, return the key name of the largest value we have, according to that index\r\n     * @param {!Index} indexDefinition\r\n     * @return {?string}\r\n     */\r\n    ChildrenNode.prototype.getLastChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var maxKey = idx.maxKey();\r\n            return maxKey && maxKey.name;\r\n        }\r\n        else {\r\n            return this.children_.maxKey();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?NamedNode}\r\n     */\r\n    ChildrenNode.prototype.getLastChild = function (indexDefinition) {\r\n        var maxKey = this.getLastChildName(indexDefinition);\r\n        if (maxKey) {\r\n            return new NamedNode(maxKey, this.children_.get(maxKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.forEachChild = function (index, action) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            return idx.inorderTraversal(function (wrappedNode) {\r\n                return action(wrappedNode.name, wrappedNode.node);\r\n            });\r\n        }\r\n        else {\r\n            return this.children_.inorderTraversal(action);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getIterator = function (indexDefinition) {\r\n        return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\r\n    };\r\n    /**\r\n     *\r\n     * @param {!NamedNode} startPost\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getIteratorFrom = function (startPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getIteratorFrom(startPost, function (key) { return key; });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getIteratorFrom(startPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, startPost) < 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getReverseIterator = function (indexDefinition) {\r\n        return this.getReverseIteratorFrom(indexDefinition.maxPost(), indexDefinition);\r\n    };\r\n    /**\r\n     * @param {!NamedNode} endPost\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getReverseIteratorFrom = function (endPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getReverseIteratorFrom(endPost, function (key) {\r\n                return key;\r\n            });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getReverseIteratorFrom(endPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, endPost) > 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.compareTo = function (other) {\r\n        if (this.isEmpty()) {\r\n            if (other.isEmpty()) {\r\n                return 0;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (other.isLeafNode() || other.isEmpty()) {\r\n            return 1;\r\n        }\r\n        else if (other === MAX_NODE$2) {\r\n            return -1;\r\n        }\r\n        else {\r\n            // Must be another node with children.\r\n            return 0;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.withIndex = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX ||\r\n            this.indexMap_.hasIndex(indexDefinition)) {\r\n            return this;\r\n        }\r\n        else {\r\n            var newIndexMap = this.indexMap_.addIndex(indexDefinition, this.children_);\r\n            return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.isIndexed = function (index) {\r\n        return index === KEY_INDEX || this.indexMap_.hasIndex(index);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.equals = function (other) {\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            var otherChildrenNode = other;\r\n            if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\r\n                return false;\r\n            }\r\n            else if (this.children_.count() === otherChildrenNode.children_.count()) {\r\n                var thisIter = this.getIterator(PRIORITY_INDEX);\r\n                var otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\r\n                var thisCurrent = thisIter.getNext();\r\n                var otherCurrent = otherIter.getNext();\r\n                while (thisCurrent && otherCurrent) {\r\n                    if (thisCurrent.name !== otherCurrent.name ||\r\n                        !thisCurrent.node.equals(otherCurrent.node)) {\r\n                        return false;\r\n                    }\r\n                    thisCurrent = thisIter.getNext();\r\n                    otherCurrent = otherIter.getNext();\r\n                }\r\n                return thisCurrent === null && otherCurrent === null;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\r\n     * instead.\r\n     *\r\n     * @private\r\n     * @param {!Index} indexDefinition\r\n     * @return {?SortedMap.<NamedNode, Node>}\r\n     */\r\n    ChildrenNode.prototype.resolveIndex_ = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX) {\r\n            return null;\r\n        }\r\n        else {\r\n            return this.indexMap_.get(indexDefinition.toString());\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @type {RegExp}\r\n     */\r\n    ChildrenNode.INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\r\n    return ChildrenNode;\r\n}());\r\n/**\r\n * @constructor\r\n * @extends {ChildrenNode}\r\n * @private\r\n */\r\nvar MaxNode = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MaxNode, _super);\r\n    function MaxNode() {\r\n        return _super.call(this, new SortedMap(NAME_COMPARATOR), ChildrenNode.EMPTY_NODE, IndexMap.Default) || this;\r\n    }\r\n    MaxNode.prototype.compareTo = function (other) {\r\n        if (other === this) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return 1;\r\n        }\r\n    };\r\n    MaxNode.prototype.equals = function (other) {\r\n        // Not that we every compare it, but MAX_NODE is only ever equal to itself\r\n        return other === this;\r\n    };\r\n    MaxNode.prototype.getPriority = function () {\r\n        return this;\r\n    };\r\n    MaxNode.prototype.getImmediateChild = function (childName) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    };\r\n    MaxNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    return MaxNode;\r\n}(ChildrenNode));\r\n/**\r\n * Marker that will sort higher than any other snapshot.\r\n * @type {!MAX_NODE}\r\n * @const\r\n */\r\nvar MAX_NODE$2 = new MaxNode();\r\nObject.defineProperties(NamedNode, {\r\n    MIN: {\r\n        value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\r\n    },\r\n    MAX: {\r\n        value: new NamedNode(MAX_NAME, MAX_NODE$2)\r\n    }\r\n});\r\n/**\r\n * Reference Extensions\r\n */\r\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\r\nLeafNode.__childrenNodeConstructor = ChildrenNode;\r\nsetMaxNode(MAX_NODE$2);\r\nsetMaxNode$1(MAX_NODE$2);\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar USE_HINZE = true;\r\n/**\r\n * Constructs a snapshot node representing the passed JSON and returns it.\r\n * @param {*} json JSON to create a node for.\r\n * @param {?string|?number=} priority Optional priority to use.  This will be ignored if the\r\n * passed JSON contains a .priority property.\r\n * @return {!Node}\r\n */\r\nfunction nodeFromJSON$1(json, priority) {\r\n    if (priority === void 0) { priority = null; }\r\n    if (json === null) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    }\r\n    if (typeof json === 'object' && '.priority' in json) {\r\n        priority = json['.priority'];\r\n    }\r\n    util.assert(priority === null ||\r\n        typeof priority === 'string' ||\r\n        typeof priority === 'number' ||\r\n        (typeof priority === 'object' && '.sv' in priority), 'Invalid priority type found: ' + typeof priority);\r\n    if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\r\n        json = json['.value'];\r\n    }\r\n    // Valid leaf nodes include non-objects or server-value wrapper objects\r\n    if (typeof json !== 'object' || '.sv' in json) {\r\n        var jsonLeaf = json;\r\n        return new LeafNode(jsonLeaf, nodeFromJSON$1(priority));\r\n    }\r\n    if (!(json instanceof Array) && USE_HINZE) {\r\n        var children_1 = [];\r\n        var childrenHavePriority_1 = false;\r\n        var hinzeJsonObj_1 = json;\r\n        util.forEach(hinzeJsonObj_1, function (key, child) {\r\n            if (typeof key !== 'string' || key.substring(0, 1) !== '.') {\r\n                // Ignore metadata nodes\r\n                var childNode = nodeFromJSON$1(hinzeJsonObj_1[key]);\r\n                if (!childNode.isEmpty()) {\r\n                    childrenHavePriority_1 =\r\n                        childrenHavePriority_1 || !childNode.getPriority().isEmpty();\r\n                    children_1.push(new NamedNode(key, childNode));\r\n                }\r\n            }\r\n        });\r\n        if (children_1.length == 0) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var childSet = buildChildSet(children_1, NAME_ONLY_COMPARATOR, function (namedNode) { return namedNode.name; }, NAME_COMPARATOR);\r\n        if (childrenHavePriority_1) {\r\n            var sortedChildSet = buildChildSet(children_1, PRIORITY_INDEX.getCompare());\r\n            return new ChildrenNode(childSet, nodeFromJSON$1(priority), new IndexMap({ '.priority': sortedChildSet }, { '.priority': PRIORITY_INDEX }));\r\n        }\r\n        else {\r\n            return new ChildrenNode(childSet, nodeFromJSON$1(priority), IndexMap.Default);\r\n        }\r\n    }\r\n    else {\r\n        var node_1 = ChildrenNode.EMPTY_NODE;\r\n        var jsonObj_1 = json;\r\n        util.forEach(jsonObj_1, function (key, childData) {\r\n            if (util.contains(jsonObj_1, key)) {\r\n                if (key.substring(0, 1) !== '.') {\r\n                    // ignore metadata nodes.\r\n                    var childNode = nodeFromJSON$1(childData);\r\n                    if (childNode.isLeafNode() || !childNode.isEmpty())\r\n                        node_1 = node_1.updateImmediateChild(key, childNode);\r\n                }\r\n            }\r\n        });\r\n        return node_1.updatePriority(nodeFromJSON$1(priority));\r\n    }\r\n}\r\nsetNodeFromJSON(nodeFromJSON$1);\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\r\nvar ValueIndex = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ValueIndex, _super);\r\n    function ValueIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.compare = function (a, b) {\r\n        var indexCmp = a.node.compareTo(b.node);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.isDefinedOn = function (node) {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.equals(newNode);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.minPost = function () {\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.maxPost = function () {\r\n        return NamedNode.MAX;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    ValueIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON$1(indexValue);\r\n        return new NamedNode(name, valueNode);\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    ValueIndex.prototype.toString = function () {\r\n        return '.value';\r\n    };\r\n    return ValueIndex;\r\n}(Index));\r\nvar VALUE_INDEX = new ValueIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!Path} indexPath\r\n * @constructor\r\n * @extends {Index}\r\n */\r\nvar PathIndex = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PathIndex, _super);\r\n    function PathIndex(indexPath_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.indexPath_ = indexPath_;\r\n        util.assert(!indexPath_.isEmpty() && indexPath_.getFront() !== '.priority', \"Can't create PathIndex with empty path or .priority key\");\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {!Node} snap\r\n     * @return {!Node}\r\n     * @protected\r\n     */\r\n    PathIndex.prototype.extractChild = function (snap) {\r\n        return snap.getChild(this.indexPath_);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getChild(this.indexPath_).isEmpty();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.compare = function (a, b) {\r\n        var aChild = this.extractChild(a.node);\r\n        var bChild = this.extractChild(b.node);\r\n        var indexCmp = aChild.compareTo(bChild);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON$1(indexValue);\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, valueNode);\r\n        return new NamedNode(name, node);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.maxPost = function () {\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE$2);\r\n        return new NamedNode(MAX_NAME, node);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.toString = function () {\r\n        return this.indexPath_.slice().join('/');\r\n    };\r\n    return PathIndex;\r\n}(Index));\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\r\n * surfaces the public methods (val, forEach, etc.) we want to expose.\r\n */\r\nvar DataSnapshot = /** @class */ (function () {\r\n    /**\r\n     * @param {!Node} node_ A SnapshotNode to wrap.\r\n     * @param {!Reference} ref_ The ref of the location this snapshot came from.\r\n     * @param {!Index} index_ The iteration order for this snapshot\r\n     */\r\n    function DataSnapshot(node_, ref_, index_) {\r\n        this.node_ = node_;\r\n        this.ref_ = ref_;\r\n        this.index_ = index_;\r\n    }\r\n    /**\r\n     * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\r\n     * empty.\r\n     *\r\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.val = function () {\r\n        util.validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\r\n        return this.node_.val();\r\n    };\r\n    /**\r\n     * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\r\n     * the entire node contents.\r\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.exportVal = function () {\r\n        util.validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\r\n        return this.node_.val(true);\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    DataSnapshot.prototype.toJSON = function () {\r\n        // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\r\n        util.validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\r\n        return this.exportVal();\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a non-null value.\r\n     *\r\n     * @return {boolean} Whether the snapshot contains a non-null value, or is empty.\r\n     */\r\n    DataSnapshot.prototype.exists = function () {\r\n        util.validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\r\n        return !this.node_.isEmpty();\r\n    };\r\n    /**\r\n     * Returns a DataSnapshot of the specified child node's contents.\r\n     *\r\n     * @param {!string} childPathString Path to a child.\r\n     * @return {!DataSnapshot} DataSnapshot for child node.\r\n     */\r\n    DataSnapshot.prototype.child = function (childPathString) {\r\n        util.validateArgCount('DataSnapshot.child', 0, 1, arguments.length);\r\n        // Ensure the childPath is a string (can be a number)\r\n        childPathString = String(childPathString);\r\n        validatePathString('DataSnapshot.child', 1, childPathString, false);\r\n        var childPath = new Path(childPathString);\r\n        var childRef = this.ref_.child(childPath);\r\n        return new DataSnapshot(this.node_.getChild(childPath), childRef, PRIORITY_INDEX);\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a child at the specified path.\r\n     *\r\n     * @param {!string} childPathString Path to a child.\r\n     * @return {boolean} Whether the child exists.\r\n     */\r\n    DataSnapshot.prototype.hasChild = function (childPathString) {\r\n        util.validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\r\n        validatePathString('DataSnapshot.hasChild', 1, childPathString, false);\r\n        var childPath = new Path(childPathString);\r\n        return !this.node_.getChild(childPath).isEmpty();\r\n    };\r\n    /**\r\n     * Returns the priority of the object, or null if no priority was set.\r\n     *\r\n     * @return {string|number|null} The priority.\r\n     */\r\n    DataSnapshot.prototype.getPriority = function () {\r\n        util.validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length);\r\n        // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\r\n        return this.node_.getPriority().val();\r\n    };\r\n    /**\r\n     * Iterates through child nodes and calls the specified action for each one.\r\n     *\r\n     * @param {function(!DataSnapshot)} action Callback function to be called\r\n     * for each child.\r\n     * @return {boolean} True if forEach was canceled by action returning true for\r\n     * one of the child nodes.\r\n     */\r\n    DataSnapshot.prototype.forEach = function (action) {\r\n        var _this = this;\r\n        util.validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\r\n        util.validateCallback('DataSnapshot.forEach', 1, action, false);\r\n        if (this.node_.isLeafNode())\r\n            return false;\r\n        var childrenNode = this.node_;\r\n        // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\r\n        return !!childrenNode.forEachChild(this.index_, function (key, node) {\r\n            return action(new DataSnapshot(node, _this.ref_.child(key), PRIORITY_INDEX));\r\n        });\r\n    };\r\n    /**\r\n     * Returns whether this DataSnapshot has children.\r\n     * @return {boolean} True if the DataSnapshot contains 1 or more child nodes.\r\n     */\r\n    DataSnapshot.prototype.hasChildren = function () {\r\n        util.validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\r\n        if (this.node_.isLeafNode())\r\n            return false;\r\n        else\r\n            return !this.node_.isEmpty();\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"key\", {\r\n        get: function () {\r\n            return this.ref_.getKey();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the number of children for this DataSnapshot.\r\n     * @return {number} The number of children that this DataSnapshot contains.\r\n     */\r\n    DataSnapshot.prototype.numChildren = function () {\r\n        util.validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\r\n        return this.node_.numChildren();\r\n    };\r\n    /**\r\n     * @return {Reference} The Firebase reference for the location this snapshot's data came from.\r\n     */\r\n    DataSnapshot.prototype.getRef = function () {\r\n        util.validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\r\n        return this.ref_;\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"ref\", {\r\n        get: function () {\r\n            return this.getRef();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return DataSnapshot;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Encapsulates the data needed to raise an event\r\n * @implements {Event}\r\n */\r\nvar DataEvent = /** @class */ (function () {\r\n    /**\r\n     * @param {!string} eventType One of: value, child_added, child_changed, child_moved, child_removed\r\n     * @param {!EventRegistration} eventRegistration The function to call to with the event data. User provided\r\n     * @param {!DataSnapshot} snapshot The data backing the event\r\n     * @param {?string=} prevName Optional, the name of the previous child for child_* events.\r\n     */\r\n    function DataEvent(eventType, eventRegistration, snapshot, prevName) {\r\n        this.eventType = eventType;\r\n        this.eventRegistration = eventRegistration;\r\n        this.snapshot = snapshot;\r\n        this.prevName = prevName;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getPath = function () {\r\n        var ref = this.snapshot.getRef();\r\n        if (this.eventType === 'value') {\r\n            return ref.path;\r\n        }\r\n        else {\r\n            return ref.getParent().path;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getEventType = function () {\r\n        return this.eventType;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.toString = function () {\r\n        return (this.getPath().toString() +\r\n            ':' +\r\n            this.eventType +\r\n            ':' +\r\n            util.stringify(this.snapshot.exportVal()));\r\n    };\r\n    return DataEvent;\r\n}());\r\nvar CancelEvent = /** @class */ (function () {\r\n    /**\r\n     * @param {EventRegistration} eventRegistration\r\n     * @param {Error} error\r\n     * @param {!Path} path\r\n     */\r\n    function CancelEvent(eventRegistration, error, path) {\r\n        this.eventRegistration = eventRegistration;\r\n        this.error = error;\r\n        this.path = path;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getPath = function () {\r\n        return this.path;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getEventType = function () {\r\n        return 'cancel';\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.toString = function () {\r\n        return this.path.toString() + ':cancel';\r\n    };\r\n    return CancelEvent;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Represents registration for 'value' events.\r\n */\r\nvar ValueEventRegistration = /** @class */ (function () {\r\n    /**\r\n     * @param {?function(!DataSnapshot)} callback_\r\n     * @param {?function(Error)} cancelCallback_\r\n     * @param {?Object} context_\r\n     */\r\n    function ValueEventRegistration(callback_, cancelCallback_, context_) {\r\n        this.callback_ = callback_;\r\n        this.cancelCallback_ = cancelCallback_;\r\n        this.context_ = context_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.respondsTo = function (eventType) {\r\n        return eventType === 'value';\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.createEvent = function (change, query) {\r\n        var index = query.getQueryParams().getIndex();\r\n        return new DataEvent('value', this, new DataSnapshot(change.snapshotNode, query.getRef(), index));\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var ctx = this.context_;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            util.assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\r\n            var cancelCB_1 = this.cancelCallback_;\r\n            return function () {\r\n                // We know that error exists, we checked above that this is a cancel event\r\n                cancelCB_1.call(ctx, eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            var cb_1 = this.callback_;\r\n            return function () {\r\n                cb_1.call(ctx, eventData.snapshot);\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.cancelCallback_) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.matches = function (other) {\r\n        if (!(other instanceof ValueEventRegistration)) {\r\n            return false;\r\n        }\r\n        else if (!other.callback_ || !this.callback_) {\r\n            // If no callback specified, we consider it to match any callback.\r\n            return true;\r\n        }\r\n        else {\r\n            return (other.callback_ === this.callback_ && other.context_ === this.context_);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callback_ !== null;\r\n    };\r\n    return ValueEventRegistration;\r\n}());\r\n/**\r\n * Represents the registration of 1 or more child_xxx events.\r\n *\r\n * Currently, it is always exactly 1 child_xxx event, but the idea is we might let you\r\n * register a group of callbacks together in the future.\r\n *\r\n * @constructor\r\n * @implements {EventRegistration}\r\n */\r\nvar ChildEventRegistration = /** @class */ (function () {\r\n    /**\r\n     * @param {?Object.<string, function(!DataSnapshot, ?string=)>} callbacks_\r\n     * @param {?function(Error)} cancelCallback_\r\n     * @param {Object=} context_\r\n     */\r\n    function ChildEventRegistration(callbacks_, cancelCallback_, context_) {\r\n        this.callbacks_ = callbacks_;\r\n        this.cancelCallback_ = cancelCallback_;\r\n        this.context_ = context_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.respondsTo = function (eventType) {\r\n        var eventToCheck = eventType === 'children_added' ? 'child_added' : eventType;\r\n        eventToCheck =\r\n            eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\r\n        return util.contains(this.callbacks_, eventToCheck);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.cancelCallback_) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.createEvent = function (change, query) {\r\n        util.assert(change.childName != null, 'Child events should have a childName.');\r\n        var ref = query.getRef().child(/** @type {!string} */ (change.childName));\r\n        var index = query.getQueryParams().getIndex();\r\n        return new DataEvent(change.type, this, new DataSnapshot(change.snapshotNode, ref, index), change.prevName);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var ctx = this.context_;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            util.assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\r\n            var cancelCB_2 = this.cancelCallback_;\r\n            return function () {\r\n                // We know that error exists, we checked above that this is a cancel event\r\n                cancelCB_2.call(ctx, eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            var cb_2 = this.callbacks_[eventData.eventType];\r\n            return function () {\r\n                cb_2.call(ctx, eventData.snapshot, eventData.prevName);\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.matches = function (other) {\r\n        if (other instanceof ChildEventRegistration) {\r\n            if (!this.callbacks_ || !other.callbacks_) {\r\n                return true;\r\n            }\r\n            else if (this.context_ === other.context_) {\r\n                var otherCount = util.getCount(other.callbacks_);\r\n                var thisCount = util.getCount(this.callbacks_);\r\n                if (otherCount === thisCount) {\r\n                    // If count is 1, do an exact match on eventType, if either is defined but null, it's a match.\r\n                    //  If event types don't match, not a match\r\n                    // If count is not 1, exact match across all\r\n                    if (otherCount === 1) {\r\n                        var otherKey /** @type {!string} */ = util.getAnyKey(other.callbacks_);\r\n                        var thisKey /** @type {!string} */ = util.getAnyKey(this.callbacks_);\r\n                        return (thisKey === otherKey &&\r\n                            (!other.callbacks_[otherKey] ||\r\n                                !this.callbacks_[thisKey] ||\r\n                                other.callbacks_[otherKey] === this.callbacks_[thisKey]));\r\n                    }\r\n                    else {\r\n                        // Exact match on each key.\r\n                        return util.every(this.callbacks_, function (eventType, cb) { return other.callbacks_[eventType] === cb; });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callbacks_ !== null;\r\n    };\r\n    return ChildEventRegistration;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __referenceConstructor;\r\n/**\r\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\r\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\r\n *\r\n * Since every Firebase reference is a query, Firebase inherits from this object.\r\n */\r\nvar Query = /** @class */ (function () {\r\n    function Query(repo, path, queryParams_, orderByCalled_) {\r\n        this.repo = repo;\r\n        this.path = path;\r\n        this.queryParams_ = queryParams_;\r\n        this.orderByCalled_ = orderByCalled_;\r\n    }\r\n    Object.defineProperty(Query, \"__referenceConstructor\", {\r\n        get: function () {\r\n            util.assert(__referenceConstructor, 'Reference.ts has not been loaded');\r\n            return __referenceConstructor;\r\n        },\r\n        set: function (val) {\r\n            __referenceConstructor = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Validates start/end values for queries.\r\n     * @param {!QueryParams} params\r\n     * @private\r\n     */\r\n    Query.validateQueryEndpoints_ = function (params) {\r\n        var startNode = null;\r\n        var endNode = null;\r\n        if (params.hasStart()) {\r\n            startNode = params.getIndexStartValue();\r\n        }\r\n        if (params.hasEnd()) {\r\n            endNode = params.getIndexEndValue();\r\n        }\r\n        if (params.getIndex() === KEY_INDEX) {\r\n            var tooManyArgsError = 'Query: When ordering by key, you may only pass one argument to ' +\r\n                'startAt(), endAt(), or equalTo().';\r\n            var wrongArgTypeError = 'Query: When ordering by key, the argument passed to startAt(), endAt(),' +\r\n                'or equalTo() must be a string.';\r\n            if (params.hasStart()) {\r\n                var startName = params.getIndexStartName();\r\n                if (startName != MIN_NAME) {\r\n                    throw new Error(tooManyArgsError);\r\n                }\r\n                else if (typeof startNode !== 'string') {\r\n                    throw new Error(wrongArgTypeError);\r\n                }\r\n            }\r\n            if (params.hasEnd()) {\r\n                var endName = params.getIndexEndName();\r\n                if (endName != MAX_NAME) {\r\n                    throw new Error(tooManyArgsError);\r\n                }\r\n                else if (typeof endNode !== 'string') {\r\n                    throw new Error(wrongArgTypeError);\r\n                }\r\n            }\r\n        }\r\n        else if (params.getIndex() === PRIORITY_INDEX) {\r\n            if ((startNode != null && !isValidPriority(startNode)) ||\r\n                (endNode != null && !isValidPriority(endNode))) {\r\n                throw new Error('Query: When ordering by priority, the first argument passed to startAt(), ' +\r\n                    'endAt(), or equalTo() must be a valid priority value (null, a number, or a string).');\r\n            }\r\n        }\r\n        else {\r\n            util.assert(params.getIndex() instanceof PathIndex ||\r\n                params.getIndex() === VALUE_INDEX, 'unknown index type.');\r\n            if ((startNode != null && typeof startNode === 'object') ||\r\n                (endNode != null && typeof endNode === 'object')) {\r\n                throw new Error('Query: First argument passed to startAt(), endAt(), or equalTo() cannot be ' +\r\n                    'an object.');\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Validates that limit* has been called with the correct combination of parameters\r\n     * @param {!QueryParams} params\r\n     * @private\r\n     */\r\n    Query.validateLimit_ = function (params) {\r\n        if (params.hasStart() &&\r\n            params.hasEnd() &&\r\n            params.hasLimit() &&\r\n            !params.hasAnchoredLimit()) {\r\n            throw new Error(\"Query: Can't combine startAt(), endAt(), and limit(). Use limitToFirst() or limitToLast() instead.\");\r\n        }\r\n    };\r\n    /**\r\n     * Validates that no other order by call has been made\r\n     * @param {!string} fnName\r\n     * @private\r\n     */\r\n    Query.prototype.validateNoPreviousOrderByCall_ = function (fnName) {\r\n        if (this.orderByCalled_ === true) {\r\n            throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\r\n        }\r\n    };\r\n    /**\r\n     * @return {!QueryParams}\r\n     */\r\n    Query.prototype.getQueryParams = function () {\r\n        return this.queryParams_;\r\n    };\r\n    /**\r\n     * @return {!Reference}\r\n     */\r\n    Query.prototype.getRef = function () {\r\n        util.validateArgCount('Query.ref', 0, 0, arguments.length);\r\n        // This is a slight hack. We cannot goog.require('fb.api.Firebase'), since Firebase requires fb.api.Query.\r\n        // However, we will always export 'Firebase' to the global namespace, so it's guaranteed to exist by the time this\r\n        // method gets called.\r\n        return new Query.__referenceConstructor(this.repo, this.path);\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @param {!function(DataSnapshot, string=)} callback\r\n     * @param {(function(Error)|Object)=} cancelCallbackOrContext\r\n     * @param {Object=} context\r\n     * @return {!function(DataSnapshot, string=)}\r\n     */\r\n    Query.prototype.on = function (eventType, callback, cancelCallbackOrContext, context) {\r\n        util.validateArgCount('Query.on', 2, 4, arguments.length);\r\n        validateEventType('Query.on', 1, eventType, false);\r\n        util.validateCallback('Query.on', 2, callback, false);\r\n        var ret = Query.getCancelAndContextArgs_('Query.on', cancelCallbackOrContext, context);\r\n        if (eventType === 'value') {\r\n            this.onValueEvent(callback, ret.cancel, ret.context);\r\n        }\r\n        else {\r\n            var callbacks = {};\r\n            callbacks[eventType] = callback;\r\n            this.onChildEvent(callbacks, ret.cancel, ret.context);\r\n        }\r\n        return callback;\r\n    };\r\n    /**\r\n     * @param {!function(!DataSnapshot)} callback\r\n     * @param {?function(Error)} cancelCallback\r\n     * @param {?Object} context\r\n     * @protected\r\n     */\r\n    Query.prototype.onValueEvent = function (callback, cancelCallback, context) {\r\n        var container = new ValueEventRegistration(callback, cancelCallback || null, context || null);\r\n        this.repo.addEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * @param {!Object.<string, !function(!DataSnapshot, ?string)>} callbacks\r\n     * @param {?function(Error)} cancelCallback\r\n     * @param {?Object} context\r\n     * @protected\r\n     */\r\n    Query.prototype.onChildEvent = function (callbacks, cancelCallback, context) {\r\n        var container = new ChildEventRegistration(callbacks, cancelCallback, context);\r\n        this.repo.addEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * @param {string=} eventType\r\n     * @param {(function(!DataSnapshot, ?string=))=} callback\r\n     * @param {Object=} context\r\n     */\r\n    Query.prototype.off = function (eventType, callback, context) {\r\n        util.validateArgCount('Query.off', 0, 3, arguments.length);\r\n        validateEventType('Query.off', 1, eventType, true);\r\n        util.validateCallback('Query.off', 2, callback, true);\r\n        util.validateContextObject('Query.off', 3, context, true);\r\n        var container = null;\r\n        var callbacks = null;\r\n        if (eventType === 'value') {\r\n            var valueCallback = callback || null;\r\n            container = new ValueEventRegistration(valueCallback, null, context || null);\r\n        }\r\n        else if (eventType) {\r\n            if (callback) {\r\n                callbacks = {};\r\n                callbacks[eventType] = callback;\r\n            }\r\n            container = new ChildEventRegistration(callbacks, null, context || null);\r\n        }\r\n        this.repo.removeEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * Attaches a listener, waits for the first event, and then removes the listener\r\n     * @param {!string} eventType\r\n     * @param {!function(!DataSnapshot, string=)} userCallback\r\n     * @param cancelOrContext\r\n     * @param context\r\n     * @return {!firebase.Promise}\r\n     */\r\n    Query.prototype.once = function (eventType, userCallback, cancelOrContext, context) {\r\n        var _this = this;\r\n        util.validateArgCount('Query.once', 1, 4, arguments.length);\r\n        validateEventType('Query.once', 1, eventType, false);\r\n        util.validateCallback('Query.once', 2, userCallback, true);\r\n        var ret = Query.getCancelAndContextArgs_('Query.once', cancelOrContext, context);\r\n        // TODO: Implement this more efficiently (in particular, use 'get' wire protocol for 'value' event)\r\n        // TODO: consider actually wiring the callbacks into the promise. We cannot do this without a breaking change\r\n        // because the API currently expects callbacks will be called synchronously if the data is cached, but this is\r\n        // against the Promise specification.\r\n        var firstCall = true;\r\n        var deferred = new util.Deferred();\r\n        // A dummy error handler in case a user wasn't expecting promises\r\n        deferred.promise.catch(function () { });\r\n        var onceCallback = function (snapshot) {\r\n            // NOTE: Even though we unsubscribe, we may get called multiple times if a single action (e.g. set() with JSON)\r\n            // triggers multiple events (e.g. child_added or child_changed).\r\n            if (firstCall) {\r\n                firstCall = false;\r\n                _this.off(eventType, onceCallback);\r\n                if (userCallback) {\r\n                    userCallback.bind(ret.context)(snapshot);\r\n                }\r\n                deferred.resolve(snapshot);\r\n            }\r\n        };\r\n        this.on(eventType, onceCallback, \r\n        /*cancel=*/ function (err) {\r\n            _this.off(eventType, onceCallback);\r\n            if (ret.cancel)\r\n                ret.cancel.bind(ret.context)(err);\r\n            deferred.reject(err);\r\n        });\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the start of the window.\r\n     * @param {!number} limit\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.limitToFirst = function (limit) {\r\n        util.validateArgCount('Query.limitToFirst', 1, 1, arguments.length);\r\n        if (typeof limit !== 'number' ||\r\n            Math.floor(limit) !== limit ||\r\n            limit <= 0) {\r\n            throw new Error('Query.limitToFirst: First argument must be a positive integer.');\r\n        }\r\n        if (this.queryParams_.hasLimit()) {\r\n            throw new Error('Query.limitToFirst: Limit was already set (by another call to limit, ' +\r\n                'limitToFirst, or limitToLast).');\r\n        }\r\n        return new Query(this.repo, this.path, this.queryParams_.limitToFirst(limit), this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the end of the window.\r\n     * @param {!number} limit\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.limitToLast = function (limit) {\r\n        util.validateArgCount('Query.limitToLast', 1, 1, arguments.length);\r\n        if (typeof limit !== 'number' ||\r\n            Math.floor(limit) !== limit ||\r\n            limit <= 0) {\r\n            throw new Error('Query.limitToLast: First argument must be a positive integer.');\r\n        }\r\n        if (this.queryParams_.hasLimit()) {\r\n            throw new Error('Query.limitToLast: Limit was already set (by another call to limit, ' +\r\n                'limitToFirst, or limitToLast).');\r\n        }\r\n        return new Query(this.repo, this.path, this.queryParams_.limitToLast(limit), this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Given a child path, return a new query ordered by the specified grandchild path.\r\n     * @param {!string} path\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByChild = function (path) {\r\n        util.validateArgCount('Query.orderByChild', 1, 1, arguments.length);\r\n        if (path === '$key') {\r\n            throw new Error('Query.orderByChild: \"$key\" is invalid.  Use Query.orderByKey() instead.');\r\n        }\r\n        else if (path === '$priority') {\r\n            throw new Error('Query.orderByChild: \"$priority\" is invalid.  Use Query.orderByPriority() instead.');\r\n        }\r\n        else if (path === '$value') {\r\n            throw new Error('Query.orderByChild: \"$value\" is invalid.  Use Query.orderByValue() instead.');\r\n        }\r\n        validatePathString('Query.orderByChild', 1, path, false);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByChild');\r\n        var parsedPath = new Path(path);\r\n        if (parsedPath.isEmpty()) {\r\n            throw new Error('Query.orderByChild: cannot pass in empty path.  Use Query.orderByValue() instead.');\r\n        }\r\n        var index = new PathIndex(parsedPath);\r\n        var newParams = this.queryParams_.orderBy(index);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the KeyIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByKey = function () {\r\n        util.validateArgCount('Query.orderByKey', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByKey');\r\n        var newParams = this.queryParams_.orderBy(KEY_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the PriorityIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByPriority = function () {\r\n        util.validateArgCount('Query.orderByPriority', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByPriority');\r\n        var newParams = this.queryParams_.orderBy(PRIORITY_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the ValueIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByValue = function () {\r\n        util.validateArgCount('Query.orderByValue', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByValue');\r\n        var newParams = this.queryParams_.orderBy(VALUE_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * @param {number|string|boolean|null} value\r\n     * @param {?string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.startAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        util.validateArgCount('Query.startAt', 0, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.startAt', 1, value, this.path, true);\r\n        validateKey('Query.startAt', 2, name, true);\r\n        var newParams = this.queryParams_.startAt(value, name);\r\n        Query.validateLimit_(newParams);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        if (this.queryParams_.hasStart()) {\r\n            throw new Error('Query.startAt: Starting point was already set (by another call to startAt ' +\r\n                'or equalTo).');\r\n        }\r\n        // Calling with no params tells us to start at the beginning.\r\n        if (value === undefined) {\r\n            value = null;\r\n            name = null;\r\n        }\r\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\r\n    };\r\n    /**\r\n     * @param {number|string|boolean|null} value\r\n     * @param {?string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.endAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        util.validateArgCount('Query.endAt', 0, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.endAt', 1, value, this.path, true);\r\n        validateKey('Query.endAt', 2, name, true);\r\n        var newParams = this.queryParams_.endAt(value, name);\r\n        Query.validateLimit_(newParams);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        if (this.queryParams_.hasEnd()) {\r\n            throw new Error('Query.endAt: Ending point was already set (by another call to endAt or ' +\r\n                'equalTo).');\r\n        }\r\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Load the selection of children with exactly the specified value, and, optionally,\r\n     * the specified name.\r\n     * @param {number|string|boolean|null} value\r\n     * @param {string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.equalTo = function (value, name) {\r\n        util.validateArgCount('Query.equalTo', 1, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.equalTo', 1, value, this.path, false);\r\n        validateKey('Query.equalTo', 2, name, true);\r\n        if (this.queryParams_.hasStart()) {\r\n            throw new Error('Query.equalTo: Starting point was already set (by another call to startAt or ' +\r\n                'equalTo).');\r\n        }\r\n        if (this.queryParams_.hasEnd()) {\r\n            throw new Error('Query.equalTo: Ending point was already set (by another call to endAt or ' +\r\n                'equalTo).');\r\n        }\r\n        return this.startAt(value, name).endAt(value, name);\r\n    };\r\n    /**\r\n     * @return {!string} URL for this location.\r\n     */\r\n    Query.prototype.toString = function () {\r\n        util.validateArgCount('Query.toString', 0, 0, arguments.length);\r\n        return this.repo.toString() + this.path.toUrlEncodedString();\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users.\r\n    Query.prototype.toJSON = function () {\r\n        // An optional spacer argument is unnecessary for a string.\r\n        util.validateArgCount('Query.toJSON', 0, 1, arguments.length);\r\n        return this.toString();\r\n    };\r\n    /**\r\n     * An object representation of the query parameters used by this Query.\r\n     * @return {!Object}\r\n     */\r\n    Query.prototype.queryObject = function () {\r\n        return this.queryParams_.getQueryObject();\r\n    };\r\n    /**\r\n     * @return {!string}\r\n     */\r\n    Query.prototype.queryIdentifier = function () {\r\n        var obj = this.queryObject();\r\n        var id = ObjectToUniqueKey(obj);\r\n        return id === '{}' ? 'default' : id;\r\n    };\r\n    /**\r\n     * Return true if this query and the provided query are equivalent; otherwise, return false.\r\n     * @param {Query} other\r\n     * @return {boolean}\r\n     */\r\n    Query.prototype.isEqual = function (other) {\r\n        util.validateArgCount('Query.isEqual', 1, 1, arguments.length);\r\n        if (!(other instanceof Query)) {\r\n            var error = 'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\r\n            throw new Error(error);\r\n        }\r\n        var sameRepo = this.repo === other.repo;\r\n        var samePath = this.path.equals(other.path);\r\n        var sameQueryIdentifier = this.queryIdentifier() === other.queryIdentifier();\r\n        return sameRepo && samePath && sameQueryIdentifier;\r\n    };\r\n    /**\r\n     * Helper used by .on and .once to extract the context and or cancel arguments.\r\n     * @param {!string} fnName The function name (on or once)\r\n     * @param {(function(Error)|Object)=} cancelOrContext\r\n     * @param {Object=} context\r\n     * @return {{cancel: ?function(Error), context: ?Object}}\r\n     * @private\r\n     */\r\n    Query.getCancelAndContextArgs_ = function (fnName, cancelOrContext, context) {\r\n        var ret = { cancel: null, context: null };\r\n        if (cancelOrContext && context) {\r\n            ret.cancel = cancelOrContext;\r\n            util.validateCallback(fnName, 3, ret.cancel, true);\r\n            ret.context = context;\r\n            util.validateContextObject(fnName, 4, ret.context, true);\r\n        }\r\n        else if (cancelOrContext) {\r\n            // we have either a cancel callback or a context.\r\n            if (typeof cancelOrContext === 'object' && cancelOrContext !== null) {\r\n                // it's a context!\r\n                ret.context = cancelOrContext;\r\n            }\r\n            else if (typeof cancelOrContext === 'function') {\r\n                ret.cancel = cancelOrContext;\r\n            }\r\n            else {\r\n                throw new Error(util.errorPrefix(fnName, 3, true) +\r\n                    ' must either be a cancel callback or a context object.');\r\n            }\r\n        }\r\n        return ret;\r\n    };\r\n    Object.defineProperty(Query.prototype, \"ref\", {\r\n        get: function () {\r\n            return this.getRef();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Query;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Implements a set with a count of elements.\r\n *\r\n * @template K, V\r\n */\r\nvar CountedSet = /** @class */ (function () {\r\n    function CountedSet() {\r\n        this.set = {};\r\n    }\r\n    /**\r\n     * @param {!K} item\r\n     * @param {V} val\r\n     */\r\n    CountedSet.prototype.add = function (item, val) {\r\n        this.set[item] = val !== null ? val : true;\r\n    };\r\n    /**\r\n     * @param {!K} key\r\n     * @return {boolean}\r\n     */\r\n    CountedSet.prototype.contains = function (key) {\r\n        return util.contains(this.set, key);\r\n    };\r\n    /**\r\n     * @param {!K} item\r\n     * @return {V}\r\n     */\r\n    CountedSet.prototype.get = function (item) {\r\n        return this.contains(item) ? this.set[item] : undefined;\r\n    };\r\n    /**\r\n     * @param {!K} item\r\n     */\r\n    CountedSet.prototype.remove = function (item) {\r\n        delete this.set[item];\r\n    };\r\n    /**\r\n     * Deletes everything in the set\r\n     */\r\n    CountedSet.prototype.clear = function () {\r\n        this.set = {};\r\n    };\r\n    /**\r\n     * True if there's nothing in the set\r\n     * @return {boolean}\r\n     */\r\n    CountedSet.prototype.isEmpty = function () {\r\n        return util.isEmpty(this.set);\r\n    };\r\n    /**\r\n     * @return {number} The number of items in the set\r\n     */\r\n    CountedSet.prototype.count = function () {\r\n        return util.getCount(this.set);\r\n    };\r\n    /**\r\n     * Run a function on each k,v pair in the set\r\n     * @param {function(K, V)} fn\r\n     */\r\n    CountedSet.prototype.each = function (fn) {\r\n        util.forEach(this.set, function (k, v) { return fn(k, v); });\r\n    };\r\n    /**\r\n     * Mostly for debugging\r\n     * @return {Array.<K>} The keys present in this CountedSet\r\n     */\r\n    CountedSet.prototype.keys = function () {\r\n        var keys = [];\r\n        util.forEach(this.set, function (k) {\r\n            keys.push(k);\r\n        });\r\n        return keys;\r\n    };\r\n    return CountedSet;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper class to store a sparse set of snapshots.\r\n *\r\n * @constructor\r\n */\r\nvar SparseSnapshotTree = /** @class */ (function () {\r\n    function SparseSnapshotTree() {\r\n        /**\r\n         * @private\r\n         * @type {Node}\r\n         */\r\n        this.value_ = null;\r\n        /**\r\n         * @private\r\n         * @type {CountedSet}\r\n         */\r\n        this.children_ = null;\r\n    }\r\n    /**\r\n     * Gets the node stored at the given path if one exists.\r\n     *\r\n     * @param {!Path} path Path to look up snapshot for.\r\n     * @return {?Node} The retrieved node, or null.\r\n     */\r\n    SparseSnapshotTree.prototype.find = function (path) {\r\n        if (this.value_ != null) {\r\n            return this.value_.getChild(path);\r\n        }\r\n        else if (!path.isEmpty() && this.children_ != null) {\r\n            var childKey = path.getFront();\r\n            path = path.popFront();\r\n            if (this.children_.contains(childKey)) {\r\n                var childTree = this.children_.get(childKey);\r\n                return childTree.find(path);\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Stores the given node at the specified path. If there is already a node\r\n     * at a shallower path, it merges the new data into that snapshot node.\r\n     *\r\n     * @param {!Path} path Path to look up snapshot for.\r\n     * @param {!Node} data The new data, or null.\r\n     */\r\n    SparseSnapshotTree.prototype.remember = function (path, data) {\r\n        if (path.isEmpty()) {\r\n            this.value_ = data;\r\n            this.children_ = null;\r\n        }\r\n        else if (this.value_ !== null) {\r\n            this.value_ = this.value_.updateChild(path, data);\r\n        }\r\n        else {\r\n            if (this.children_ == null) {\r\n                this.children_ = new CountedSet();\r\n            }\r\n            var childKey = path.getFront();\r\n            if (!this.children_.contains(childKey)) {\r\n                this.children_.add(childKey, new SparseSnapshotTree());\r\n            }\r\n            var child = this.children_.get(childKey);\r\n            path = path.popFront();\r\n            child.remember(path, data);\r\n        }\r\n    };\r\n    /**\r\n     * Purge the data at path from the cache.\r\n     *\r\n     * @param {!Path} path Path to look up snapshot for.\r\n     * @return {boolean} True if this node should now be removed.\r\n     */\r\n    SparseSnapshotTree.prototype.forget = function (path) {\r\n        if (path.isEmpty()) {\r\n            this.value_ = null;\r\n            this.children_ = null;\r\n            return true;\r\n        }\r\n        else {\r\n            if (this.value_ !== null) {\r\n                if (this.value_.isLeafNode()) {\r\n                    // We're trying to forget a node that doesn't exist\r\n                    return false;\r\n                }\r\n                else {\r\n                    var value = this.value_;\r\n                    this.value_ = null;\r\n                    var self_1 = this;\r\n                    value.forEachChild(PRIORITY_INDEX, function (key, tree) {\r\n                        self_1.remember(new Path(key), tree);\r\n                    });\r\n                    return this.forget(path);\r\n                }\r\n            }\r\n            else if (this.children_ !== null) {\r\n                var childKey = path.getFront();\r\n                path = path.popFront();\r\n                if (this.children_.contains(childKey)) {\r\n                    var safeToRemove = this.children_.get(childKey).forget(path);\r\n                    if (safeToRemove) {\r\n                        this.children_.remove(childKey);\r\n                    }\r\n                }\r\n                if (this.children_.isEmpty()) {\r\n                    this.children_ = null;\r\n                    return true;\r\n                }\r\n                else {\r\n                    return false;\r\n                }\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Recursively iterates through all of the stored tree and calls the\r\n     * callback on each one.\r\n     *\r\n     * @param {!Path} prefixPath Path to look up node for.\r\n     * @param {!Function} func The function to invoke for each tree.\r\n     */\r\n    SparseSnapshotTree.prototype.forEachTree = function (prefixPath, func) {\r\n        if (this.value_ !== null) {\r\n            func(prefixPath, this.value_);\r\n        }\r\n        else {\r\n            this.forEachChild(function (key, tree) {\r\n                var path = new Path(prefixPath.toString() + '/' + key);\r\n                tree.forEachTree(path, func);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Iterates through each immediate child and triggers the callback.\r\n     *\r\n     * @param {!Function} func The function to invoke for each child.\r\n     */\r\n    SparseSnapshotTree.prototype.forEachChild = function (func) {\r\n        if (this.children_ !== null) {\r\n            this.children_.each(function (key, tree) {\r\n                func(key, tree);\r\n            });\r\n        }\r\n    };\r\n    return SparseSnapshotTree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Generate placeholders for deferred values.\r\n * @param {?Object} values\r\n * @return {!Object}\r\n */\r\nvar generateWithValues = function (values) {\r\n    values = values || {};\r\n    values['timestamp'] = values['timestamp'] || new Date().getTime();\r\n    return values;\r\n};\r\n/**\r\n * Value to use when firing local events. When writing server values, fire\r\n * local events with an approximate value, otherwise return value as-is.\r\n * @param {(Object|string|number|boolean)} value\r\n * @param {!Object} serverValues\r\n * @return {!(string|number|boolean)}\r\n */\r\nvar resolveDeferredValue = function (value, serverValues) {\r\n    if (!value || typeof value !== 'object') {\r\n        return value;\r\n    }\r\n    else {\r\n        util.assert('.sv' in value, 'Unexpected leaf node or priority contents');\r\n        return serverValues[value['.sv']];\r\n    }\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the tree with the\r\n * specified generated replacement values.\r\n * @param {!SparseSnapshotTree} tree\r\n * @param {!Object} serverValues\r\n * @return {!SparseSnapshotTree}\r\n */\r\nvar resolveDeferredValueTree = function (tree, serverValues) {\r\n    var resolvedTree = new SparseSnapshotTree();\r\n    tree.forEachTree(new Path(''), function (path, node) {\r\n        resolvedTree.remember(path, resolveDeferredValueSnapshot(node, serverValues));\r\n    });\r\n    return resolvedTree;\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the node with the\r\n * specified generated replacement values.  If there are no server values in the node,\r\n * it'll be returned as-is.\r\n * @param {!Node} node\r\n * @param {!Object} serverValues\r\n * @return {!Node}\r\n */\r\nvar resolveDeferredValueSnapshot = function (node, serverValues) {\r\n    var rawPri = node.getPriority().val();\r\n    var priority = resolveDeferredValue(rawPri, serverValues);\r\n    var newNode;\r\n    if (node.isLeafNode()) {\r\n        var leafNode = node;\r\n        var value = resolveDeferredValue(leafNode.getValue(), serverValues);\r\n        if (value !== leafNode.getValue() ||\r\n            priority !== leafNode.getPriority().val()) {\r\n            return new LeafNode(value, nodeFromJSON$1(priority));\r\n        }\r\n        else {\r\n            return node;\r\n        }\r\n    }\r\n    else {\r\n        var childrenNode = node;\r\n        newNode = childrenNode;\r\n        if (priority !== childrenNode.getPriority().val()) {\r\n            newNode = newNode.updatePriority(new LeafNode(priority));\r\n        }\r\n        childrenNode.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n            var newChildNode = resolveDeferredValueSnapshot(childNode, serverValues);\r\n            if (newChildNode !== childNode) {\r\n                newNode = newNode.updateImmediateChild(childName, newChildNode);\r\n            }\r\n        });\r\n        return newNode;\r\n    }\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @enum\r\n */\r\nvar OperationType;\r\n(function (OperationType) {\r\n    OperationType[OperationType[\"OVERWRITE\"] = 0] = \"OVERWRITE\";\r\n    OperationType[OperationType[\"MERGE\"] = 1] = \"MERGE\";\r\n    OperationType[OperationType[\"ACK_USER_WRITE\"] = 2] = \"ACK_USER_WRITE\";\r\n    OperationType[OperationType[\"LISTEN_COMPLETE\"] = 3] = \"LISTEN_COMPLETE\";\r\n})(OperationType || (OperationType = {}));\r\n/**\r\n * @param {boolean} fromUser\r\n * @param {boolean} fromServer\r\n * @param {?string} queryId\r\n * @param {boolean} tagged\r\n * @constructor\r\n */\r\nvar OperationSource = /** @class */ (function () {\r\n    function OperationSource(fromUser, fromServer, queryId, tagged) {\r\n        this.fromUser = fromUser;\r\n        this.fromServer = fromServer;\r\n        this.queryId = queryId;\r\n        this.tagged = tagged;\r\n        util.assert(!tagged || fromServer, 'Tagged queries must be from server.');\r\n    }\r\n    /**\r\n     * @const\r\n     * @type {!OperationSource}\r\n     */\r\n    OperationSource.User = new OperationSource(\r\n    /*fromUser=*/ true, false, null, \r\n    /*tagged=*/ false);\r\n    /**\r\n     * @const\r\n     * @type {!OperationSource}\r\n     */\r\n    OperationSource.Server = new OperationSource(false, \r\n    /*fromServer=*/ true, null, \r\n    /*tagged=*/ false);\r\n    /**\r\n     * @param {string} queryId\r\n     * @return {!OperationSource}\r\n     */\r\n    OperationSource.forServerTaggedQuery = function (queryId) {\r\n        return new OperationSource(false, \r\n        /*fromServer=*/ true, queryId, \r\n        /*tagged=*/ true);\r\n    };\r\n    return OperationSource;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar AckUserWrite = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!ImmutableTree<!boolean>} affectedTree A tree containing true for each affected path. Affected paths can't overlap.\r\n     * @param {!boolean} revert\r\n     */\r\n    function AckUserWrite(\r\n    /**@inheritDoc */ path, \r\n    /**@inheritDoc */ affectedTree, \r\n    /**@inheritDoc */ revert) {\r\n        this.path = path;\r\n        this.affectedTree = affectedTree;\r\n        this.revert = revert;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.ACK_USER_WRITE;\r\n        /** @inheritDoc */\r\n        this.source = OperationSource.User;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    AckUserWrite.prototype.operationForChild = function (childName) {\r\n        if (!this.path.isEmpty()) {\r\n            util.assert(this.path.getFront() === childName, 'operationForChild called for unrelated child.');\r\n            return new AckUserWrite(this.path.popFront(), this.affectedTree, this.revert);\r\n        }\r\n        else if (this.affectedTree.value != null) {\r\n            util.assert(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.');\r\n            // All child locations are affected as well; just return same operation.\r\n            return this;\r\n        }\r\n        else {\r\n            var childTree = this.affectedTree.subtree(new Path(childName));\r\n            return new AckUserWrite(Path.Empty, childTree, this.revert);\r\n        }\r\n    };\r\n    return AckUserWrite;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar emptyChildrenSingleton;\r\n/**\r\n * Singleton empty children collection.\r\n *\r\n * @const\r\n * @type {!SortedMap.<string, !ImmutableTree.<?>>}\r\n */\r\nvar EmptyChildren = function () {\r\n    if (!emptyChildrenSingleton) {\r\n        emptyChildrenSingleton = new SortedMap(stringCompare);\r\n    }\r\n    return emptyChildrenSingleton;\r\n};\r\n/**\r\n * A tree with immutable elements.\r\n */\r\nvar ImmutableTree = /** @class */ (function () {\r\n    /**\r\n     * @template T\r\n     * @param {?T} value\r\n     * @param {SortedMap.<string, !ImmutableTree.<T>>=} children\r\n     */\r\n    function ImmutableTree(value, children) {\r\n        if (children === void 0) { children = EmptyChildren(); }\r\n        this.value = value;\r\n        this.children = children;\r\n    }\r\n    /**\r\n     * @template T\r\n     * @param {!Object.<string, !T>} obj\r\n     * @return {!ImmutableTree.<!T>}\r\n     */\r\n    ImmutableTree.fromObject = function (obj) {\r\n        var tree = ImmutableTree.Empty;\r\n        util.forEach(obj, function (childPath, childSnap) {\r\n            tree = tree.set(new Path(childPath), childSnap);\r\n        });\r\n        return tree;\r\n    };\r\n    /**\r\n     * True if the value is empty and there are no children\r\n     * @return {boolean}\r\n     */\r\n    ImmutableTree.prototype.isEmpty = function () {\r\n        return this.value === null && this.children.isEmpty();\r\n    };\r\n    /**\r\n     * Given a path and predicate, return the first node and the path to that node\r\n     * where the predicate returns true.\r\n     *\r\n     * TODO Do a perf test -- If we're creating a bunch of {path: value:} objects\r\n     * on the way back out, it may be better to pass down a pathSoFar obj.\r\n     *\r\n     * @param {!Path} relativePath The remainder of the path\r\n     * @param {function(T):boolean} predicate The predicate to satisfy to return a\r\n     *   node\r\n     * @return {?{path:!Path, value:!T}}\r\n     */\r\n    ImmutableTree.prototype.findRootMostMatchingPathAndValue = function (relativePath, predicate) {\r\n        if (this.value != null && predicate(this.value)) {\r\n            return { path: Path.Empty, value: this.value };\r\n        }\r\n        else {\r\n            if (relativePath.isEmpty()) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = relativePath.getFront();\r\n                var child = this.children.get(front);\r\n                if (child !== null) {\r\n                    var childExistingPathAndValue = child.findRootMostMatchingPathAndValue(relativePath.popFront(), predicate);\r\n                    if (childExistingPathAndValue != null) {\r\n                        var fullPath = new Path(front).child(childExistingPathAndValue.path);\r\n                        return { path: fullPath, value: childExistingPathAndValue.value };\r\n                    }\r\n                    else {\r\n                        return null;\r\n                    }\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Find, if it exists, the shortest subpath of the given path that points a defined\r\n     * value in the tree\r\n     * @param {!Path} relativePath\r\n     * @return {?{path: !Path, value: !T}}\r\n     */\r\n    ImmutableTree.prototype.findRootMostValueAndPath = function (relativePath) {\r\n        return this.findRootMostMatchingPathAndValue(relativePath, function () { return true; });\r\n    };\r\n    /**\r\n     * @param {!Path} relativePath\r\n     * @return {!ImmutableTree.<T>} The subtree at the given path\r\n     */\r\n    ImmutableTree.prototype.subtree = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var childTree = this.children.get(front);\r\n            if (childTree !== null) {\r\n                return childTree.subtree(relativePath.popFront());\r\n            }\r\n            else {\r\n                return ImmutableTree.Empty;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets a value at the specified path.\r\n     *\r\n     * @param {!Path} relativePath Path to set value at.\r\n     * @param {?T} toSet Value to set.\r\n     * @return {!ImmutableTree.<T>} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.set = function (relativePath, toSet) {\r\n        if (relativePath.isEmpty()) {\r\n            return new ImmutableTree(toSet, this.children);\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front) || ImmutableTree.Empty;\r\n            var newChild = child.set(relativePath.popFront(), toSet);\r\n            var newChildren = this.children.insert(front, newChild);\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Removes the value at the specified path.\r\n     *\r\n     * @param {!Path} relativePath Path to value to remove.\r\n     * @return {!ImmutableTree.<T>} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.remove = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            if (this.children.isEmpty()) {\r\n                return ImmutableTree.Empty;\r\n            }\r\n            else {\r\n                return new ImmutableTree(null, this.children);\r\n            }\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                var newChild = child.remove(relativePath.popFront());\r\n                var newChildren = void 0;\r\n                if (newChild.isEmpty()) {\r\n                    newChildren = this.children.remove(front);\r\n                }\r\n                else {\r\n                    newChildren = this.children.insert(front, newChild);\r\n                }\r\n                if (this.value === null && newChildren.isEmpty()) {\r\n                    return ImmutableTree.Empty;\r\n                }\r\n                else {\r\n                    return new ImmutableTree(this.value, newChildren);\r\n                }\r\n            }\r\n            else {\r\n                return this;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Gets a value from the tree.\r\n     *\r\n     * @param {!Path} relativePath Path to get value for.\r\n     * @return {?T} Value at path, or null.\r\n     */\r\n    ImmutableTree.prototype.get = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            return this.value;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                return child.get(relativePath.popFront());\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Replace the subtree at the specified path with the given new tree.\r\n     *\r\n     * @param {!Path} relativePath Path to replace subtree for.\r\n     * @param {!ImmutableTree} newTree New tree.\r\n     * @return {!ImmutableTree} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.setTree = function (relativePath, newTree) {\r\n        if (relativePath.isEmpty()) {\r\n            return newTree;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front) || ImmutableTree.Empty;\r\n            var newChild = child.setTree(relativePath.popFront(), newTree);\r\n            var newChildren = void 0;\r\n            if (newChild.isEmpty()) {\r\n                newChildren = this.children.remove(front);\r\n            }\r\n            else {\r\n                newChildren = this.children.insert(front, newChild);\r\n            }\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Performs a depth first fold on this tree. Transforms a tree into a single\r\n     * value, given a function that operates on the path to a node, an optional\r\n     * current value, and a map of child names to folded subtrees\r\n     * @template V\r\n     * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n     * @return {V}\r\n     */\r\n    ImmutableTree.prototype.fold = function (fn) {\r\n        return this.fold_(Path.Empty, fn);\r\n    };\r\n    /**\r\n     * Recursive helper for public-facing fold() method\r\n     * @template V\r\n     * @param {!Path} pathSoFar\r\n     * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n     * @return {V}\r\n     * @private\r\n     */\r\n    ImmutableTree.prototype.fold_ = function (pathSoFar, fn) {\r\n        var accum = {};\r\n        this.children.inorderTraversal(function (childKey, childTree) {\r\n            accum[childKey] = childTree.fold_(pathSoFar.child(childKey), fn);\r\n        });\r\n        return fn(pathSoFar, this.value, accum);\r\n    };\r\n    /**\r\n     * Find the first matching value on the given path. Return the result of applying f to it.\r\n     * @template V\r\n     * @param {!Path} path\r\n     * @param {!function(!Path, !T):?V} f\r\n     * @return {?V}\r\n     */\r\n    ImmutableTree.prototype.findOnPath = function (path, f) {\r\n        return this.findOnPath_(path, Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.findOnPath_ = function (pathToFollow, pathSoFar, f) {\r\n        var result = this.value ? f(pathSoFar, this.value) : false;\r\n        if (result) {\r\n            return result;\r\n        }\r\n        else {\r\n            if (pathToFollow.isEmpty()) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = pathToFollow.getFront();\r\n                var nextChild = this.children.get(front);\r\n                if (nextChild) {\r\n                    return nextChild.findOnPath_(pathToFollow.popFront(), pathSoFar.child(front), f);\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!function(!Path, !T)} f\r\n     * @returns {!ImmutableTree.<T>}\r\n     */\r\n    ImmutableTree.prototype.foreachOnPath = function (path, f) {\r\n        return this.foreachOnPath_(path, Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.foreachOnPath_ = function (pathToFollow, currentRelativePath, f) {\r\n        if (pathToFollow.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            if (this.value) {\r\n                f(currentRelativePath, this.value);\r\n            }\r\n            var front = pathToFollow.getFront();\r\n            var nextChild = this.children.get(front);\r\n            if (nextChild) {\r\n                return nextChild.foreachOnPath_(pathToFollow.popFront(), currentRelativePath.child(front), f);\r\n            }\r\n            else {\r\n                return ImmutableTree.Empty;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Calls the given function for each node in the tree that has a value.\r\n     *\r\n     * @param {function(!Path, !T)} f A function to be called with\r\n     *   the path from the root of the tree to a node, and the value at that node.\r\n     *   Called in depth-first order.\r\n     */\r\n    ImmutableTree.prototype.foreach = function (f) {\r\n        this.foreach_(Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.foreach_ = function (currentRelativePath, f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            childTree.foreach_(currentRelativePath.child(childName), f);\r\n        });\r\n        if (this.value) {\r\n            f(currentRelativePath, this.value);\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {function(string, !T)} f\r\n     */\r\n    ImmutableTree.prototype.foreachChild = function (f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            if (childTree.value) {\r\n                f(childName, childTree.value);\r\n            }\r\n        });\r\n    };\r\n    ImmutableTree.Empty = new ImmutableTree(null);\r\n    return ImmutableTree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar ListenComplete = /** @class */ (function () {\r\n    function ListenComplete(source, path) {\r\n        this.source = source;\r\n        this.path = path;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.LISTEN_COMPLETE;\r\n    }\r\n    ListenComplete.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            return new ListenComplete(this.source, Path.Empty);\r\n        }\r\n        else {\r\n            return new ListenComplete(this.source, this.path.popFront());\r\n        }\r\n    };\r\n    return ListenComplete;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!Node} snap\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar Overwrite = /** @class */ (function () {\r\n    function Overwrite(source, path, snap) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.snap = snap;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.OVERWRITE;\r\n    }\r\n    Overwrite.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            return new Overwrite(this.source, Path.Empty, this.snap.getImmediateChild(childName));\r\n        }\r\n        else {\r\n            return new Overwrite(this.source, this.path.popFront(), this.snap);\r\n        }\r\n    };\r\n    return Overwrite;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!ImmutableTree.<!Node>} children\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar Merge = /** @class */ (function () {\r\n    function Merge(\r\n    /**@inheritDoc */ source, \r\n    /**@inheritDoc */ path, \r\n    /**@inheritDoc */ children) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.children = children;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.MERGE;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Merge.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            var childTree = this.children.subtree(new Path(childName));\r\n            if (childTree.isEmpty()) {\r\n                // This child is unaffected\r\n                return null;\r\n            }\r\n            else if (childTree.value) {\r\n                // We have a snapshot for the child in question.  This becomes an overwrite of the child.\r\n                return new Overwrite(this.source, Path.Empty, childTree.value);\r\n            }\r\n            else {\r\n                // This is a merge at a deeper level\r\n                return new Merge(this.source, Path.Empty, childTree);\r\n            }\r\n        }\r\n        else {\r\n            util.assert(this.path.getFront() === childName, \"Can't get a merge for a child not on the path of the operation\");\r\n            return new Merge(this.source, this.path.popFront(), this.children);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Merge.prototype.toString = function () {\r\n        return ('Operation(' +\r\n            this.path +\r\n            ': ' +\r\n            this.source.toString() +\r\n            ' merge: ' +\r\n            this.children.toString() +\r\n            ')');\r\n    };\r\n    return Merge;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\r\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\r\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\r\n * whether a node potentially had children removed due to a filter.\r\n */\r\nvar CacheNode = /** @class */ (function () {\r\n    /**\r\n     * @param {!Node} node_\r\n     * @param {boolean} fullyInitialized_\r\n     * @param {boolean} filtered_\r\n     */\r\n    function CacheNode(node_, fullyInitialized_, filtered_) {\r\n        this.node_ = node_;\r\n        this.fullyInitialized_ = fullyInitialized_;\r\n        this.filtered_ = filtered_;\r\n    }\r\n    /**\r\n     * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isFullyInitialized = function () {\r\n        return this.fullyInitialized_;\r\n    };\r\n    /**\r\n     * Returns whether this node is potentially missing children due to a filter applied to the node\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isFiltered = function () {\r\n        return this.filtered_;\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isCompleteForPath = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this.isFullyInitialized() && !this.filtered_;\r\n        }\r\n        var childKey = path.getFront();\r\n        return this.isCompleteForChild(childKey);\r\n    };\r\n    /**\r\n     * @param {!string} key\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isCompleteForChild = function (key) {\r\n        return ((this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key));\r\n    };\r\n    /**\r\n     * @return {!Node}\r\n     */\r\n    CacheNode.prototype.getNode = function () {\r\n        return this.node_;\r\n    };\r\n    return CacheNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Stores the data we have cached for a view.\r\n *\r\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\r\n *\r\n * @constructor\r\n */\r\nvar ViewCache = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!CacheNode} eventCache_\r\n     * @param {!CacheNode} serverCache_\r\n     */\r\n    function ViewCache(eventCache_, serverCache_) {\r\n        this.eventCache_ = eventCache_;\r\n        this.serverCache_ = serverCache_;\r\n    }\r\n    /**\r\n     * @param {!Node} eventSnap\r\n     * @param {boolean} complete\r\n     * @param {boolean} filtered\r\n     * @return {!ViewCache}\r\n     */\r\n    ViewCache.prototype.updateEventSnap = function (eventSnap, complete, filtered) {\r\n        return new ViewCache(new CacheNode(eventSnap, complete, filtered), this.serverCache_);\r\n    };\r\n    /**\r\n     * @param {!Node} serverSnap\r\n     * @param {boolean} complete\r\n     * @param {boolean} filtered\r\n     * @return {!ViewCache}\r\n     */\r\n    ViewCache.prototype.updateServerSnap = function (serverSnap, complete, filtered) {\r\n        return new ViewCache(this.eventCache_, new CacheNode(serverSnap, complete, filtered));\r\n    };\r\n    /**\r\n     * @return {!CacheNode}\r\n     */\r\n    ViewCache.prototype.getEventCache = function () {\r\n        return this.eventCache_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    ViewCache.prototype.getCompleteEventSnap = function () {\r\n        return this.eventCache_.isFullyInitialized()\r\n            ? this.eventCache_.getNode()\r\n            : null;\r\n    };\r\n    /**\r\n     * @return {!CacheNode}\r\n     */\r\n    ViewCache.prototype.getServerCache = function () {\r\n        return this.serverCache_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    ViewCache.prototype.getCompleteServerSnap = function () {\r\n        return this.serverCache_.isFullyInitialized()\r\n            ? this.serverCache_.getNode()\r\n            : null;\r\n    };\r\n    /**\r\n     * @const\r\n     * @type {ViewCache}\r\n     */\r\n    ViewCache.Empty = new ViewCache(new CacheNode(ChildrenNode.EMPTY_NODE, \r\n    /*fullyInitialized=*/ false, \r\n    /*filtered=*/ false), new CacheNode(ChildrenNode.EMPTY_NODE, \r\n    /*fullyInitialized=*/ false, \r\n    /*filtered=*/ false));\r\n    return ViewCache;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @struct\r\n * @param {!string} type The event type\r\n * @param {!Node} snapshotNode The data\r\n * @param {string=} childName The name for this child, if it's a child event\r\n * @param {Node=} oldSnap Used for intermediate processing of child changed events\r\n * @param {string=} prevName The name for the previous child, if applicable\r\n */\r\nvar Change = /** @class */ (function () {\r\n    function Change(type, snapshotNode, childName, oldSnap, prevName) {\r\n        this.type = type;\r\n        this.snapshotNode = snapshotNode;\r\n        this.childName = childName;\r\n        this.oldSnap = oldSnap;\r\n        this.prevName = prevName;\r\n    }\r\n    /**\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.valueChange = function (snapshot) {\r\n        return new Change(Change.VALUE, snapshot);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childAddedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_ADDED, snapshot, childKey);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childRemovedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_REMOVED, snapshot, childKey);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} newSnapshot\r\n     * @param {!Node} oldSnapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childChangedChange = function (childKey, newSnapshot, oldSnapshot) {\r\n        return new Change(Change.CHILD_CHANGED, newSnapshot, childKey, oldSnapshot);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childMovedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_MOVED, snapshot, childKey);\r\n    };\r\n    //event types\r\n    /** Event type for a child added */\r\n    Change.CHILD_ADDED = 'child_added';\r\n    /** Event type for a child removed */\r\n    Change.CHILD_REMOVED = 'child_removed';\r\n    /** Event type for a child changed */\r\n    Change.CHILD_CHANGED = 'child_changed';\r\n    /** Event type for a child moved */\r\n    Change.CHILD_MOVED = 'child_moved';\r\n    /** Event type for a value change */\r\n    Change.VALUE = 'value';\r\n    return Change;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n * @param {!Index} index\r\n */\r\nvar IndexedFilter = /** @class */ (function () {\r\n    function IndexedFilter(index_) {\r\n        this.index_ = index_;\r\n    }\r\n    IndexedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        util.assert(snap.isIndexed(this.index_), 'A node must be indexed if only a child is updated');\r\n        var oldChild = snap.getImmediateChild(key);\r\n        // Check if anything actually changed.\r\n        if (oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))) {\r\n            // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\r\n            // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\r\n            // to avoid treating these cases as \"nothing changed.\"\r\n            if (oldChild.isEmpty() == newChild.isEmpty()) {\r\n                // Nothing changed.\r\n                // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\r\n                //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\r\n                return snap;\r\n            }\r\n        }\r\n        if (optChangeAccumulator != null) {\r\n            if (newChild.isEmpty()) {\r\n                if (snap.hasChild(key)) {\r\n                    optChangeAccumulator.trackChildChange(Change.childRemovedChange(key, oldChild));\r\n                }\r\n                else {\r\n                    util.assert(snap.isLeafNode(), 'A child remove without an old child only makes sense on a leaf node');\r\n                }\r\n            }\r\n            else if (oldChild.isEmpty()) {\r\n                optChangeAccumulator.trackChildChange(Change.childAddedChange(key, newChild));\r\n            }\r\n            else {\r\n                optChangeAccumulator.trackChildChange(Change.childChangedChange(key, newChild, oldChild));\r\n            }\r\n        }\r\n        if (snap.isLeafNode() && newChild.isEmpty()) {\r\n            return snap;\r\n        }\r\n        else {\r\n            // Make sure the node is indexed\r\n            return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (optChangeAccumulator != null) {\r\n            if (!oldSnap.isLeafNode()) {\r\n                oldSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (!newSnap.hasChild(key)) {\r\n                        optChangeAccumulator.trackChildChange(Change.childRemovedChange(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n            if (!newSnap.isLeafNode()) {\r\n                newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (oldSnap.hasChild(key)) {\r\n                        var oldChild = oldSnap.getImmediateChild(key);\r\n                        if (!oldChild.equals(childNode)) {\r\n                            optChangeAccumulator.trackChildChange(Change.childChangedChange(key, childNode, oldChild));\r\n                        }\r\n                    }\r\n                    else {\r\n                        optChangeAccumulator.trackChildChange(Change.childAddedChange(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        return newSnap.withIndex(this.index_);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        if (oldSnap.isEmpty()) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        else {\r\n            return oldSnap.updatePriority(newPriority);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.filtersNodes = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.getIndexedFilter = function () {\r\n        return this;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    return IndexedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n */\r\nvar ChildChangeAccumulator = /** @class */ (function () {\r\n    function ChildChangeAccumulator() {\r\n        this.changeMap_ = {};\r\n    }\r\n    /**\r\n     * @param {!Change} change\r\n     */\r\n    ChildChangeAccumulator.prototype.trackChildChange = function (change) {\r\n        var type = change.type;\r\n        var childKey /** @type {!string} */ = change.childName;\r\n        util.assert(type == Change.CHILD_ADDED ||\r\n            type == Change.CHILD_CHANGED ||\r\n            type == Change.CHILD_REMOVED, 'Only child changes supported for tracking');\r\n        util.assert(childKey !== '.priority', 'Only non-priority child changes can be tracked.');\r\n        var oldChange = util.safeGet(this.changeMap_, childKey);\r\n        if (oldChange) {\r\n            var oldType = oldChange.type;\r\n            if (type == Change.CHILD_ADDED && oldType == Change.CHILD_REMOVED) {\r\n                this.changeMap_[childKey] = Change.childChangedChange(childKey, change.snapshotNode, oldChange.snapshotNode);\r\n            }\r\n            else if (type == Change.CHILD_REMOVED &&\r\n                oldType == Change.CHILD_ADDED) {\r\n                delete this.changeMap_[childKey];\r\n            }\r\n            else if (type == Change.CHILD_REMOVED &&\r\n                oldType == Change.CHILD_CHANGED) {\r\n                this.changeMap_[childKey] = Change.childRemovedChange(childKey, oldChange.oldSnap);\r\n            }\r\n            else if (type == Change.CHILD_CHANGED &&\r\n                oldType == Change.CHILD_ADDED) {\r\n                this.changeMap_[childKey] = Change.childAddedChange(childKey, change.snapshotNode);\r\n            }\r\n            else if (type == Change.CHILD_CHANGED &&\r\n                oldType == Change.CHILD_CHANGED) {\r\n                this.changeMap_[childKey] = Change.childChangedChange(childKey, change.snapshotNode, oldChange.oldSnap);\r\n            }\r\n            else {\r\n                throw util.assertionError('Illegal combination of changes: ' +\r\n                    change +\r\n                    ' occurred after ' +\r\n                    oldChange);\r\n            }\r\n        }\r\n        else {\r\n            this.changeMap_[childKey] = change;\r\n        }\r\n    };\r\n    /**\r\n     * @return {!Array.<!Change>}\r\n     */\r\n    ChildChangeAccumulator.prototype.getChanges = function () {\r\n        return util.getValues(this.changeMap_);\r\n    };\r\n    return ChildChangeAccumulator;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n *\r\n * @private\r\n * @constructor\r\n * @implements CompleteChildSource\r\n */\r\nvar NoCompleteChildSource_ = /** @class */ (function () {\r\n    function NoCompleteChildSource_() {\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    NoCompleteChildSource_.prototype.getCompleteChild = function (childKey) {\r\n        return null;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    NoCompleteChildSource_.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        return null;\r\n    };\r\n    return NoCompleteChildSource_;\r\n}());\r\n/**\r\n * Singleton instance.\r\n * @const\r\n * @type {!CompleteChildSource}\r\n */\r\nvar NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\r\n/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n *\r\n *\r\n * @implements CompleteChildSource\r\n */\r\nvar WriteTreeCompleteChildSource = /** @class */ (function () {\r\n    /**\r\n     * @param {!WriteTreeRef} writes_\r\n     * @param {!ViewCache} viewCache_\r\n     * @param {?Node} optCompleteServerCache_\r\n     */\r\n    function WriteTreeCompleteChildSource(writes_, viewCache_, optCompleteServerCache_) {\r\n        if (optCompleteServerCache_ === void 0) { optCompleteServerCache_ = null; }\r\n        this.writes_ = writes_;\r\n        this.viewCache_ = viewCache_;\r\n        this.optCompleteServerCache_ = optCompleteServerCache_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WriteTreeCompleteChildSource.prototype.getCompleteChild = function (childKey) {\r\n        var node = this.viewCache_.getEventCache();\r\n        if (node.isCompleteForChild(childKey)) {\r\n            return node.getNode().getImmediateChild(childKey);\r\n        }\r\n        else {\r\n            var serverNode = this.optCompleteServerCache_ != null\r\n                ? new CacheNode(this.optCompleteServerCache_, true, false)\r\n                : this.viewCache_.getServerCache();\r\n            return this.writes_.calcCompleteChild(childKey, serverNode);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WriteTreeCompleteChildSource.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        var completeServerData = this.optCompleteServerCache_ != null\r\n            ? this.optCompleteServerCache_\r\n            : this.viewCache_.getCompleteServerSnap();\r\n        var nodes = this.writes_.calcIndexedSlice(completeServerData, child, 1, reverse, index);\r\n        if (nodes.length === 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return nodes[0];\r\n        }\r\n    };\r\n    return WriteTreeCompleteChildSource;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @struct\r\n */\r\nvar ProcessorResult = /** @class */ (function () {\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Array.<!Change>} changes\r\n     */\r\n    function ProcessorResult(viewCache, changes) {\r\n        this.viewCache = viewCache;\r\n        this.changes = changes;\r\n    }\r\n    return ProcessorResult;\r\n}());\r\n/**\r\n * @constructor\r\n */\r\nvar ViewProcessor = /** @class */ (function () {\r\n    /**\r\n     * @param {!NodeFilter} filter_\r\n     */\r\n    function ViewProcessor(filter_) {\r\n        this.filter_ = filter_;\r\n    }\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     */\r\n    ViewProcessor.prototype.assertIndexed = function (viewCache) {\r\n        util.assert(viewCache\r\n            .getEventCache()\r\n            .getNode()\r\n            .isIndexed(this.filter_.getIndex()), 'Event snap not indexed');\r\n        util.assert(viewCache\r\n            .getServerCache()\r\n            .getNode()\r\n            .isIndexed(this.filter_.getIndex()), 'Server snap not indexed');\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @return {!ProcessorResult}\r\n     */\r\n    ViewProcessor.prototype.applyOperation = function (oldViewCache, operation, writesCache, completeCache) {\r\n        var accumulator = new ChildChangeAccumulator();\r\n        var newViewCache, filterServerNode;\r\n        if (operation.type === OperationType.OVERWRITE) {\r\n            var overwrite = operation;\r\n            if (overwrite.source.fromUser) {\r\n                newViewCache = this.applyUserOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                util.assert(overwrite.source.fromServer, 'Unknown source.');\r\n                // We filter the node if it's a tagged update or the node has been previously filtered  and the\r\n                // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\r\n                // again\r\n                filterServerNode =\r\n                    overwrite.source.tagged ||\r\n                        (oldViewCache.getServerCache().isFiltered() &&\r\n                            !overwrite.path.isEmpty());\r\n                newViewCache = this.applyServerOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.MERGE) {\r\n            var merge = operation;\r\n            if (merge.source.fromUser) {\r\n                newViewCache = this.applyUserMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                util.assert(merge.source.fromServer, 'Unknown source.');\r\n                // We filter the node if it's a tagged update or the node has been previously filtered\r\n                filterServerNode =\r\n                    merge.source.tagged || oldViewCache.getServerCache().isFiltered();\r\n                newViewCache = this.applyServerMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.ACK_USER_WRITE) {\r\n            var ackUserWrite = operation;\r\n            if (!ackUserWrite.revert) {\r\n                newViewCache = this.ackUserWrite_(oldViewCache, ackUserWrite.path, ackUserWrite.affectedTree, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                newViewCache = this.revertUserWrite_(oldViewCache, ackUserWrite.path, writesCache, completeCache, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.LISTEN_COMPLETE) {\r\n            newViewCache = this.listenComplete_(oldViewCache, operation.path, writesCache, accumulator);\r\n        }\r\n        else {\r\n            throw util.assertionError('Unknown operation type: ' + operation.type);\r\n        }\r\n        var changes = accumulator.getChanges();\r\n        ViewProcessor.maybeAddValueEvent_(oldViewCache, newViewCache, changes);\r\n        return new ProcessorResult(newViewCache, changes);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!ViewCache} newViewCache\r\n     * @param {!Array.<!Change>} accumulator\r\n     * @private\r\n     */\r\n    ViewProcessor.maybeAddValueEvent_ = function (oldViewCache, newViewCache, accumulator) {\r\n        var eventSnap = newViewCache.getEventCache();\r\n        if (eventSnap.isFullyInitialized()) {\r\n            var isLeafOrEmpty = eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\r\n            var oldCompleteSnap = oldViewCache.getCompleteEventSnap();\r\n            if (accumulator.length > 0 ||\r\n                !oldViewCache.getEventCache().isFullyInitialized() ||\r\n                (isLeafOrEmpty &&\r\n                    !eventSnap\r\n                        .getNode()\r\n                        .equals(/** @type {!Node} */ (oldCompleteSnap))) ||\r\n                !eventSnap\r\n                    .getNode()\r\n                    .getPriority()\r\n                    .equals(oldCompleteSnap.getPriority())) {\r\n                accumulator.push(Change.valueChange(\r\n                /** @type {!Node} */ newViewCache.getCompleteEventSnap()));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} changePath\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {!CompleteChildSource} source\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.generateEventCacheAfterServerEvent_ = function (viewCache, changePath, writesCache, source, accumulator) {\r\n        var oldEventSnap = viewCache.getEventCache();\r\n        if (writesCache.shadowingWrite(changePath) != null) {\r\n            // we have a shadowing write, ignore changes\r\n            return viewCache;\r\n        }\r\n        else {\r\n            var newEventCache = void 0, serverNode = void 0;\r\n            if (changePath.isEmpty()) {\r\n                // TODO: figure out how this plays with \"sliding ack windows\"\r\n                util.assert(viewCache.getServerCache().isFullyInitialized(), 'If change path is empty, we must have complete server data');\r\n                if (viewCache.getServerCache().isFiltered()) {\r\n                    // We need to special case this, because we need to only apply writes to complete children, or\r\n                    // we might end up raising events for incomplete children. If the server data is filtered deep\r\n                    // writes cannot be guaranteed to be complete\r\n                    var serverCache = viewCache.getCompleteServerSnap();\r\n                    var completeChildren = serverCache instanceof ChildrenNode\r\n                        ? serverCache\r\n                        : ChildrenNode.EMPTY_NODE;\r\n                    var completeEventChildren = writesCache.calcCompleteEventChildren(completeChildren);\r\n                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeEventChildren, accumulator);\r\n                }\r\n                else {\r\n                    var completeNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeNode, accumulator);\r\n                }\r\n            }\r\n            else {\r\n                var childKey = changePath.getFront();\r\n                if (childKey == '.priority') {\r\n                    util.assert(changePath.getLength() == 1, \"Can't have a priority with additional path components\");\r\n                    var oldEventNode = oldEventSnap.getNode();\r\n                    serverNode = viewCache.getServerCache().getNode();\r\n                    // we might have overwrites for this priority\r\n                    var updatedPriority = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventNode, serverNode);\r\n                    if (updatedPriority != null) {\r\n                        newEventCache = this.filter_.updatePriority(oldEventNode, updatedPriority);\r\n                    }\r\n                    else {\r\n                        // priority didn't change, keep old node\r\n                        newEventCache = oldEventSnap.getNode();\r\n                    }\r\n                }\r\n                else {\r\n                    var childChangePath = changePath.popFront();\r\n                    // update child\r\n                    var newEventChild = void 0;\r\n                    if (oldEventSnap.isCompleteForChild(childKey)) {\r\n                        serverNode = viewCache.getServerCache().getNode();\r\n                        var eventChildUpdate = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventSnap.getNode(), serverNode);\r\n                        if (eventChildUpdate != null) {\r\n                            newEventChild = oldEventSnap\r\n                                .getNode()\r\n                                .getImmediateChild(childKey)\r\n                                .updateChild(childChangePath, eventChildUpdate);\r\n                        }\r\n                        else {\r\n                            // Nothing changed, just keep the old child\r\n                            newEventChild = oldEventSnap\r\n                                .getNode()\r\n                                .getImmediateChild(childKey);\r\n                        }\r\n                    }\r\n                    else {\r\n                        newEventChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\r\n                    }\r\n                    if (newEventChild != null) {\r\n                        newEventCache = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newEventChild, childChangePath, source, accumulator);\r\n                    }\r\n                    else {\r\n                        // no complete child available or no change\r\n                        newEventCache = oldEventSnap.getNode();\r\n                    }\r\n                }\r\n            }\r\n            return viewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized() || changePath.isEmpty(), this.filter_.filtersNodes());\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Path} changePath\r\n     * @param {!Node} changedSnap\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {boolean} filterServerNode\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyServerOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, filterServerNode, accumulator) {\r\n        var oldServerSnap = oldViewCache.getServerCache();\r\n        var newServerCache;\r\n        var serverFilter = filterServerNode\r\n            ? this.filter_\r\n            : this.filter_.getIndexedFilter();\r\n        if (changePath.isEmpty()) {\r\n            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), changedSnap, null);\r\n        }\r\n        else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\r\n            // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\r\n            var newServerNode = oldServerSnap\r\n                .getNode()\r\n                .updateChild(changePath, changedSnap);\r\n            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), newServerNode, null);\r\n        }\r\n        else {\r\n            var childKey = changePath.getFront();\r\n            if (!oldServerSnap.isCompleteForPath(changePath) &&\r\n                changePath.getLength() > 1) {\r\n                // We don't update incomplete nodes with updates intended for other listeners\r\n                return oldViewCache;\r\n            }\r\n            var childChangePath = changePath.popFront();\r\n            var childNode = oldServerSnap.getNode().getImmediateChild(childKey);\r\n            var newChildNode = childNode.updateChild(childChangePath, changedSnap);\r\n            if (childKey == '.priority') {\r\n                newServerCache = serverFilter.updatePriority(oldServerSnap.getNode(), newChildNode);\r\n            }\r\n            else {\r\n                newServerCache = serverFilter.updateChild(oldServerSnap.getNode(), childKey, newChildNode, childChangePath, NO_COMPLETE_CHILD_SOURCE, null);\r\n            }\r\n        }\r\n        var newViewCache = oldViewCache.updateServerSnap(newServerCache, oldServerSnap.isFullyInitialized() || changePath.isEmpty(), serverFilter.filtersNodes());\r\n        var source = new WriteTreeCompleteChildSource(writesCache, newViewCache, completeCache);\r\n        return this.generateEventCacheAfterServerEvent_(newViewCache, changePath, writesCache, source, accumulator);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Path} changePath\r\n     * @param {!Node} changedSnap\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyUserOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, accumulator) {\r\n        var oldEventSnap = oldViewCache.getEventCache();\r\n        var newViewCache, newEventCache;\r\n        var source = new WriteTreeCompleteChildSource(writesCache, oldViewCache, completeCache);\r\n        if (changePath.isEmpty()) {\r\n            newEventCache = this.filter_.updateFullNode(oldViewCache.getEventCache().getNode(), changedSnap, accumulator);\r\n            newViewCache = oldViewCache.updateEventSnap(newEventCache, true, this.filter_.filtersNodes());\r\n        }\r\n        else {\r\n            var childKey = changePath.getFront();\r\n            if (childKey === '.priority') {\r\n                newEventCache = this.filter_.updatePriority(oldViewCache.getEventCache().getNode(), changedSnap);\r\n                newViewCache = oldViewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized(), oldEventSnap.isFiltered());\r\n            }\r\n            else {\r\n                var childChangePath = changePath.popFront();\r\n                var oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\r\n                var newChild = void 0;\r\n                if (childChangePath.isEmpty()) {\r\n                    // Child overwrite, we can replace the child\r\n                    newChild = changedSnap;\r\n                }\r\n                else {\r\n                    var childNode = source.getCompleteChild(childKey);\r\n                    if (childNode != null) {\r\n                        if (childChangePath.getBack() === '.priority' &&\r\n                            childNode.getChild(childChangePath.parent()).isEmpty()) {\r\n                            // This is a priority update on an empty node. If this node exists on the server, the\r\n                            // server will send down the priority in the update, so ignore for now\r\n                            newChild = childNode;\r\n                        }\r\n                        else {\r\n                            newChild = childNode.updateChild(childChangePath, changedSnap);\r\n                        }\r\n                    }\r\n                    else {\r\n                        // There is no complete child node available\r\n                        newChild = ChildrenNode.EMPTY_NODE;\r\n                    }\r\n                }\r\n                if (!oldChild.equals(newChild)) {\r\n                    var newEventSnap = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newChild, childChangePath, source, accumulator);\r\n                    newViewCache = oldViewCache.updateEventSnap(newEventSnap, oldEventSnap.isFullyInitialized(), this.filter_.filtersNodes());\r\n                }\r\n                else {\r\n                    newViewCache = oldViewCache;\r\n                }\r\n            }\r\n        }\r\n        return newViewCache;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {string} childKey\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    ViewProcessor.cacheHasChild_ = function (viewCache, childKey) {\r\n        return viewCache.getEventCache().isCompleteForChild(childKey);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {ImmutableTree.<!Node>} changedChildren\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyUserMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, accumulator) {\r\n        var _this = this;\r\n        // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n        // window leaving room for new items.  It's important we process these changes first, so we\r\n        // iterate the changes twice, first processing any that affect items currently in view.\r\n        // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n        // not the other.\r\n        var curViewCache = viewCache;\r\n        changedChildren.foreach(function (relativePath, childNode) {\r\n            var writePath = path.child(relativePath);\r\n            if (ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\r\n                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n            }\r\n        });\r\n        changedChildren.foreach(function (relativePath, childNode) {\r\n            var writePath = path.child(relativePath);\r\n            if (!ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\r\n                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n            }\r\n        });\r\n        return curViewCache;\r\n    };\r\n    /**\r\n     * @param {!Node} node\r\n     * @param {ImmutableTree.<!Node>} merge\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyMerge_ = function (node, merge) {\r\n        merge.foreach(function (relativePath, childNode) {\r\n            node = node.updateChild(relativePath, childNode);\r\n        });\r\n        return node;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!ImmutableTree.<!Node>} changedChildren\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache\r\n     * @param {boolean} filterServerNode\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyServerMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, filterServerNode, accumulator) {\r\n        var _this = this;\r\n        // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\r\n        // wait for the complete data update coming soon.\r\n        if (viewCache\r\n            .getServerCache()\r\n            .getNode()\r\n            .isEmpty() &&\r\n            !viewCache.getServerCache().isFullyInitialized()) {\r\n            return viewCache;\r\n        }\r\n        // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n        // window leaving room for new items.  It's important we process these changes first, so we\r\n        // iterate the changes twice, first processing any that affect items currently in view.\r\n        // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n        // not the other.\r\n        var curViewCache = viewCache;\r\n        var viewMergeTree;\r\n        if (path.isEmpty()) {\r\n            viewMergeTree = changedChildren;\r\n        }\r\n        else {\r\n            viewMergeTree = ImmutableTree.Empty.setTree(path, changedChildren);\r\n        }\r\n        var serverNode = viewCache.getServerCache().getNode();\r\n        viewMergeTree.children.inorderTraversal(function (childKey, childTree) {\r\n            if (serverNode.hasChild(childKey)) {\r\n                var serverChild = viewCache\r\n                    .getServerCache()\r\n                    .getNode()\r\n                    .getImmediateChild(childKey);\r\n                var newChild = _this.applyMerge_(serverChild, childTree);\r\n                curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n            }\r\n        });\r\n        viewMergeTree.children.inorderTraversal(function (childKey, childMergeTree) {\r\n            var isUnknownDeepMerge = !viewCache.getServerCache().isCompleteForChild(childKey) &&\r\n                childMergeTree.value == null;\r\n            if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\r\n                var serverChild = viewCache\r\n                    .getServerCache()\r\n                    .getNode()\r\n                    .getImmediateChild(childKey);\r\n                var newChild = _this.applyMerge_(serverChild, childMergeTree);\r\n                curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n            }\r\n        });\r\n        return curViewCache;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} ackPath\r\n     * @param {!ImmutableTree<!boolean>} affectedTree\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.ackUserWrite_ = function (viewCache, ackPath, affectedTree, writesCache, completeCache, accumulator) {\r\n        if (writesCache.shadowingWrite(ackPath) != null) {\r\n            return viewCache;\r\n        }\r\n        // Only filter server node if it is currently filtered\r\n        var filterServerNode = viewCache.getServerCache().isFiltered();\r\n        // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\r\n        // now that it won't be shadowed.\r\n        var serverCache = viewCache.getServerCache();\r\n        if (affectedTree.value != null) {\r\n            // This is an overwrite.\r\n            if ((ackPath.isEmpty() && serverCache.isFullyInitialized()) ||\r\n                serverCache.isCompleteForPath(ackPath)) {\r\n                return this.applyServerOverwrite_(viewCache, ackPath, serverCache.getNode().getChild(ackPath), writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n            else if (ackPath.isEmpty()) {\r\n                // This is a goofy edge case where we are acking data at this location but don't have full data.  We\r\n                // should just re-apply whatever we have in our cache as a merge.\r\n                var changedChildren_1 = ImmutableTree.Empty;\r\n                serverCache.getNode().forEachChild(KEY_INDEX, function (name, node) {\r\n                    changedChildren_1 = changedChildren_1.set(new Path(name), node);\r\n                });\r\n                return this.applyServerMerge_(viewCache, ackPath, changedChildren_1, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n            else {\r\n                return viewCache;\r\n            }\r\n        }\r\n        else {\r\n            // This is a merge.\r\n            var changedChildren_2 = ImmutableTree.Empty;\r\n            affectedTree.foreach(function (mergePath, value) {\r\n                var serverCachePath = ackPath.child(mergePath);\r\n                if (serverCache.isCompleteForPath(serverCachePath)) {\r\n                    changedChildren_2 = changedChildren_2.set(mergePath, serverCache.getNode().getChild(serverCachePath));\r\n                }\r\n            });\r\n            return this.applyServerMerge_(viewCache, ackPath, changedChildren_2, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.listenComplete_ = function (viewCache, path, writesCache, accumulator) {\r\n        var oldServerNode = viewCache.getServerCache();\r\n        var newViewCache = viewCache.updateServerSnap(oldServerNode.getNode(), oldServerNode.isFullyInitialized() || path.isEmpty(), oldServerNode.isFiltered());\r\n        return this.generateEventCacheAfterServerEvent_(newViewCache, path, writesCache, NO_COMPLETE_CHILD_SOURCE, accumulator);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeServerCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.revertUserWrite_ = function (viewCache, path, writesCache, completeServerCache, accumulator) {\r\n        var complete;\r\n        if (writesCache.shadowingWrite(path) != null) {\r\n            return viewCache;\r\n        }\r\n        else {\r\n            var source = new WriteTreeCompleteChildSource(writesCache, viewCache, completeServerCache);\r\n            var oldEventCache = viewCache.getEventCache().getNode();\r\n            var newEventCache = void 0;\r\n            if (path.isEmpty() || path.getFront() === '.priority') {\r\n                var newNode = void 0;\r\n                if (viewCache.getServerCache().isFullyInitialized()) {\r\n                    newNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                }\r\n                else {\r\n                    var serverChildren = viewCache.getServerCache().getNode();\r\n                    util.assert(serverChildren instanceof ChildrenNode, 'serverChildren would be complete if leaf node');\r\n                    newNode = writesCache.calcCompleteEventChildren(serverChildren);\r\n                }\r\n                newNode = newNode;\r\n                newEventCache = this.filter_.updateFullNode(oldEventCache, newNode, accumulator);\r\n            }\r\n            else {\r\n                var childKey = path.getFront();\r\n                var newChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\r\n                if (newChild == null &&\r\n                    viewCache.getServerCache().isCompleteForChild(childKey)) {\r\n                    newChild = oldEventCache.getImmediateChild(childKey);\r\n                }\r\n                if (newChild != null) {\r\n                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, newChild, path.popFront(), source, accumulator);\r\n                }\r\n                else if (viewCache\r\n                    .getEventCache()\r\n                    .getNode()\r\n                    .hasChild(childKey)) {\r\n                    // No complete child available, delete the existing one, if any\r\n                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, ChildrenNode.EMPTY_NODE, path.popFront(), source, accumulator);\r\n                }\r\n                else {\r\n                    newEventCache = oldEventCache;\r\n                }\r\n                if (newEventCache.isEmpty() &&\r\n                    viewCache.getServerCache().isFullyInitialized()) {\r\n                    // We might have reverted all child writes. Maybe the old event was a leaf node\r\n                    complete = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                    if (complete.isLeafNode()) {\r\n                        newEventCache = this.filter_.updateFullNode(newEventCache, complete, accumulator);\r\n                    }\r\n                }\r\n            }\r\n            complete =\r\n                viewCache.getServerCache().isFullyInitialized() ||\r\n                    writesCache.shadowingWrite(Path.Empty) != null;\r\n            return viewCache.updateEventSnap(newEventCache, complete, this.filter_.filtersNodes());\r\n        }\r\n    };\r\n    return ViewProcessor;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\r\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\r\n * for details.\r\n *\r\n * @constructor\r\n */\r\nvar EventGenerator = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Query} query_\r\n     */\r\n    function EventGenerator(query_) {\r\n        this.query_ = query_;\r\n        /**\r\n         * @private\r\n         * @type {!Index}\r\n         */\r\n        this.index_ = this.query_.getQueryParams().getIndex();\r\n    }\r\n    /**\r\n     * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\r\n     * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\r\n     *\r\n     * Notes:\r\n     *  - child_moved events will be synthesized at this time for any child_changed events that affect\r\n     *    our index.\r\n     *  - prevName will be calculated based on the index ordering.\r\n     *\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Node} eventCache\r\n     * @param {!Array.<!EventRegistration>} eventRegistrations\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    EventGenerator.prototype.generateEventsForChanges = function (changes, eventCache, eventRegistrations) {\r\n        var _this = this;\r\n        var events = [];\r\n        var moves = [];\r\n        changes.forEach(function (change) {\r\n            if (change.type === Change.CHILD_CHANGED &&\r\n                _this.index_.indexedValueChanged(change.oldSnap, change.snapshotNode)) {\r\n                moves.push(Change.childMovedChange(change.childName, change.snapshotNode));\r\n            }\r\n        });\r\n        this.generateEventsForType_(events, Change.CHILD_REMOVED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_ADDED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_MOVED, moves, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_CHANGED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.VALUE, changes, eventRegistrations, eventCache);\r\n        return events;\r\n    };\r\n    /**\r\n     * Given changes of a single change type, generate the corresponding events.\r\n     *\r\n     * @param {!Array.<!Event>} events\r\n     * @param {!string} eventType\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Array.<!EventRegistration>} registrations\r\n     * @param {!Node} eventCache\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.generateEventsForType_ = function (events, eventType, changes, registrations, eventCache) {\r\n        var _this = this;\r\n        var filteredChanges = changes.filter(function (change) { return change.type === eventType; });\r\n        filteredChanges.sort(this.compareChanges_.bind(this));\r\n        filteredChanges.forEach(function (change) {\r\n            var materializedChange = _this.materializeSingleChange_(change, eventCache);\r\n            registrations.forEach(function (registration) {\r\n                if (registration.respondsTo(change.type)) {\r\n                    events.push(registration.createEvent(materializedChange, _this.query_));\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Change} change\r\n     * @param {!Node} eventCache\r\n     * @return {!Change}\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.materializeSingleChange_ = function (change, eventCache) {\r\n        if (change.type === 'value' || change.type === 'child_removed') {\r\n            return change;\r\n        }\r\n        else {\r\n            change.prevName = eventCache.getPredecessorChildName(\r\n            /** @type {!string} */\r\n            change.childName, change.snapshotNode, this.index_);\r\n            return change;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Change} a\r\n     * @param {!Change} b\r\n     * @return {number}\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.compareChanges_ = function (a, b) {\r\n        if (a.childName == null || b.childName == null) {\r\n            throw util.assertionError('Should only compare child_ events.');\r\n        }\r\n        var aWrapped = new NamedNode(a.childName, a.snapshotNode);\r\n        var bWrapped = new NamedNode(b.childName, b.snapshotNode);\r\n        return this.index_.compare(aWrapped, bWrapped);\r\n    };\r\n    return EventGenerator;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A view represents a specific location and query that has 1 or more event registrations.\r\n *\r\n * It does several things:\r\n *  - Maintains the list of event registrations for this location/query.\r\n *  - Maintains a cache of the data visible for this location/query.\r\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\r\n *    registrations returns the set of events to be raised.\r\n * @constructor\r\n */\r\nvar View = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Query} query_\r\n     * @param {!ViewCache} initialViewCache\r\n     */\r\n    function View(query_, initialViewCache) {\r\n        this.query_ = query_;\r\n        this.eventRegistrations_ = [];\r\n        var params = this.query_.getQueryParams();\r\n        var indexFilter = new IndexedFilter(params.getIndex());\r\n        var filter = params.getNodeFilter();\r\n        /**\r\n         * @type {ViewProcessor}\r\n         * @private\r\n         */\r\n        this.processor_ = new ViewProcessor(filter);\r\n        var initialServerCache = initialViewCache.getServerCache();\r\n        var initialEventCache = initialViewCache.getEventCache();\r\n        // Don't filter server node with other filter than index, wait for tagged listen\r\n        var serverSnap = indexFilter.updateFullNode(ChildrenNode.EMPTY_NODE, initialServerCache.getNode(), null);\r\n        var eventSnap = filter.updateFullNode(ChildrenNode.EMPTY_NODE, initialEventCache.getNode(), null);\r\n        var newServerCache = new CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());\r\n        var newEventCache = new CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());\r\n        /**\r\n         * @type {!ViewCache}\r\n         * @private\r\n         */\r\n        this.viewCache_ = new ViewCache(newEventCache, newServerCache);\r\n        /**\r\n         * @type {!EventGenerator}\r\n         * @private\r\n         */\r\n        this.eventGenerator_ = new EventGenerator(this.query_);\r\n    }\r\n    /**\r\n     * @return {!Query}\r\n     */\r\n    View.prototype.getQuery = function () {\r\n        return this.query_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    View.prototype.getServerCache = function () {\r\n        return this.viewCache_.getServerCache().getNode();\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    View.prototype.getCompleteServerCache = function (path) {\r\n        var cache = this.viewCache_.getCompleteServerSnap();\r\n        if (cache) {\r\n            // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\r\n            // we need to see if it contains the child we're interested in.\r\n            if (this.query_.getQueryParams().loadsAllData() ||\r\n                (!path.isEmpty() && !cache.getImmediateChild(path.getFront()).isEmpty())) {\r\n                return cache.getChild(path);\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    View.prototype.isEmpty = function () {\r\n        return this.eventRegistrations_.length === 0;\r\n    };\r\n    /**\r\n     * @param {!EventRegistration} eventRegistration\r\n     */\r\n    View.prototype.addEventRegistration = function (eventRegistration) {\r\n        this.eventRegistrations_.push(eventRegistration);\r\n    };\r\n    /**\r\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\r\n     */\r\n    View.prototype.removeEventRegistration = function (eventRegistration, cancelError) {\r\n        var cancelEvents = [];\r\n        if (cancelError) {\r\n            util.assert(eventRegistration == null, 'A cancel should cancel all event registrations.');\r\n            var path_1 = this.query_.path;\r\n            this.eventRegistrations_.forEach(function (registration) {\r\n                cancelError /** @type {!Error} */ = cancelError;\r\n                var maybeEvent = registration.createCancelEvent(cancelError, path_1);\r\n                if (maybeEvent) {\r\n                    cancelEvents.push(maybeEvent);\r\n                }\r\n            });\r\n        }\r\n        if (eventRegistration) {\r\n            var remaining = [];\r\n            for (var i = 0; i < this.eventRegistrations_.length; ++i) {\r\n                var existing = this.eventRegistrations_[i];\r\n                if (!existing.matches(eventRegistration)) {\r\n                    remaining.push(existing);\r\n                }\r\n                else if (eventRegistration.hasAnyCallback()) {\r\n                    // We're removing just this one\r\n                    remaining = remaining.concat(this.eventRegistrations_.slice(i + 1));\r\n                    break;\r\n                }\r\n            }\r\n            this.eventRegistrations_ = remaining;\r\n        }\r\n        else {\r\n            this.eventRegistrations_ = [];\r\n        }\r\n        return cancelEvents;\r\n    };\r\n    /**\r\n     * Applies the given Operation, updates our cache, and returns the appropriate events.\r\n     *\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeServerCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.applyOperation = function (operation, writesCache, completeServerCache) {\r\n        if (operation.type === OperationType.MERGE &&\r\n            operation.source.queryId !== null) {\r\n            util.assert(this.viewCache_.getCompleteServerSnap(), 'We should always have a full cache before handling merges');\r\n            util.assert(this.viewCache_.getCompleteEventSnap(), 'Missing event cache, even though we have a server cache');\r\n        }\r\n        var oldViewCache = this.viewCache_;\r\n        var result = this.processor_.applyOperation(oldViewCache, operation, writesCache, completeServerCache);\r\n        this.processor_.assertIndexed(result.viewCache);\r\n        util.assert(result.viewCache.getServerCache().isFullyInitialized() ||\r\n            !oldViewCache.getServerCache().isFullyInitialized(), 'Once a server snap is complete, it should never go back');\r\n        this.viewCache_ = result.viewCache;\r\n        return this.generateEventsForChanges_(result.changes, result.viewCache.getEventCache().getNode(), null);\r\n    };\r\n    /**\r\n     * @param {!EventRegistration} registration\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.getInitialEvents = function (registration) {\r\n        var eventSnap = this.viewCache_.getEventCache();\r\n        var initialChanges = [];\r\n        if (!eventSnap.getNode().isLeafNode()) {\r\n            var eventNode = eventSnap.getNode();\r\n            eventNode.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                initialChanges.push(Change.childAddedChange(key, childNode));\r\n            });\r\n        }\r\n        if (eventSnap.isFullyInitialized()) {\r\n            initialChanges.push(Change.valueChange(eventSnap.getNode()));\r\n        }\r\n        return this.generateEventsForChanges_(initialChanges, eventSnap.getNode(), registration);\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Node} eventCache\r\n     * @param {EventRegistration=} eventRegistration\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.generateEventsForChanges_ = function (changes, eventCache, eventRegistration) {\r\n        var registrations = eventRegistration\r\n            ? [eventRegistration]\r\n            : this.eventRegistrations_;\r\n        return this.eventGenerator_.generateEventsForChanges(changes, eventCache, registrations);\r\n    };\r\n    return View;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __referenceConstructor$1;\r\n/**\r\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\r\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\r\n * and user writes (set, transaction, update).\r\n *\r\n * It's responsible for:\r\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\r\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\r\n *    applyUserOverwrite, etc.)\r\n */\r\nvar SyncPoint = /** @class */ (function () {\r\n    function SyncPoint() {\r\n        /**\r\n         * The Views being tracked at this location in the tree, stored as a map where the key is a\r\n         * queryId and the value is the View for that query.\r\n         *\r\n         * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\r\n         *\r\n         * @type {!Object.<!string, !View>}\r\n         * @private\r\n         */\r\n        this.views_ = {};\r\n    }\r\n    Object.defineProperty(SyncPoint, \"__referenceConstructor\", {\r\n        get: function () {\r\n            util.assert(__referenceConstructor$1, 'Reference.ts has not been loaded');\r\n            return __referenceConstructor$1;\r\n        },\r\n        set: function (val) {\r\n            util.assert(!__referenceConstructor$1, '__referenceConstructor has already been defined');\r\n            __referenceConstructor$1 = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    SyncPoint.prototype.isEmpty = function () {\r\n        return util.isEmpty(this.views_);\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} optCompleteServerCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    SyncPoint.prototype.applyOperation = function (operation, writesCache, optCompleteServerCache) {\r\n        var queryId = operation.source.queryId;\r\n        if (queryId !== null) {\r\n            var view = util.safeGet(this.views_, queryId);\r\n            util.assert(view != null, 'SyncTree gave us an op for an invalid query.');\r\n            return view.applyOperation(operation, writesCache, optCompleteServerCache);\r\n        }\r\n        else {\r\n            var events_1 = [];\r\n            util.forEach(this.views_, function (key, view) {\r\n                events_1 = events_1.concat(view.applyOperation(operation, writesCache, optCompleteServerCache));\r\n            });\r\n            return events_1;\r\n        }\r\n    };\r\n    /**\r\n     * Add an event callback for the specified query.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {!EventRegistration} eventRegistration\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache Complete server cache, if we have it.\r\n     * @param {boolean} serverCacheComplete\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncPoint.prototype.addEventRegistration = function (query, eventRegistration, writesCache, serverCache, serverCacheComplete) {\r\n        var queryId = query.queryIdentifier();\r\n        var view = util.safeGet(this.views_, queryId);\r\n        if (!view) {\r\n            // TODO: make writesCache take flag for complete server node\r\n            var eventCache = writesCache.calcCompleteEventCache(serverCacheComplete ? serverCache : null);\r\n            var eventCacheComplete = false;\r\n            if (eventCache) {\r\n                eventCacheComplete = true;\r\n            }\r\n            else if (serverCache instanceof ChildrenNode) {\r\n                eventCache = writesCache.calcCompleteEventChildren(serverCache);\r\n                eventCacheComplete = false;\r\n            }\r\n            else {\r\n                eventCache = ChildrenNode.EMPTY_NODE;\r\n                eventCacheComplete = false;\r\n            }\r\n            var viewCache = new ViewCache(new CacheNode(\r\n            /** @type {!Node} */ (eventCache), eventCacheComplete, false), new CacheNode(\r\n            /** @type {!Node} */ (serverCache), serverCacheComplete, false));\r\n            view = new View(query, viewCache);\r\n            this.views_[queryId] = view;\r\n        }\r\n        // This is guaranteed to exist now, we just created anything that was missing\r\n        view.addEventRegistration(eventRegistration);\r\n        return view.getInitialEvents(eventRegistration);\r\n    };\r\n    /**\r\n     * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\r\n     *\r\n     * If query is the default query, we'll check all views for the specified eventRegistration.\r\n     * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\r\n     *\r\n     * @param {!Query} query\r\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {{removed:!Array.<!Query>, events:!Array.<!Event>}} removed queries and any cancel events\r\n     */\r\n    SyncPoint.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\r\n        var queryId = query.queryIdentifier();\r\n        var removed = [];\r\n        var cancelEvents = [];\r\n        var hadCompleteView = this.hasCompleteView();\r\n        if (queryId === 'default') {\r\n            // When you do ref.off(...), we search all views for the registration to remove.\r\n            var self_1 = this;\r\n            util.forEach(this.views_, function (viewQueryId, view) {\r\n                cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\r\n                if (view.isEmpty()) {\r\n                    delete self_1.views_[viewQueryId];\r\n                    // We'll deal with complete views later.\r\n                    if (!view\r\n                        .getQuery()\r\n                        .getQueryParams()\r\n                        .loadsAllData()) {\r\n                        removed.push(view.getQuery());\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            // remove the callback from the specific view.\r\n            var view = util.safeGet(this.views_, queryId);\r\n            if (view) {\r\n                cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\r\n                if (view.isEmpty()) {\r\n                    delete this.views_[queryId];\r\n                    // We'll deal with complete views later.\r\n                    if (!view\r\n                        .getQuery()\r\n                        .getQueryParams()\r\n                        .loadsAllData()) {\r\n                        removed.push(view.getQuery());\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (hadCompleteView && !this.hasCompleteView()) {\r\n            // We removed our last complete view.\r\n            removed.push(new SyncPoint.__referenceConstructor(query.repo, query.path));\r\n        }\r\n        return { removed: removed, events: cancelEvents };\r\n    };\r\n    /**\r\n     * @return {!Array.<!View>}\r\n     */\r\n    SyncPoint.prototype.getQueryViews = function () {\r\n        var _this = this;\r\n        var values = Object.keys(this.views_).map(function (key) { return _this.views_[key]; });\r\n        return values.filter(function (view) {\r\n            return !view\r\n                .getQuery()\r\n                .getQueryParams()\r\n                .loadsAllData();\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} path The path to the desired complete snapshot\r\n     * @return {?Node} A complete cache, if it exists\r\n     */\r\n    SyncPoint.prototype.getCompleteServerCache = function (path) {\r\n        var serverCache = null;\r\n        util.forEach(this.views_, function (key, view) {\r\n            serverCache = serverCache || view.getCompleteServerCache(path);\r\n        });\r\n        return serverCache;\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @return {?View}\r\n     */\r\n    SyncPoint.prototype.viewForQuery = function (query) {\r\n        var params = query.getQueryParams();\r\n        if (params.loadsAllData()) {\r\n            return this.getCompleteView();\r\n        }\r\n        else {\r\n            var queryId = query.queryIdentifier();\r\n            return util.safeGet(this.views_, queryId);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @return {boolean}\r\n     */\r\n    SyncPoint.prototype.viewExistsForQuery = function (query) {\r\n        return this.viewForQuery(query) != null;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    SyncPoint.prototype.hasCompleteView = function () {\r\n        return this.getCompleteView() != null;\r\n    };\r\n    /**\r\n     * @return {?View}\r\n     */\r\n    SyncPoint.prototype.getCompleteView = function () {\r\n        var completeView = util.findValue(this.views_, function (view) {\r\n            return view\r\n                .getQuery()\r\n                .getQueryParams()\r\n                .loadsAllData();\r\n        });\r\n        return completeView || null;\r\n    };\r\n    return SyncPoint;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\r\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\r\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\r\n * to reflect the write added.\r\n *\r\n * @constructor\r\n * @param {!ImmutableTree.<!Node>} writeTree\r\n */\r\nvar CompoundWrite = /** @class */ (function () {\r\n    function CompoundWrite(writeTree_) {\r\n        this.writeTree_ = writeTree_;\r\n    }\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!Node} node\r\n     * @return {!CompoundWrite}\r\n     */\r\n    CompoundWrite.prototype.addWrite = function (path, node) {\r\n        if (path.isEmpty()) {\r\n            return new CompoundWrite(new ImmutableTree(node));\r\n        }\r\n        else {\r\n            var rootmost = this.writeTree_.findRootMostValueAndPath(path);\r\n            if (rootmost != null) {\r\n                var rootMostPath = rootmost.path;\r\n                var value = rootmost.value;\r\n                var relativePath = Path.relativePath(rootMostPath, path);\r\n                value = value.updateChild(relativePath, node);\r\n                return new CompoundWrite(this.writeTree_.set(rootMostPath, value));\r\n            }\r\n            else {\r\n                var subtree = new ImmutableTree(node);\r\n                var newWriteTree = this.writeTree_.setTree(path, subtree);\r\n                return new CompoundWrite(newWriteTree);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} updates\r\n     * @return {!CompoundWrite}\r\n     */\r\n    CompoundWrite.prototype.addWrites = function (path, updates) {\r\n        var newWrite = this;\r\n        util.forEach(updates, function (childKey, node) {\r\n            newWrite = newWrite.addWrite(path.child(childKey), node);\r\n        });\r\n        return newWrite;\r\n    };\r\n    /**\r\n     * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\r\n     * location, which must be removed by calling this method with that path.\r\n     *\r\n     * @param {!Path} path The path at which a write and all deeper writes should be removed\r\n     * @return {!CompoundWrite} The new CompoundWrite with the removed path\r\n     */\r\n    CompoundWrite.prototype.removeWrite = function (path) {\r\n        if (path.isEmpty()) {\r\n            return CompoundWrite.Empty;\r\n        }\r\n        else {\r\n            var newWriteTree = this.writeTree_.setTree(path, ImmutableTree.Empty);\r\n            return new CompoundWrite(newWriteTree);\r\n        }\r\n    };\r\n    /**\r\n     * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\r\n     * considered \"complete\".\r\n     *\r\n     * @param {!Path} path The path to check for\r\n     * @return {boolean} Whether there is a complete write at that path\r\n     */\r\n    CompoundWrite.prototype.hasCompleteWrite = function (path) {\r\n        return this.getCompleteNode(path) != null;\r\n    };\r\n    /**\r\n     * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\r\n     * writes from deeper paths, but will return child nodes from a more shallow path.\r\n     *\r\n     * @param {!Path} path The path to get a complete write\r\n     * @return {?Node} The node if complete at that path, or null otherwise.\r\n     */\r\n    CompoundWrite.prototype.getCompleteNode = function (path) {\r\n        var rootmost = this.writeTree_.findRootMostValueAndPath(path);\r\n        if (rootmost != null) {\r\n            return this.writeTree_\r\n                .get(rootmost.path)\r\n                .getChild(Path.relativePath(rootmost.path, path));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Returns all children that are guaranteed to be a complete overwrite.\r\n     *\r\n     * @return {!Array.<NamedNode>} A list of all complete children.\r\n     */\r\n    CompoundWrite.prototype.getCompleteChildren = function () {\r\n        var children = [];\r\n        var node = this.writeTree_.value;\r\n        if (node != null) {\r\n            // If it's a leaf node, it has no children; so nothing to do.\r\n            if (!node.isLeafNode()) {\r\n                node.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n                    children.push(new NamedNode(childName, childNode));\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            this.writeTree_.children.inorderTraversal(function (childName, childTree) {\r\n                if (childTree.value != null) {\r\n                    children.push(new NamedNode(childName, childTree.value));\r\n                }\r\n            });\r\n        }\r\n        return children;\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {!CompoundWrite}\r\n     */\r\n    CompoundWrite.prototype.childCompoundWrite = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            var shadowingNode = this.getCompleteNode(path);\r\n            if (shadowingNode != null) {\r\n                return new CompoundWrite(new ImmutableTree(shadowingNode));\r\n            }\r\n            else {\r\n                return new CompoundWrite(this.writeTree_.subtree(path));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\r\n     * @return {boolean} Whether this CompoundWrite is empty\r\n     */\r\n    CompoundWrite.prototype.isEmpty = function () {\r\n        return this.writeTree_.isEmpty();\r\n    };\r\n    /**\r\n     * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\r\n     * node\r\n     * @param {!Node} node The node to apply this CompoundWrite to\r\n     * @return {!Node} The node with all writes applied\r\n     */\r\n    CompoundWrite.prototype.apply = function (node) {\r\n        return CompoundWrite.applySubtreeWrite_(Path.Empty, this.writeTree_, node);\r\n    };\r\n    /**\r\n     * @type {!CompoundWrite}\r\n     */\r\n    CompoundWrite.Empty = new CompoundWrite(new ImmutableTree(null));\r\n    /**\r\n     * @param {!Path} relativePath\r\n     * @param {!ImmutableTree.<!Node>} writeTree\r\n     * @param {!Node} node\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    CompoundWrite.applySubtreeWrite_ = function (relativePath, writeTree, node) {\r\n        if (writeTree.value != null) {\r\n            // Since there a write is always a leaf, we're done here\r\n            return node.updateChild(relativePath, writeTree.value);\r\n        }\r\n        else {\r\n            var priorityWrite_1 = null;\r\n            writeTree.children.inorderTraversal(function (childKey, childTree) {\r\n                if (childKey === '.priority') {\r\n                    // Apply priorities at the end so we don't update priorities for either empty nodes or forget\r\n                    // to apply priorities to empty nodes that are later filled\r\n                    util.assert(childTree.value !== null, 'Priority writes must always be leaf nodes');\r\n                    priorityWrite_1 = childTree.value;\r\n                }\r\n                else {\r\n                    node = CompoundWrite.applySubtreeWrite_(relativePath.child(childKey), childTree, node);\r\n                }\r\n            });\r\n            // If there was a priority write, we only apply it if the node is not empty\r\n            if (!node.getChild(relativePath).isEmpty() && priorityWrite_1 !== null) {\r\n                node = node.updateChild(relativePath.child('.priority'), priorityWrite_1);\r\n            }\r\n            return node;\r\n        }\r\n    };\r\n    return CompoundWrite;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\r\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\r\n * and addMerge(), and removed with removeWrite().\r\n *\r\n * @constructor\r\n */\r\nvar WriteTree = /** @class */ (function () {\r\n    function WriteTree() {\r\n        /**\r\n         * A tree tracking the result of applying all visible writes.  This does not include transactions with\r\n         * applyLocally=false or writes that are completely shadowed by other writes.\r\n         *\r\n         * @type {!CompoundWrite}\r\n         * @private\r\n         */\r\n        this.visibleWrites_ = CompoundWrite.Empty;\r\n        /**\r\n         * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\r\n         * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\r\n         * used by transactions).\r\n         *\r\n         * @type {!Array.<!WriteRecord>}\r\n         * @private\r\n         */\r\n        this.allWrites_ = [];\r\n        this.lastWriteId_ = -1;\r\n    }\r\n    /**\r\n     * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {!WriteTreeRef}\r\n     */\r\n    WriteTree.prototype.childWrites = function (path) {\r\n        return new WriteTreeRef(path, this);\r\n    };\r\n    /**\r\n     * Record a new overwrite from user code.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} snap\r\n     * @param {!number} writeId\r\n     * @param {boolean=} visible This is set to false by some transactions. It should be excluded from event caches\r\n     */\r\n    WriteTree.prototype.addOverwrite = function (path, snap, writeId, visible) {\r\n        util.assert(writeId > this.lastWriteId_, 'Stacking an older write on top of newer ones');\r\n        if (visible === undefined) {\r\n            visible = true;\r\n        }\r\n        this.allWrites_.push({\r\n            path: path,\r\n            snap: snap,\r\n            writeId: writeId,\r\n            visible: visible\r\n        });\r\n        if (visible) {\r\n            this.visibleWrites_ = this.visibleWrites_.addWrite(path, snap);\r\n        }\r\n        this.lastWriteId_ = writeId;\r\n    };\r\n    /**\r\n     * Record a new merge from user code.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @param {!number} writeId\r\n     */\r\n    WriteTree.prototype.addMerge = function (path, changedChildren, writeId) {\r\n        util.assert(writeId > this.lastWriteId_, 'Stacking an older merge on top of newer ones');\r\n        this.allWrites_.push({\r\n            path: path,\r\n            children: changedChildren,\r\n            writeId: writeId,\r\n            visible: true\r\n        });\r\n        this.visibleWrites_ = this.visibleWrites_.addWrites(path, changedChildren);\r\n        this.lastWriteId_ = writeId;\r\n    };\r\n    /**\r\n     * @param {!number} writeId\r\n     * @return {?WriteRecord}\r\n     */\r\n    WriteTree.prototype.getWrite = function (writeId) {\r\n        for (var i = 0; i < this.allWrites_.length; i++) {\r\n            var record = this.allWrites_[i];\r\n            if (record.writeId === writeId) {\r\n                return record;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\r\n     * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\r\n     *\r\n     * @param {!number} writeId\r\n     * @return {boolean} true if the write may have been visible (meaning we'll need to reevaluate / raise\r\n     * events as a result).\r\n     */\r\n    WriteTree.prototype.removeWrite = function (writeId) {\r\n        // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\r\n        // out of order.\r\n        //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\r\n        //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\r\n        var _this = this;\r\n        var idx = this.allWrites_.findIndex(function (s) {\r\n            return s.writeId === writeId;\r\n        });\r\n        util.assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\r\n        var writeToRemove = this.allWrites_[idx];\r\n        this.allWrites_.splice(idx, 1);\r\n        var removedWriteWasVisible = writeToRemove.visible;\r\n        var removedWriteOverlapsWithOtherWrites = false;\r\n        var i = this.allWrites_.length - 1;\r\n        while (removedWriteWasVisible && i >= 0) {\r\n            var currentWrite = this.allWrites_[i];\r\n            if (currentWrite.visible) {\r\n                if (i >= idx &&\r\n                    this.recordContainsPath_(currentWrite, writeToRemove.path)) {\r\n                    // The removed write was completely shadowed by a subsequent write.\r\n                    removedWriteWasVisible = false;\r\n                }\r\n                else if (writeToRemove.path.contains(currentWrite.path)) {\r\n                    // Either we're covering some writes or they're covering part of us (depending on which came first).\r\n                    removedWriteOverlapsWithOtherWrites = true;\r\n                }\r\n            }\r\n            i--;\r\n        }\r\n        if (!removedWriteWasVisible) {\r\n            return false;\r\n        }\r\n        else if (removedWriteOverlapsWithOtherWrites) {\r\n            // There's some shadowing going on. Just rebuild the visible writes from scratch.\r\n            this.resetTree_();\r\n            return true;\r\n        }\r\n        else {\r\n            // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\r\n            if (writeToRemove.snap) {\r\n                this.visibleWrites_ = this.visibleWrites_.removeWrite(writeToRemove.path);\r\n            }\r\n            else {\r\n                var children = writeToRemove.children;\r\n                util.forEach(children, function (childName) {\r\n                    _this.visibleWrites_ = _this.visibleWrites_.removeWrite(writeToRemove.path.child(childName));\r\n                });\r\n            }\r\n            return true;\r\n        }\r\n    };\r\n    /**\r\n     * Return a complete snapshot for the given path if there's visible write data at that path, else null.\r\n     * No server data is considered.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.getCompleteWriteData = function (path) {\r\n        return this.visibleWrites_.getCompleteNode(path);\r\n    };\r\n    /**\r\n     * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\r\n     * writes), attempt to calculate a complete snapshot for the given path\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?Node} completeServerCache\r\n     * @param {Array.<number>=} writeIdsToExclude An optional set to be excluded\r\n     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcCompleteEventCache = function (treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n        if (!writeIdsToExclude && !includeHiddenWrites) {\r\n            var shadowingNode = this.visibleWrites_.getCompleteNode(treePath);\r\n            if (shadowingNode != null) {\r\n                return shadowingNode;\r\n            }\r\n            else {\r\n                var subMerge = this.visibleWrites_.childCompoundWrite(treePath);\r\n                if (subMerge.isEmpty()) {\r\n                    return completeServerCache;\r\n                }\r\n                else if (completeServerCache == null &&\r\n                    !subMerge.hasCompleteWrite(Path.Empty)) {\r\n                    // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\r\n                    return null;\r\n                }\r\n                else {\r\n                    var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                    return subMerge.apply(layeredCache);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n            if (!includeHiddenWrites && merge.isEmpty()) {\r\n                return completeServerCache;\r\n            }\r\n            else {\r\n                // If the server cache is null, and we don't have a complete cache, we need to return null\r\n                if (!includeHiddenWrites &&\r\n                    completeServerCache == null &&\r\n                    !merge.hasCompleteWrite(Path.Empty)) {\r\n                    return null;\r\n                }\r\n                else {\r\n                    var filter = function (write) {\r\n                        return ((write.visible || includeHiddenWrites) &&\r\n                            (!writeIdsToExclude ||\r\n                                !~writeIdsToExclude.indexOf(write.writeId)) &&\r\n                            (write.path.contains(treePath) || treePath.contains(write.path)));\r\n                    };\r\n                    var mergeAtPath = WriteTree.layerTree_(this.allWrites_, filter, treePath);\r\n                    var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                    return mergeAtPath.apply(layeredCache);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\r\n     * Used when creating new views, to pre-fill their complete event children snapshot.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?ChildrenNode} completeServerChildren\r\n     * @return {!ChildrenNode}\r\n     */\r\n    WriteTree.prototype.calcCompleteEventChildren = function (treePath, completeServerChildren) {\r\n        var completeChildren = ChildrenNode.EMPTY_NODE;\r\n        var topLevelSet = this.visibleWrites_.getCompleteNode(treePath);\r\n        if (topLevelSet) {\r\n            if (!topLevelSet.isLeafNode()) {\r\n                // we're shadowing everything. Return the children.\r\n                topLevelSet.forEachChild(PRIORITY_INDEX, function (childName, childSnap) {\r\n                    completeChildren = completeChildren.updateImmediateChild(childName, childSnap);\r\n                });\r\n            }\r\n            return completeChildren;\r\n        }\r\n        else if (completeServerChildren) {\r\n            // Layer any children we have on top of this\r\n            // We know we don't have a top-level set, so just enumerate existing children\r\n            var merge_1 = this.visibleWrites_.childCompoundWrite(treePath);\r\n            completeServerChildren.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n                var node = merge_1\r\n                    .childCompoundWrite(new Path(childName))\r\n                    .apply(childNode);\r\n                completeChildren = completeChildren.updateImmediateChild(childName, node);\r\n            });\r\n            // Add any complete children we have from the set\r\n            merge_1.getCompleteChildren().forEach(function (namedNode) {\r\n                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n            });\r\n            return completeChildren;\r\n        }\r\n        else {\r\n            // We don't have anything to layer on top of. Layer on any children we have\r\n            // Note that we can return an empty snap if we have a defined delete\r\n            var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n            merge.getCompleteChildren().forEach(function (namedNode) {\r\n                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n            });\r\n            return completeChildren;\r\n        }\r\n    };\r\n    /**\r\n     * Given that the underlying server data has updated, determine what, if anything, needs to be\r\n     * applied to the event cache.\r\n     *\r\n     * Possibilities:\r\n     *\r\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n     *\r\n     * 2. Some write is completely shadowing. No events to be raised\r\n     *\r\n     * 3. Is partially shadowed. Events\r\n     *\r\n     * Either existingEventSnap or existingServerSnap must exist\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {!Path} childPath\r\n     * @param {?Node} existingEventSnap\r\n     * @param {?Node} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcEventCacheAfterServerOverwrite = function (treePath, childPath, existingEventSnap, existingServerSnap) {\r\n        util.assert(existingEventSnap || existingServerSnap, 'Either existingEventSnap or existingServerSnap must exist');\r\n        var path = treePath.child(childPath);\r\n        if (this.visibleWrites_.hasCompleteWrite(path)) {\r\n            // At this point we can probably guarantee that we're in case 2, meaning no events\r\n            // May need to check visibility while doing the findRootMostValueAndPath call\r\n            return null;\r\n        }\r\n        else {\r\n            // No complete shadowing. We're either partially shadowing or not shadowing at all.\r\n            var childMerge = this.visibleWrites_.childCompoundWrite(path);\r\n            if (childMerge.isEmpty()) {\r\n                // We're not shadowing at all. Case 1\r\n                return existingServerSnap.getChild(childPath);\r\n            }\r\n            else {\r\n                // This could be more efficient if the serverNode + updates doesn't change the eventSnap\r\n                // However this is tricky to find out, since user updates don't necessary change the server\r\n                // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\r\n                // adds nodes, but doesn't change any existing writes. It is therefore not enough to\r\n                // only check if the updates change the serverNode.\r\n                // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\r\n                return childMerge.apply(existingServerSnap.getChild(childPath));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n     * complete child for this ChildKey.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {!string} childKey\r\n     * @param {!CacheNode} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcCompleteChild = function (treePath, childKey, existingServerSnap) {\r\n        var path = treePath.child(childKey);\r\n        var shadowingNode = this.visibleWrites_.getCompleteNode(path);\r\n        if (shadowingNode != null) {\r\n            return shadowingNode;\r\n        }\r\n        else {\r\n            if (existingServerSnap.isCompleteForChild(childKey)) {\r\n                var childMerge = this.visibleWrites_.childCompoundWrite(path);\r\n                return childMerge.apply(existingServerSnap.getNode().getImmediateChild(childKey));\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n     * a higher path, this will return the child of that write relative to the write and this path.\r\n     * Returns null if there is no write at this path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.shadowingWrite = function (path) {\r\n        return this.visibleWrites_.getCompleteNode(path);\r\n    };\r\n    /**\r\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n     * the window, but may now be in the window.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?Node} completeServerData\r\n     * @param {!NamedNode} startPost\r\n     * @param {!number} count\r\n     * @param {boolean} reverse\r\n     * @param {!Index} index\r\n     * @return {!Array.<!NamedNode>}\r\n     */\r\n    WriteTree.prototype.calcIndexedSlice = function (treePath, completeServerData, startPost, count, reverse, index) {\r\n        var toIterate;\r\n        var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n        var shadowingNode = merge.getCompleteNode(Path.Empty);\r\n        if (shadowingNode != null) {\r\n            toIterate = shadowingNode;\r\n        }\r\n        else if (completeServerData != null) {\r\n            toIterate = merge.apply(completeServerData);\r\n        }\r\n        else {\r\n            // no children to iterate on\r\n            return [];\r\n        }\r\n        toIterate = toIterate.withIndex(index);\r\n        if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\r\n            var nodes = [];\r\n            var cmp = index.getCompare();\r\n            var iter = reverse\r\n                ? toIterate.getReverseIteratorFrom(startPost, index)\r\n                : toIterate.getIteratorFrom(startPost, index);\r\n            var next = iter.getNext();\r\n            while (next && nodes.length < count) {\r\n                if (cmp(next, startPost) !== 0) {\r\n                    nodes.push(next);\r\n                }\r\n                next = iter.getNext();\r\n            }\r\n            return nodes;\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * @param {!WriteRecord} writeRecord\r\n     * @param {!Path} path\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    WriteTree.prototype.recordContainsPath_ = function (writeRecord, path) {\r\n        if (writeRecord.snap) {\r\n            return writeRecord.path.contains(path);\r\n        }\r\n        else {\r\n            // findKey can return undefined, so use !! to coerce to boolean\r\n            return !!util.findKey(writeRecord.children, function (childSnap, childName) {\r\n                return writeRecord.path.child(childName).contains(path);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\r\n     * @private\r\n     */\r\n    WriteTree.prototype.resetTree_ = function () {\r\n        this.visibleWrites_ = WriteTree.layerTree_(this.allWrites_, WriteTree.DefaultFilter_, Path.Empty);\r\n        if (this.allWrites_.length > 0) {\r\n            this.lastWriteId_ = this.allWrites_[this.allWrites_.length - 1].writeId;\r\n        }\r\n        else {\r\n            this.lastWriteId_ = -1;\r\n        }\r\n    };\r\n    /**\r\n     * The default filter used when constructing the tree. Keep everything that's visible.\r\n     *\r\n     * @param {!WriteRecord} write\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    WriteTree.DefaultFilter_ = function (write) {\r\n        return write.visible;\r\n    };\r\n    /**\r\n     * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\r\n     * event data at that path.\r\n     *\r\n     * @param {!Array.<!WriteRecord>} writes\r\n     * @param {!function(!WriteRecord):boolean} filter\r\n     * @param {!Path} treeRoot\r\n     * @return {!CompoundWrite}\r\n     * @private\r\n     */\r\n    WriteTree.layerTree_ = function (writes, filter, treeRoot) {\r\n        var compoundWrite = CompoundWrite.Empty;\r\n        for (var i = 0; i < writes.length; ++i) {\r\n            var write = writes[i];\r\n            // Theory, a later set will either:\r\n            // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\r\n            // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\r\n            if (filter(write)) {\r\n                var writePath = write.path;\r\n                var relativePath = void 0;\r\n                if (write.snap) {\r\n                    if (treeRoot.contains(writePath)) {\r\n                        relativePath = Path.relativePath(treeRoot, writePath);\r\n                        compoundWrite = compoundWrite.addWrite(relativePath, write.snap);\r\n                    }\r\n                    else if (writePath.contains(treeRoot)) {\r\n                        relativePath = Path.relativePath(writePath, treeRoot);\r\n                        compoundWrite = compoundWrite.addWrite(Path.Empty, write.snap.getChild(relativePath));\r\n                    }\r\n                }\r\n                else if (write.children) {\r\n                    if (treeRoot.contains(writePath)) {\r\n                        relativePath = Path.relativePath(treeRoot, writePath);\r\n                        compoundWrite = compoundWrite.addWrites(relativePath, write.children);\r\n                    }\r\n                    else if (writePath.contains(treeRoot)) {\r\n                        relativePath = Path.relativePath(writePath, treeRoot);\r\n                        if (relativePath.isEmpty()) {\r\n                            compoundWrite = compoundWrite.addWrites(Path.Empty, write.children);\r\n                        }\r\n                        else {\r\n                            var child = util.safeGet(write.children, relativePath.getFront());\r\n                            if (child) {\r\n                                // There exists a child in this node that matches the root path\r\n                                var deepNode = child.getChild(relativePath.popFront());\r\n                                compoundWrite = compoundWrite.addWrite(Path.Empty, deepNode);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    throw util.assertionError('WriteRecord should have .snap or .children');\r\n                }\r\n            }\r\n        }\r\n        return compoundWrite;\r\n    };\r\n    return WriteTree;\r\n}());\r\n/**\r\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\r\n * just proxy to the underlying WriteTree.\r\n *\r\n * @constructor\r\n */\r\nvar WriteTreeRef = /** @class */ (function () {\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!WriteTree} writeTree\r\n     */\r\n    function WriteTreeRef(path, writeTree) {\r\n        this.treePath_ = path;\r\n        this.writeTree_ = writeTree;\r\n    }\r\n    /**\r\n     * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\r\n     * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\r\n     * can lead to a more expensive calculation.\r\n     *\r\n     * @param {?Node} completeServerCache\r\n     * @param {Array.<number>=} writeIdsToExclude Optional writes to exclude.\r\n     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteEventCache = function (completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n        return this.writeTree_.calcCompleteEventCache(this.treePath_, completeServerCache, writeIdsToExclude, includeHiddenWrites);\r\n    };\r\n    /**\r\n     * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\r\n     * mix of the given server data and write data.\r\n     *\r\n     * @param {?ChildrenNode} completeServerChildren\r\n     * @return {!ChildrenNode}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteEventChildren = function (completeServerChildren) {\r\n        return this.writeTree_.calcCompleteEventChildren(this.treePath_, completeServerChildren);\r\n    };\r\n    /**\r\n     * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\r\n     * if anything, needs to be applied to the event cache.\r\n     *\r\n     * Possibilities:\r\n     *\r\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n     *\r\n     * 2. Some write is completely shadowing. No events to be raised\r\n     *\r\n     * 3. Is partially shadowed. Events should be raised\r\n     *\r\n     * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\r\n     *\r\n     * @param {!Path} path\r\n     * @param {?Node} existingEventSnap\r\n     * @param {?Node} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcEventCacheAfterServerOverwrite = function (path, existingEventSnap, existingServerSnap) {\r\n        return this.writeTree_.calcEventCacheAfterServerOverwrite(this.treePath_, path, existingEventSnap, existingServerSnap);\r\n    };\r\n    /**\r\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n     * a higher path, this will return the child of that write relative to the write and this path.\r\n     * Returns null if there is no write at this path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.shadowingWrite = function (path) {\r\n        return this.writeTree_.shadowingWrite(this.treePath_.child(path));\r\n    };\r\n    /**\r\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n     * the window, but may now be in the window\r\n     *\r\n     * @param {?Node} completeServerData\r\n     * @param {!NamedNode} startPost\r\n     * @param {!number} count\r\n     * @param {boolean} reverse\r\n     * @param {!Index} index\r\n     * @return {!Array.<!NamedNode>}\r\n     */\r\n    WriteTreeRef.prototype.calcIndexedSlice = function (completeServerData, startPost, count, reverse, index) {\r\n        return this.writeTree_.calcIndexedSlice(this.treePath_, completeServerData, startPost, count, reverse, index);\r\n    };\r\n    /**\r\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n     * complete child for this ChildKey.\r\n     *\r\n     * @param {!string} childKey\r\n     * @param {!CacheNode} existingServerCache\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteChild = function (childKey, existingServerCache) {\r\n        return this.writeTree_.calcCompleteChild(this.treePath_, childKey, existingServerCache);\r\n    };\r\n    /**\r\n     * Return a WriteTreeRef for a child.\r\n     *\r\n     * @param {string} childName\r\n     * @return {!WriteTreeRef}\r\n     */\r\n    WriteTreeRef.prototype.child = function (childName) {\r\n        return new WriteTreeRef(this.treePath_.child(childName), this.writeTree_);\r\n    };\r\n    return WriteTreeRef;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * SyncTree is the central class for managing event callback registration, data caching, views\r\n * (query processing), and event generation.  There are typically two SyncTree instances for\r\n * each Repo, one for the normal Firebase data, and one for the .info data.\r\n *\r\n * It has a number of responsibilities, including:\r\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\r\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\r\n *    (applyUserOverwrite(), applyUserMerge()).\r\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\r\n *    applyServerMerge()).\r\n *  - Generating user-facing events for server and user changes (all of the apply* methods\r\n *    return the set of events that need to be raised as a result).\r\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\r\n *    to the correct set of paths and queries to satisfy the current set of user event\r\n *    callbacks (listens are started/stopped using the provided listenProvider).\r\n *\r\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\r\n * events are returned to the caller rather than raised synchronously.\r\n *\r\n * @constructor\r\n */\r\nvar SyncTree = /** @class */ (function () {\r\n    /**\r\n     * @param {!ListenProvider} listenProvider_ Used by SyncTree to start / stop listening\r\n     *   to server data.\r\n     */\r\n    function SyncTree(listenProvider_) {\r\n        this.listenProvider_ = listenProvider_;\r\n        /**\r\n         * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\r\n         * @type {!ImmutableTree.<!SyncPoint>}\r\n         * @private\r\n         */\r\n        this.syncPointTree_ = ImmutableTree.Empty;\r\n        /**\r\n         * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\r\n         * @type {!WriteTree}\r\n         * @private\r\n         */\r\n        this.pendingWriteTree_ = new WriteTree();\r\n        this.tagToQueryMap_ = {};\r\n        this.queryToTagMap_ = {};\r\n    }\r\n    /**\r\n     * Apply the data changes for a user-generated set() or transaction() call.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} newData\r\n     * @param {number} writeId\r\n     * @param {boolean=} visible\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyUserOverwrite = function (path, newData, writeId, visible) {\r\n        // Record pending write.\r\n        this.pendingWriteTree_.addOverwrite(path, newData, writeId, visible);\r\n        if (!visible) {\r\n            return [];\r\n        }\r\n        else {\r\n            return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.User, path, newData));\r\n        }\r\n    };\r\n    /**\r\n     * Apply the data from a user-generated update() call\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @param {!number} writeId\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyUserMerge = function (path, changedChildren, writeId) {\r\n        // Record pending merge.\r\n        this.pendingWriteTree_.addMerge(path, changedChildren, writeId);\r\n        var changeTree = ImmutableTree.fromObject(changedChildren);\r\n        return this.applyOperationToSyncPoints_(new Merge(OperationSource.User, path, changeTree));\r\n    };\r\n    /**\r\n     * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\r\n     *\r\n     * @param {!number} writeId\r\n     * @param {boolean=} revert True if the given write failed and needs to be reverted\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.ackUserWrite = function (writeId, revert) {\r\n        if (revert === void 0) { revert = false; }\r\n        var write = this.pendingWriteTree_.getWrite(writeId);\r\n        var needToReevaluate = this.pendingWriteTree_.removeWrite(writeId);\r\n        if (!needToReevaluate) {\r\n            return [];\r\n        }\r\n        else {\r\n            var affectedTree_1 = ImmutableTree.Empty;\r\n            if (write.snap != null) {\r\n                // overwrite\r\n                affectedTree_1 = affectedTree_1.set(Path.Empty, true);\r\n            }\r\n            else {\r\n                util.forEach(write.children, function (pathString, node) {\r\n                    affectedTree_1 = affectedTree_1.set(new Path(pathString), node);\r\n                });\r\n            }\r\n            return this.applyOperationToSyncPoints_(new AckUserWrite(write.path, affectedTree_1, revert));\r\n        }\r\n    };\r\n    /**\r\n     * Apply new server data for the specified path..\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} newData\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyServerOverwrite = function (path, newData) {\r\n        return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.Server, path, newData));\r\n    };\r\n    /**\r\n     * Apply new server data to be merged in at the specified path.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyServerMerge = function (path, changedChildren) {\r\n        var changeTree = ImmutableTree.fromObject(changedChildren);\r\n        return this.applyOperationToSyncPoints_(new Merge(OperationSource.Server, path, changeTree));\r\n    };\r\n    /**\r\n     * Apply a listen complete for a query\r\n     *\r\n     * @param {!Path} path\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyListenComplete = function (path) {\r\n        return this.applyOperationToSyncPoints_(new ListenComplete(OperationSource.Server, path));\r\n    };\r\n    /**\r\n     * Apply new server data for the specified tagged query.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} snap\r\n     * @param {!number} tag\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedQueryOverwrite = function (path, snap, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey != null) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var op = new Overwrite(OperationSource.forServerTaggedQuery(queryId), relativePath, snap);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // Query must have been removed already\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Apply server data to be merged in for the specified tagged query.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @param {!number} tag\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedQueryMerge = function (path, changedChildren, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var changeTree = ImmutableTree.fromObject(changedChildren);\r\n            var op = new Merge(OperationSource.forServerTaggedQuery(queryId), relativePath, changeTree);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // We've already removed the query. No big deal, ignore the update\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Apply a listen complete for a tagged query\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!number} tag\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedListenComplete = function (path, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var op = new ListenComplete(OperationSource.forServerTaggedQuery(queryId), relativePath);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // We've already removed the query. No big deal, ignore the update\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Add an event callback for the specified query.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {!EventRegistration} eventRegistration\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.addEventRegistration = function (query, eventRegistration) {\r\n        var path = query.path;\r\n        var serverCache = null;\r\n        var foundAncestorDefaultView = false;\r\n        // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\r\n        // Consider optimizing this once there's a better understanding of what actual behavior will be.\r\n        this.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\r\n            var relativePath = Path.relativePath(pathToSyncPoint, path);\r\n            serverCache = serverCache || sp.getCompleteServerCache(relativePath);\r\n            foundAncestorDefaultView =\r\n                foundAncestorDefaultView || sp.hasCompleteView();\r\n        });\r\n        var syncPoint = this.syncPointTree_.get(path);\r\n        if (!syncPoint) {\r\n            syncPoint = new SyncPoint();\r\n            this.syncPointTree_ = this.syncPointTree_.set(path, syncPoint);\r\n        }\r\n        else {\r\n            foundAncestorDefaultView =\r\n                foundAncestorDefaultView || syncPoint.hasCompleteView();\r\n            serverCache = serverCache || syncPoint.getCompleteServerCache(Path.Empty);\r\n        }\r\n        var serverCacheComplete;\r\n        if (serverCache != null) {\r\n            serverCacheComplete = true;\r\n        }\r\n        else {\r\n            serverCacheComplete = false;\r\n            serverCache = ChildrenNode.EMPTY_NODE;\r\n            var subtree = this.syncPointTree_.subtree(path);\r\n            subtree.foreachChild(function (childName, childSyncPoint) {\r\n                var completeCache = childSyncPoint.getCompleteServerCache(Path.Empty);\r\n                if (completeCache) {\r\n                    serverCache = serverCache.updateImmediateChild(childName, completeCache);\r\n                }\r\n            });\r\n        }\r\n        var viewAlreadyExists = syncPoint.viewExistsForQuery(query);\r\n        if (!viewAlreadyExists && !query.getQueryParams().loadsAllData()) {\r\n            // We need to track a tag for this query\r\n            var queryKey = SyncTree.makeQueryKey_(query);\r\n            util.assert(!(queryKey in this.queryToTagMap_), 'View does not exist, but we have a tag');\r\n            var tag = SyncTree.getNextQueryTag_();\r\n            this.queryToTagMap_[queryKey] = tag;\r\n            // Coerce to string to avoid sparse arrays.\r\n            this.tagToQueryMap_['_' + tag] = queryKey;\r\n        }\r\n        var writesCache = this.pendingWriteTree_.childWrites(path);\r\n        var events = syncPoint.addEventRegistration(query, eventRegistration, writesCache, serverCache, serverCacheComplete);\r\n        if (!viewAlreadyExists && !foundAncestorDefaultView) {\r\n            var view /** @type !View */ = syncPoint.viewForQuery(query);\r\n            events = events.concat(this.setupListener_(query, view));\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     * Remove event callback(s).\r\n     *\r\n     * If query is the default query, we'll check all queries for the specified eventRegistration.\r\n     * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {?EventRegistration} eventRegistration If null, all callbacks are removed.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\r\n     */\r\n    SyncTree.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\r\n        var _this = this;\r\n        // Find the syncPoint first. Then deal with whether or not it has matching listeners\r\n        var path = query.path;\r\n        var maybeSyncPoint = this.syncPointTree_.get(path);\r\n        var cancelEvents = [];\r\n        // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\r\n        // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\r\n        // not loadsAllData().\r\n        if (maybeSyncPoint &&\r\n            (query.queryIdentifier() === 'default' ||\r\n                maybeSyncPoint.viewExistsForQuery(query))) {\r\n            /**\r\n             * @type {{removed: !Array.<!Query>, events: !Array.<!Event>}}\r\n             */\r\n            var removedAndEvents = maybeSyncPoint.removeEventRegistration(query, eventRegistration, cancelError);\r\n            if (maybeSyncPoint.isEmpty()) {\r\n                this.syncPointTree_ = this.syncPointTree_.remove(path);\r\n            }\r\n            var removed = removedAndEvents.removed;\r\n            cancelEvents = removedAndEvents.events;\r\n            // We may have just removed one of many listeners and can short-circuit this whole process\r\n            // We may also not have removed a default listener, in which case all of the descendant listeners should already be\r\n            // properly set up.\r\n            //\r\n            // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\r\n            // queryId === 'default'\r\n            var removingDefault = -1 !==\r\n                removed.findIndex(function (query) {\r\n                    return query.getQueryParams().loadsAllData();\r\n                });\r\n            var covered = this.syncPointTree_.findOnPath(path, function (relativePath, parentSyncPoint) {\r\n                return parentSyncPoint.hasCompleteView();\r\n            });\r\n            if (removingDefault && !covered) {\r\n                var subtree = this.syncPointTree_.subtree(path);\r\n                // There are potentially child listeners. Determine what if any listens we need to send before executing the\r\n                // removal\r\n                if (!subtree.isEmpty()) {\r\n                    // We need to fold over our subtree and collect the listeners to send\r\n                    var newViews = this.collectDistinctViewsForSubTree_(subtree);\r\n                    // Ok, we've collected all the listens we need. Set them up.\r\n                    for (var i = 0; i < newViews.length; ++i) {\r\n                        var view = newViews[i], newQuery = view.getQuery();\r\n                        var listener = this.createListenerForView_(view);\r\n                        this.listenProvider_.startListening(SyncTree.queryForListening_(newQuery), this.tagForQuery_(newQuery), listener.hashFn, listener.onComplete);\r\n                    }\r\n                }\r\n            }\r\n            // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\r\n            // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\r\n            // Also, note that if we have a cancelError, it's already been removed at the provider level.\r\n            if (!covered && removed.length > 0 && !cancelError) {\r\n                // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\r\n                // default. Otherwise, we need to iterate through and cancel each individual query\r\n                if (removingDefault) {\r\n                    // We don't tag default listeners\r\n                    var defaultTag = null;\r\n                    this.listenProvider_.stopListening(SyncTree.queryForListening_(query), defaultTag);\r\n                }\r\n                else {\r\n                    removed.forEach(function (queryToRemove) {\r\n                        var tagToRemove = _this.queryToTagMap_[SyncTree.makeQueryKey_(queryToRemove)];\r\n                        _this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToRemove), tagToRemove);\r\n                    });\r\n                }\r\n            }\r\n            // Now, clear all of the tags we're tracking for the removed listens\r\n            this.removeTags_(removed);\r\n        }\r\n        return cancelEvents;\r\n    };\r\n    /**\r\n     * Returns a complete cache, if we have one, of the data at a particular path. The location must have a listener above\r\n     * it, but as this is only used by transaction code, that should always be the case anyways.\r\n     *\r\n     * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\r\n     * @param {!Path} path The path to the data we want\r\n     * @param {Array.<number>=} writeIdsToExclude A specific set to be excluded\r\n     * @return {?Node}\r\n     */\r\n    SyncTree.prototype.calcCompleteEventCache = function (path, writeIdsToExclude) {\r\n        var includeHiddenSets = true;\r\n        var writeTree = this.pendingWriteTree_;\r\n        var serverCache = this.syncPointTree_.findOnPath(path, function (pathSoFar, syncPoint) {\r\n            var relativePath = Path.relativePath(pathSoFar, path);\r\n            var serverCache = syncPoint.getCompleteServerCache(relativePath);\r\n            if (serverCache) {\r\n                return serverCache;\r\n            }\r\n        });\r\n        return writeTree.calcCompleteEventCache(path, serverCache, writeIdsToExclude, includeHiddenSets);\r\n    };\r\n    /**\r\n     * This collapses multiple unfiltered views into a single view, since we only need a single\r\n     * listener for them.\r\n     *\r\n     * @param {!ImmutableTree.<!SyncPoint>} subtree\r\n     * @return {!Array.<!View>}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.collectDistinctViewsForSubTree_ = function (subtree) {\r\n        return subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n            if (maybeChildSyncPoint && maybeChildSyncPoint.hasCompleteView()) {\r\n                var completeView = maybeChildSyncPoint.getCompleteView();\r\n                return [completeView];\r\n            }\r\n            else {\r\n                // No complete view here, flatten any deeper listens into an array\r\n                var views_1 = [];\r\n                if (maybeChildSyncPoint) {\r\n                    views_1 = maybeChildSyncPoint.getQueryViews();\r\n                }\r\n                util.forEach(childMap, function (key, childViews) {\r\n                    views_1 = views_1.concat(childViews);\r\n                });\r\n                return views_1;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Array.<!Query>} queries\r\n     * @private\r\n     */\r\n    SyncTree.prototype.removeTags_ = function (queries) {\r\n        for (var j = 0; j < queries.length; ++j) {\r\n            var removedQuery = queries[j];\r\n            if (!removedQuery.getQueryParams().loadsAllData()) {\r\n                // We should have a tag for this\r\n                var removedQueryKey = SyncTree.makeQueryKey_(removedQuery);\r\n                var removedQueryTag = this.queryToTagMap_[removedQueryKey];\r\n                delete this.queryToTagMap_[removedQueryKey];\r\n                delete this.tagToQueryMap_['_' + removedQueryTag];\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Normalizes a query to a query we send the server for listening\r\n     * @param {!Query} query\r\n     * @return {!Query} The normalized query\r\n     * @private\r\n     */\r\n    SyncTree.queryForListening_ = function (query) {\r\n        if (query.getQueryParams().loadsAllData() &&\r\n            !query.getQueryParams().isDefault()) {\r\n            // We treat queries that load all data as default queries\r\n            // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\r\n            // from Query\r\n            return /** @type {!Query} */ query.getRef();\r\n        }\r\n        else {\r\n            return query;\r\n        }\r\n    };\r\n    /**\r\n     * For a given new listen, manage the de-duplication of outstanding subscriptions.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {!View} view\r\n     * @return {!Array.<!Event>} This method can return events to support synchronous data sources\r\n     * @private\r\n     */\r\n    SyncTree.prototype.setupListener_ = function (query, view) {\r\n        var path = query.path;\r\n        var tag = this.tagForQuery_(query);\r\n        var listener = this.createListenerForView_(view);\r\n        var events = this.listenProvider_.startListening(SyncTree.queryForListening_(query), tag, listener.hashFn, listener.onComplete);\r\n        var subtree = this.syncPointTree_.subtree(path);\r\n        // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\r\n        // may need to shadow other listens as well.\r\n        if (tag) {\r\n            util.assert(!subtree.value.hasCompleteView(), \"If we're adding a query, it shouldn't be shadowed\");\r\n        }\r\n        else {\r\n            // Shadow everything at or below this location, this is a default listener.\r\n            var queriesToStop = subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n                if (!relativePath.isEmpty() &&\r\n                    maybeChildSyncPoint &&\r\n                    maybeChildSyncPoint.hasCompleteView()) {\r\n                    return [maybeChildSyncPoint.getCompleteView().getQuery()];\r\n                }\r\n                else {\r\n                    // No default listener here, flatten any deeper queries into an array\r\n                    var queries_1 = [];\r\n                    if (maybeChildSyncPoint) {\r\n                        queries_1 = queries_1.concat(maybeChildSyncPoint.getQueryViews().map(function (view) { return view.getQuery(); }));\r\n                    }\r\n                    util.forEach(childMap, function (key, childQueries) {\r\n                        queries_1 = queries_1.concat(childQueries);\r\n                    });\r\n                    return queries_1;\r\n                }\r\n            });\r\n            for (var i = 0; i < queriesToStop.length; ++i) {\r\n                var queryToStop = queriesToStop[i];\r\n                this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToStop), this.tagForQuery_(queryToStop));\r\n            }\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     *\r\n     * @param {!View} view\r\n     * @return {{hashFn: function(), onComplete: function(!string, *)}}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.createListenerForView_ = function (view) {\r\n        var _this = this;\r\n        var query = view.getQuery();\r\n        var tag = this.tagForQuery_(query);\r\n        return {\r\n            hashFn: function () {\r\n                var cache = view.getServerCache() || ChildrenNode.EMPTY_NODE;\r\n                return cache.hash();\r\n            },\r\n            onComplete: function (status) {\r\n                if (status === 'ok') {\r\n                    if (tag) {\r\n                        return _this.applyTaggedListenComplete(query.path, tag);\r\n                    }\r\n                    else {\r\n                        return _this.applyListenComplete(query.path);\r\n                    }\r\n                }\r\n                else {\r\n                    // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\r\n                    // Note that this may need to be scoped to just this listener if we change permissions on filtered children\r\n                    var error = errorForServerCode(status, query);\r\n                    return _this.removeEventRegistration(query, \r\n                    /*eventRegistration*/ null, error);\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\r\n     * @private\r\n     * @param {!Query} query\r\n     * @return {string}\r\n     */\r\n    SyncTree.makeQueryKey_ = function (query) {\r\n        return query.path.toString() + '$' + query.queryIdentifier();\r\n    };\r\n    /**\r\n     * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\r\n     * @private\r\n     * @param {!string} queryKey\r\n     * @return {{queryId: !string, path: !Path}}\r\n     */\r\n    SyncTree.parseQueryKey_ = function (queryKey) {\r\n        var splitIndex = queryKey.indexOf('$');\r\n        util.assert(splitIndex !== -1 && splitIndex < queryKey.length - 1, 'Bad queryKey.');\r\n        return {\r\n            queryId: queryKey.substr(splitIndex + 1),\r\n            path: new Path(queryKey.substr(0, splitIndex))\r\n        };\r\n    };\r\n    /**\r\n     * Return the query associated with the given tag, if we have one\r\n     * @param {!number} tag\r\n     * @return {?string}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.queryKeyForTag_ = function (tag) {\r\n        return this.tagToQueryMap_['_' + tag];\r\n    };\r\n    /**\r\n     * Return the tag associated with the given query.\r\n     * @param {!Query} query\r\n     * @return {?number}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.tagForQuery_ = function (query) {\r\n        var queryKey = SyncTree.makeQueryKey_(query);\r\n        return util.safeGet(this.queryToTagMap_, queryKey);\r\n    };\r\n    /**\r\n     * Static accessor for query tags.\r\n     * @return {number}\r\n     * @private\r\n     */\r\n    SyncTree.getNextQueryTag_ = function () {\r\n        return SyncTree.nextQueryTag_++;\r\n    };\r\n    /**\r\n     * A helper method to apply tagged operations\r\n     *\r\n     * @param {!Path} queryPath\r\n     * @param {!Operation} operation\r\n     * @return {!Array.<!Event>}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.applyTaggedOperation_ = function (queryPath, operation) {\r\n        var syncPoint = this.syncPointTree_.get(queryPath);\r\n        util.assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\r\n        var writesCache = this.pendingWriteTree_.childWrites(queryPath);\r\n        return syncPoint.applyOperation(operation, writesCache, \r\n        /*serverCache=*/ null);\r\n    };\r\n    /**\r\n     * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\r\n     *\r\n     * NOTES:\r\n     * - Descendant SyncPoints will be visited first (since we raise events depth-first).\r\n  \n     * - We call applyOperation() on each SyncPoint passing three things:\r\n     *   1. A version of the Operation that has been made relative to the SyncPoint location.\r\n     *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\r\n     *   3. A snapshot Node with cached server data, if we have it.\r\n  \n     * - We concatenate all of the events returned by each SyncPoint and return the result.\r\n     *\r\n     * @param {!Operation} operation\r\n     * @return {!Array.<!Event>}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.applyOperationToSyncPoints_ = function (operation) {\r\n        return this.applyOperationHelper_(operation, this.syncPointTree_, \r\n        /*serverCache=*/ null, this.pendingWriteTree_.childWrites(Path.Empty));\r\n    };\r\n    /**\r\n     * Recursive helper for applyOperationToSyncPoints_\r\n     *\r\n     * @private\r\n     * @param {!Operation} operation\r\n     * @param {ImmutableTree.<!SyncPoint>} syncPointTree\r\n     * @param {?Node} serverCache\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    SyncTree.prototype.applyOperationHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\r\n        if (operation.path.isEmpty()) {\r\n            return this.applyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache);\r\n        }\r\n        else {\r\n            var syncPoint = syncPointTree.get(Path.Empty);\r\n            // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n            if (serverCache == null && syncPoint != null) {\r\n                serverCache = syncPoint.getCompleteServerCache(Path.Empty);\r\n            }\r\n            var events = [];\r\n            var childName = operation.path.getFront();\r\n            var childOperation = operation.operationForChild(childName);\r\n            var childTree = syncPointTree.children.get(childName);\r\n            if (childTree && childOperation) {\r\n                var childServerCache = serverCache\r\n                    ? serverCache.getImmediateChild(childName)\r\n                    : null;\r\n                var childWritesCache = writesCache.child(childName);\r\n                events = events.concat(this.applyOperationHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n            }\r\n            if (syncPoint) {\r\n                events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\r\n            }\r\n            return events;\r\n        }\r\n    };\r\n    /**\r\n     * Recursive helper for applyOperationToSyncPoints_\r\n     *\r\n     * @private\r\n     * @param {!Operation} operation\r\n     * @param {ImmutableTree.<!SyncPoint>} syncPointTree\r\n     * @param {?Node} serverCache\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    SyncTree.prototype.applyOperationDescendantsHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\r\n        var _this = this;\r\n        var syncPoint = syncPointTree.get(Path.Empty);\r\n        // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n        if (serverCache == null && syncPoint != null) {\r\n            serverCache = syncPoint.getCompleteServerCache(Path.Empty);\r\n        }\r\n        var events = [];\r\n        syncPointTree.children.inorderTraversal(function (childName, childTree) {\r\n            var childServerCache = serverCache\r\n                ? serverCache.getImmediateChild(childName)\r\n                : null;\r\n            var childWritesCache = writesCache.child(childName);\r\n            var childOperation = operation.operationForChild(childName);\r\n            if (childOperation) {\r\n                events = events.concat(_this.applyOperationDescendantsHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n            }\r\n        });\r\n        if (syncPoint) {\r\n            events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     * Static tracker for next query tag.\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    SyncTree.nextQueryTag_ = 1;\r\n    return SyncTree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\r\n *\r\n * @constructor\r\n */\r\nvar SnapshotHolder = /** @class */ (function () {\r\n    function SnapshotHolder() {\r\n        this.rootNode_ = ChildrenNode.EMPTY_NODE;\r\n    }\r\n    SnapshotHolder.prototype.getNode = function (path) {\r\n        return this.rootNode_.getChild(path);\r\n    };\r\n    SnapshotHolder.prototype.updateSnapshot = function (path, newSnapshotNode) {\r\n        this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\r\n    };\r\n    return SnapshotHolder;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Abstraction around FirebaseApp's token fetching capabilities.\r\n */\r\nvar AuthTokenProvider = /** @class */ (function () {\r\n    /**\r\n     * @param {!FirebaseApp} app_\r\n     */\r\n    function AuthTokenProvider(app_) {\r\n        this.app_ = app_;\r\n    }\r\n    /**\r\n     * @param {boolean} forceRefresh\r\n     * @return {!Promise<FirebaseAuthTokenData>}\r\n     */\r\n    AuthTokenProvider.prototype.getToken = function (forceRefresh) {\r\n        return this.app_['INTERNAL']['getToken'](forceRefresh).then(null, \r\n        // .catch\r\n        function (error) {\r\n            // TODO: Need to figure out all the cases this is raised and whether\r\n            // this makes sense.\r\n            if (error && error.code === 'auth/token-not-initialized') {\r\n                log('Got auth/token-not-initialized error.  Treating as null token.');\r\n                return null;\r\n            }\r\n            else {\r\n                return Promise.reject(error);\r\n            }\r\n        });\r\n    };\r\n    AuthTokenProvider.prototype.addTokenChangeListener = function (listener) {\r\n        // TODO: We might want to wrap the listener and call it with no args to\r\n        // avoid a leaky abstraction, but that makes removing the listener harder.\r\n        this.app_['INTERNAL']['addAuthTokenListener'](listener);\r\n    };\r\n    AuthTokenProvider.prototype.removeTokenChangeListener = function (listener) {\r\n        this.app_['INTERNAL']['removeAuthTokenListener'](listener);\r\n    };\r\n    AuthTokenProvider.prototype.notifyForInvalidToken = function () {\r\n        var errorMessage = 'Provided authentication credentials for the app named \"' +\r\n            this.app_.name +\r\n            '\" are invalid. This usually indicates your app was not ' +\r\n            'initialized correctly. ';\r\n        if ('credential' in this.app_.options) {\r\n            errorMessage +=\r\n                'Make sure the \"credential\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else if ('serviceAccount' in this.app_.options) {\r\n            errorMessage +=\r\n                'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else {\r\n            errorMessage +=\r\n                'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\r\n                    'initializeApp() match the values provided for your app at ' +\r\n                    'https://console.firebase.google.com/.';\r\n        }\r\n        warn(errorMessage);\r\n    };\r\n    return AuthTokenProvider;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Tracks a collection of stats.\r\n *\r\n * @constructor\r\n */\r\nvar StatsCollection = /** @class */ (function () {\r\n    function StatsCollection() {\r\n        this.counters_ = {};\r\n    }\r\n    StatsCollection.prototype.incrementCounter = function (name, amount) {\r\n        if (amount === void 0) { amount = 1; }\r\n        if (!util.contains(this.counters_, name))\r\n            this.counters_[name] = 0;\r\n        this.counters_[name] += amount;\r\n    };\r\n    StatsCollection.prototype.get = function () {\r\n        return util.deepCopy(this.counters_);\r\n    };\r\n    return StatsCollection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar StatsManager = /** @class */ (function () {\r\n    function StatsManager() {\r\n    }\r\n    StatsManager.getCollection = function (repoInfo) {\r\n        var hashString = repoInfo.toString();\r\n        if (!this.collections_[hashString]) {\r\n            this.collections_[hashString] = new StatsCollection();\r\n        }\r\n        return this.collections_[hashString];\r\n    };\r\n    StatsManager.getOrCreateReporter = function (repoInfo, creatorFunction) {\r\n        var hashString = repoInfo.toString();\r\n        if (!this.reporters_[hashString]) {\r\n            this.reporters_[hashString] = creatorFunction();\r\n        }\r\n        return this.reporters_[hashString];\r\n    };\r\n    StatsManager.collections_ = {};\r\n    StatsManager.reporters_ = {};\r\n    return StatsManager;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the delta from the previous call to get stats.\r\n *\r\n * @param collection_ The collection to \"listen\" to.\r\n * @constructor\r\n */\r\nvar StatsListener = /** @class */ (function () {\r\n    function StatsListener(collection_) {\r\n        this.collection_ = collection_;\r\n        this.last_ = null;\r\n    }\r\n    StatsListener.prototype.get = function () {\r\n        var newStats = this.collection_.get();\r\n        var delta = util.clone(newStats);\r\n        if (this.last_) {\r\n            util.forEach(this.last_, function (stat, value) {\r\n                delta[stat] = delta[stat] - value;\r\n            });\r\n        }\r\n        this.last_ = newStats;\r\n        return delta;\r\n    };\r\n    return StatsListener;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\r\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\r\n// seconds to try to ensure the Firebase connection is established / settled.\r\nvar FIRST_STATS_MIN_TIME = 10 * 1000;\r\nvar FIRST_STATS_MAX_TIME = 30 * 1000;\r\n// We'll continue to report stats on average every 5 minutes.\r\nvar REPORT_STATS_INTERVAL = 5 * 60 * 1000;\r\n/**\r\n * @constructor\r\n */\r\nvar StatsReporter = /** @class */ (function () {\r\n    /**\r\n     * @param collection\r\n     * @param server_\r\n     */\r\n    function StatsReporter(collection, server_) {\r\n        this.server_ = server_;\r\n        this.statsToReport_ = {};\r\n        this.statsListener_ = new StatsListener(collection);\r\n        var timeout = FIRST_STATS_MIN_TIME +\r\n            (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\r\n    }\r\n    StatsReporter.prototype.includeStat = function (stat) {\r\n        this.statsToReport_[stat] = true;\r\n    };\r\n    StatsReporter.prototype.reportStats_ = function () {\r\n        var _this = this;\r\n        var stats = this.statsListener_.get();\r\n        var reportedStats = {};\r\n        var haveStatsToReport = false;\r\n        util.forEach(stats, function (stat, value) {\r\n            if (value > 0 && util.contains(_this.statsToReport_, stat)) {\r\n                reportedStats[stat] = value;\r\n                haveStatsToReport = true;\r\n            }\r\n        });\r\n        if (haveStatsToReport) {\r\n            this.server_.reportStats(reportedStats);\r\n        }\r\n        // queue our next run.\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL));\r\n    };\r\n    return StatsReporter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The event queue serves a few purposes:\r\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\r\n *    events being queued.\r\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\r\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\r\n *    left off, ensuring that the events are still raised synchronously and in order.\r\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\r\n *    events are raised synchronously.\r\n *\r\n * NOTE: This can all go away if/when we move to async events.\r\n *\r\n * @constructor\r\n */\r\nvar EventQueue = /** @class */ (function () {\r\n    function EventQueue() {\r\n        /**\r\n         * @private\r\n         * @type {!Array.<EventList>}\r\n         */\r\n        this.eventLists_ = [];\r\n        /**\r\n         * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\r\n         * @private\r\n         * @type {!number}\r\n         */\r\n        this.recursionDepth_ = 0;\r\n    }\r\n    /**\r\n     * @param {!Array.<Event>} eventDataList The new events to queue.\r\n     */\r\n    EventQueue.prototype.queueEvents = function (eventDataList) {\r\n        // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\r\n        var currList = null;\r\n        for (var i = 0; i < eventDataList.length; i++) {\r\n            var eventData = eventDataList[i];\r\n            var eventPath = eventData.getPath();\r\n            if (currList !== null && !eventPath.equals(currList.getPath())) {\r\n                this.eventLists_.push(currList);\r\n                currList = null;\r\n            }\r\n            if (currList === null) {\r\n                currList = new EventList(eventPath);\r\n            }\r\n            currList.add(eventData);\r\n        }\r\n        if (currList) {\r\n            this.eventLists_.push(currList);\r\n        }\r\n    };\r\n    /**\r\n     * Queues the specified events and synchronously raises all events (including previously queued ones)\r\n     * for the specified path.\r\n     *\r\n     * It is assumed that the new events are all for the specified path.\r\n     *\r\n     * @param {!Path} path The path to raise events for.\r\n     * @param {!Array.<Event>} eventDataList The new events to raise.\r\n     */\r\n    EventQueue.prototype.raiseEventsAtPath = function (path, eventDataList) {\r\n        this.queueEvents(eventDataList);\r\n        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\r\n            return eventPath.equals(path);\r\n        });\r\n    };\r\n    /**\r\n     * Queues the specified events and synchronously raises all events (including previously queued ones) for\r\n     * locations related to the specified change path (i.e. all ancestors and descendants).\r\n     *\r\n     * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\r\n     *\r\n     * @param {!Path} changedPath The path to raise events for.\r\n     * @param {!Array.<!Event>} eventDataList The events to raise\r\n     */\r\n    EventQueue.prototype.raiseEventsForChangedPath = function (changedPath, eventDataList) {\r\n        this.queueEvents(eventDataList);\r\n        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\r\n            return eventPath.contains(changedPath) || changedPath.contains(eventPath);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!function(!Path):boolean} predicate\r\n     * @private\r\n     */\r\n    EventQueue.prototype.raiseQueuedEventsMatchingPredicate_ = function (predicate) {\r\n        this.recursionDepth_++;\r\n        var sentAll = true;\r\n        for (var i = 0; i < this.eventLists_.length; i++) {\r\n            var eventList = this.eventLists_[i];\r\n            if (eventList) {\r\n                var eventPath = eventList.getPath();\r\n                if (predicate(eventPath)) {\r\n                    this.eventLists_[i].raise();\r\n                    this.eventLists_[i] = null;\r\n                }\r\n                else {\r\n                    sentAll = false;\r\n                }\r\n            }\r\n        }\r\n        if (sentAll) {\r\n            this.eventLists_ = [];\r\n        }\r\n        this.recursionDepth_--;\r\n    };\r\n    return EventQueue;\r\n}());\r\n/**\r\n * @param {!Path} path\r\n * @constructor\r\n */\r\nvar EventList = /** @class */ (function () {\r\n    function EventList(path_) {\r\n        this.path_ = path_;\r\n        /**\r\n         * @type {!Array.<Event>}\r\n         * @private\r\n         */\r\n        this.events_ = [];\r\n    }\r\n    /**\r\n     * @param {!Event} eventData\r\n     */\r\n    EventList.prototype.add = function (eventData) {\r\n        this.events_.push(eventData);\r\n    };\r\n    /**\r\n     * Iterates through the list and raises each event\r\n     */\r\n    EventList.prototype.raise = function () {\r\n        for (var i = 0; i < this.events_.length; i++) {\r\n            var eventData = this.events_[i];\r\n            if (eventData !== null) {\r\n                this.events_[i] = null;\r\n                var eventFn = eventData.getEventRunner();\r\n                if (logger) {\r\n                    log('event: ' + eventData.toString());\r\n                }\r\n                exceptionGuard(eventFn);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @return {!Path}\r\n     */\r\n    EventList.prototype.getPath = function () {\r\n        return this.path_;\r\n    };\r\n    return EventList;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Base class to be used if you want to emit events. Call the constructor with\r\n * the set of allowed event names.\r\n */\r\nvar EventEmitter = /** @class */ (function () {\r\n    /**\r\n     * @param {!Array.<string>} allowedEvents_\r\n     */\r\n    function EventEmitter(allowedEvents_) {\r\n        this.allowedEvents_ = allowedEvents_;\r\n        this.listeners_ = {};\r\n        util.assert(Array.isArray(allowedEvents_) && allowedEvents_.length > 0, 'Requires a non-empty array');\r\n    }\r\n    /**\r\n     * To be called by derived classes to trigger events.\r\n     * @param {!string} eventType\r\n     * @param {...*} var_args\r\n     */\r\n    EventEmitter.prototype.trigger = function (eventType) {\r\n        var var_args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            var_args[_i - 1] = arguments[_i];\r\n        }\r\n        if (Array.isArray(this.listeners_[eventType])) {\r\n            // Clone the list, since callbacks could add/remove listeners.\r\n            var listeners = this.listeners_[eventType].slice();\r\n            for (var i = 0; i < listeners.length; i++) {\r\n                listeners[i].callback.apply(listeners[i].context, var_args);\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.on = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        this.listeners_[eventType] = this.listeners_[eventType] || [];\r\n        this.listeners_[eventType].push({ callback: callback, context: context });\r\n        var eventData = this.getInitialEvent(eventType);\r\n        if (eventData) {\r\n            callback.apply(context, eventData);\r\n        }\r\n    };\r\n    EventEmitter.prototype.off = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        var listeners = this.listeners_[eventType] || [];\r\n        for (var i = 0; i < listeners.length; i++) {\r\n            if (listeners[i].callback === callback &&\r\n                (!context || context === listeners[i].context)) {\r\n                listeners.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.validateEventType_ = function (eventType) {\r\n        util.assert(this.allowedEvents_.find(function (et) {\r\n            return et === eventType;\r\n        }), 'Unknown event: ' + eventType);\r\n    };\r\n    return EventEmitter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @extends {EventEmitter}\r\n */\r\nvar VisibilityMonitor = /** @class */ (function (_super) {\r\n    tslib_1.__extends(VisibilityMonitor, _super);\r\n    function VisibilityMonitor() {\r\n        var _this = _super.call(this, ['visible']) || this;\r\n        var hidden;\r\n        var visibilityChange;\r\n        if (typeof document !== 'undefined' &&\r\n            typeof document.addEventListener !== 'undefined') {\r\n            if (typeof document['hidden'] !== 'undefined') {\r\n                // Opera 12.10 and Firefox 18 and later support\r\n                visibilityChange = 'visibilitychange';\r\n                hidden = 'hidden';\r\n            }\r\n            else if (typeof document['mozHidden'] !== 'undefined') {\r\n                visibilityChange = 'mozvisibilitychange';\r\n                hidden = 'mozHidden';\r\n            }\r\n            else if (typeof document['msHidden'] !== 'undefined') {\r\n                visibilityChange = 'msvisibilitychange';\r\n                hidden = 'msHidden';\r\n            }\r\n            else if (typeof document['webkitHidden'] !== 'undefined') {\r\n                visibilityChange = 'webkitvisibilitychange';\r\n                hidden = 'webkitHidden';\r\n            }\r\n        }\r\n        // Initially, we always assume we are visible. This ensures that in browsers\r\n        // without page visibility support or in cases where we are never visible\r\n        // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\r\n        // reconnects\r\n        _this.visible_ = true;\r\n        if (visibilityChange) {\r\n            document.addEventListener(visibilityChange, function () {\r\n                var visible = !document[hidden];\r\n                if (visible !== _this.visible_) {\r\n                    _this.visible_ = visible;\r\n                    _this.trigger('visible', visible);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    VisibilityMonitor.getInstance = function () {\r\n        return new VisibilityMonitor();\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @return {Array.<boolean>}\r\n     */\r\n    VisibilityMonitor.prototype.getInitialEvent = function (eventType) {\r\n        util.assert(eventType === 'visible', 'Unknown event type: ' + eventType);\r\n        return [this.visible_];\r\n    };\r\n    return VisibilityMonitor;\r\n}(EventEmitter));\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Monitors online state (as reported by window.online/offline events).\r\n *\r\n * The expectation is that this could have many false positives (thinks we are online\r\n * when we're not), but no false negatives.  So we can safely use it to determine when\r\n * we definitely cannot reach the internet.\r\n *\r\n * @extends {EventEmitter}\r\n */\r\nvar OnlineMonitor = /** @class */ (function (_super) {\r\n    tslib_1.__extends(OnlineMonitor, _super);\r\n    function OnlineMonitor() {\r\n        var _this = _super.call(this, ['online']) || this;\r\n        _this.online_ = true;\r\n        // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\r\n        // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\r\n        // It would seem that the 'online' event does not always fire consistently. So we disable it\r\n        // for Cordova.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window.addEventListener !== 'undefined' &&\r\n            !util.isMobileCordova()) {\r\n            window.addEventListener('online', function () {\r\n                if (!_this.online_) {\r\n                    _this.online_ = true;\r\n                    _this.trigger('online', true);\r\n                }\r\n            }, false);\r\n            window.addEventListener('offline', function () {\r\n                if (_this.online_) {\r\n                    _this.online_ = false;\r\n                    _this.trigger('online', false);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    OnlineMonitor.getInstance = function () {\r\n        return new OnlineMonitor();\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @return {Array.<boolean>}\r\n     */\r\n    OnlineMonitor.prototype.getInitialEvent = function (eventType) {\r\n        util.assert(eventType === 'online', 'Unknown event type: ' + eventType);\r\n        return [this.online_];\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    OnlineMonitor.prototype.currentlyOnline = function () {\r\n        return this.online_;\r\n    };\r\n    return OnlineMonitor;\r\n}(EventEmitter));\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class ensures the packets from the server arrive in order\r\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\r\n * @constructor\r\n */\r\nvar PacketReceiver = /** @class */ (function () {\r\n    /**\r\n     * @param onMessage_\r\n     */\r\n    function PacketReceiver(onMessage_) {\r\n        this.onMessage_ = onMessage_;\r\n        this.pendingResponses = [];\r\n        this.currentResponseNum = 0;\r\n        this.closeAfterResponse = -1;\r\n        this.onClose = null;\r\n    }\r\n    PacketReceiver.prototype.closeAfter = function (responseNum, callback) {\r\n        this.closeAfterResponse = responseNum;\r\n        this.onClose = callback;\r\n        if (this.closeAfterResponse < this.currentResponseNum) {\r\n            this.onClose();\r\n            this.onClose = null;\r\n        }\r\n    };\r\n    /**\r\n     * Each message from the server comes with a response number, and an array of data. The responseNumber\r\n     * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\r\n     * browsers will respond in the same order as the requests we sent\r\n     * @param {number} requestNum\r\n     * @param {Array} data\r\n     */\r\n    PacketReceiver.prototype.handleResponse = function (requestNum, data) {\r\n        var _this = this;\r\n        this.pendingResponses[requestNum] = data;\r\n        var _loop_1 = function () {\r\n            var toProcess = this_1.pendingResponses[this_1.currentResponseNum];\r\n            delete this_1.pendingResponses[this_1.currentResponseNum];\r\n            var _loop_2 = function (i) {\r\n                if (toProcess[i]) {\r\n                    exceptionGuard(function () {\r\n                        _this.onMessage_(toProcess[i]);\r\n                    });\r\n                }\r\n            };\r\n            for (var i = 0; i < toProcess.length; ++i) {\r\n                _loop_2(i);\r\n            }\r\n            if (this_1.currentResponseNum === this_1.closeAfterResponse) {\r\n                if (this_1.onClose) {\r\n                    this_1.onClose();\r\n                    this_1.onClose = null;\r\n                }\r\n                return \"break\";\r\n            }\r\n            this_1.currentResponseNum++;\r\n        };\r\n        var this_1 = this;\r\n        while (this.pendingResponses[this.currentResponseNum]) {\r\n            var state_1 = _loop_1();\r\n            if (state_1 === \"break\")\r\n                break;\r\n        }\r\n    };\r\n    return PacketReceiver;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// URL query parameters associated with longpolling\r\nvar FIREBASE_LONGPOLL_START_PARAM = 'start';\r\nvar FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\r\nvar FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\r\nvar FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\r\nvar FIREBASE_LONGPOLL_ID_PARAM = 'id';\r\nvar FIREBASE_LONGPOLL_PW_PARAM = 'pw';\r\nvar FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\r\nvar FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\r\nvar FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\r\nvar FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\r\nvar FIREBASE_LONGPOLL_DATA_PARAM = 'd';\r\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM = 'disconn';\r\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\r\n//Data size constants.\r\n//TODO: Perf: the maximum length actually differs from browser to browser.\r\n// We should check what browser we're on and set accordingly.\r\nvar MAX_URL_DATA_SIZE = 1870;\r\nvar SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\r\nvar MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\r\n/**\r\n * Keepalive period\r\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\r\n * length of 30 seconds that we can't exceed.\r\n * @const\r\n * @type {number}\r\n */\r\nvar KEEPALIVE_REQUEST_INTERVAL = 25000;\r\n/**\r\n * How long to wait before aborting a long-polling connection attempt.\r\n * @const\r\n * @type {number}\r\n */\r\nvar LP_CONNECT_TIMEOUT = 30000;\r\n/**\r\n * This class manages a single long-polling connection.\r\n *\r\n * @constructor\r\n * @implements {Transport}\r\n */\r\nvar BrowserPollConnection = /** @class */ (function () {\r\n    /**\r\n     * @param {string} connId An identifier for this connection, used for logging\r\n     * @param {RepoInfo} repoInfo The info for the endpoint to send data to.\r\n     * @param {string=} transportSessionId Optional transportSessionid if we are reconnecting for an existing\r\n     *                                         transport session\r\n     * @param {string=}  lastSessionId Optional lastSessionId if the PersistentConnection has already created a\r\n     *                                     connection previously\r\n     */\r\n    function BrowserPollConnection(connId, repoInfo, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.repoInfo = repoInfo;\r\n        this.transportSessionId = transportSessionId;\r\n        this.lastSessionId = lastSessionId;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.everConnected_ = false;\r\n        this.log_ = logWrapper(connId);\r\n        this.stats_ = StatsManager.getCollection(repoInfo);\r\n        this.urlFn = function (params) {\r\n            return repoInfo.connectionURL(LONG_POLLING, params);\r\n        };\r\n    }\r\n    /**\r\n     *\r\n     * @param {function(Object)} onMessage Callback when messages arrive\r\n     * @param {function()} onDisconnect Callback with connection lost.\r\n     */\r\n    BrowserPollConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.curSegmentNum = 0;\r\n        this.onDisconnect_ = onDisconnect;\r\n        this.myPacketOrderer = new PacketReceiver(onMessage);\r\n        this.isClosed_ = false;\r\n        this.connectTimeoutTimer_ = setTimeout(function () {\r\n            _this.log_('Timed out trying to connect.');\r\n            // Make sure we clear the host cache\r\n            _this.onClosed_();\r\n            _this.connectTimeoutTimer_ = null;\r\n        }, Math.floor(LP_CONNECT_TIMEOUT));\r\n        // Ensure we delay the creation of the iframe until the DOM is loaded.\r\n        executeWhenDOMReady(function () {\r\n            if (_this.isClosed_)\r\n                return;\r\n            //Set up a callback that gets triggered once a connection is set up.\r\n            _this.scriptTagHolder = new FirebaseIFrameScriptHolder(function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var command = args[0], arg1 = args[1], arg2 = args[2];\r\n                _this.incrementIncomingBytes_(args);\r\n                if (!_this.scriptTagHolder)\r\n                    return; // we closed the connection.\r\n                if (_this.connectTimeoutTimer_) {\r\n                    clearTimeout(_this.connectTimeoutTimer_);\r\n                    _this.connectTimeoutTimer_ = null;\r\n                }\r\n                _this.everConnected_ = true;\r\n                if (command == FIREBASE_LONGPOLL_START_PARAM) {\r\n                    _this.id = arg1;\r\n                    _this.password = arg2;\r\n                }\r\n                else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\r\n                    // Don't clear the host cache. We got a response from the server, so we know it's reachable\r\n                    if (arg1) {\r\n                        // We aren't expecting any more data (other than what the server's already in the process of sending us\r\n                        // through our already open polls), so don't send any more.\r\n                        _this.scriptTagHolder.sendNewPolls = false;\r\n                        // arg1 in this case is the last response number sent by the server. We should try to receive\r\n                        // all of the responses up to this one before closing\r\n                        _this.myPacketOrderer.closeAfter(arg1, function () {\r\n                            _this.onClosed_();\r\n                        });\r\n                    }\r\n                    else {\r\n                        _this.onClosed_();\r\n                    }\r\n                }\r\n                else {\r\n                    throw new Error('Unrecognized command received: ' + command);\r\n                }\r\n            }, function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var pN = args[0], data = args[1];\r\n                _this.incrementIncomingBytes_(args);\r\n                _this.myPacketOrderer.handleResponse(pN, data);\r\n            }, function () {\r\n                _this.onClosed_();\r\n            }, _this.urlFn);\r\n            //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\r\n            //from cache.\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(Math.random() * 100000000);\r\n            if (_this.scriptTagHolder.uniqueCallbackIdentifier)\r\n                urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] = _this.scriptTagHolder.uniqueCallbackIdentifier;\r\n            urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n            if (_this.transportSessionId) {\r\n                urlParams[TRANSPORT_SESSION_PARAM] = _this.transportSessionId;\r\n            }\r\n            if (_this.lastSessionId) {\r\n                urlParams[LAST_SESSION_PARAM] = _this.lastSessionId;\r\n            }\r\n            if (!util.isNodeSdk() &&\r\n                typeof location !== 'undefined' &&\r\n                location.href &&\r\n                location.href.indexOf(FORGE_DOMAIN) !== -1) {\r\n                urlParams[REFERER_PARAM] = FORGE_REF;\r\n            }\r\n            var connectURL = _this.urlFn(urlParams);\r\n            _this.log_('Connecting via long-poll to ' + connectURL);\r\n            _this.scriptTagHolder.addTag(connectURL, function () {\r\n                /* do nothing */\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Call this when a handshake has completed successfully and we want to consider the connection established\r\n     */\r\n    BrowserPollConnection.prototype.start = function () {\r\n        this.scriptTagHolder.startLongPoll(this.id, this.password);\r\n        this.addDisconnectPingFrame(this.id, this.password);\r\n    };\r\n    /**\r\n     * Forces long polling to be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceAllow = function () {\r\n        BrowserPollConnection.forceAllow_ = true;\r\n    };\r\n    /**\r\n     * Forces longpolling to not be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceDisallow = function () {\r\n        BrowserPollConnection.forceDisallow_ = true;\r\n    };\r\n    // Static method, use string literal so it can be accessed in a generic way\r\n    BrowserPollConnection.isAvailable = function () {\r\n        // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\r\n        // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\r\n        return (BrowserPollConnection.forceAllow_ ||\r\n            (!BrowserPollConnection.forceDisallow_ &&\r\n                typeof document !== 'undefined' &&\r\n                document.createElement != null &&\r\n                !isChromeExtensionContentScript() &&\r\n                !isWindowsStoreApp() &&\r\n                !util.isNodeSdk()));\r\n    };\r\n    /**\r\n     * No-op for polling\r\n     */\r\n    BrowserPollConnection.prototype.markConnectionHealthy = function () { };\r\n    /**\r\n     * Stops polling and cleans up the iframe\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.scriptTagHolder) {\r\n            this.scriptTagHolder.close();\r\n            this.scriptTagHolder = null;\r\n        }\r\n        //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\r\n        if (this.myDisconnFrame) {\r\n            document.body.removeChild(this.myDisconnFrame);\r\n            this.myDisconnFrame = null;\r\n        }\r\n        if (this.connectTimeoutTimer_) {\r\n            clearTimeout(this.connectTimeoutTimer_);\r\n            this.connectTimeoutTimer_ = null;\r\n        }\r\n    };\r\n    /**\r\n     * Triggered when this transport is closed\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is closing itself');\r\n            this.shutdown_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_(this.everConnected_);\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\r\n     * that we've left.\r\n     */\r\n    BrowserPollConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is being closed.');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\r\n     * broken into chunks (since URLs have a small maximum length).\r\n     * @param {!Object} data The JSON data to transmit.\r\n     */\r\n    BrowserPollConnection.prototype.send = function (data) {\r\n        var dataStr = util.stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //first, lets get the base64-encoded data\r\n        var base64data = util.base64Encode(dataStr);\r\n        //We can only fit a certain amount in each URL, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\r\n        //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\r\n        //of segments so that we can reassemble the packet on the server.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.scriptTagHolder.enqueueSegment(this.curSegmentNum, dataSegs.length, dataSegs[i]);\r\n            this.curSegmentNum++;\r\n        }\r\n    };\r\n    /**\r\n     * This is how we notify the server that we're leaving.\r\n     * We aren't able to send requests with DHTML on a window close event, but we can\r\n     * trigger XHR requests in some browsers (everything but Opera basically).\r\n     * @param {!string} id\r\n     * @param {!string} pw\r\n     */\r\n    BrowserPollConnection.prototype.addDisconnectPingFrame = function (id, pw) {\r\n        if (util.isNodeSdk())\r\n            return;\r\n        this.myDisconnFrame = document.createElement('iframe');\r\n        var urlParams = {};\r\n        urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\r\n        urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\r\n        urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\r\n        this.myDisconnFrame.src = this.urlFn(urlParams);\r\n        this.myDisconnFrame.style.display = 'none';\r\n        document.body.appendChild(this.myDisconnFrame);\r\n    };\r\n    /**\r\n     * Used to track the bytes received by this client\r\n     * @param {*} args\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.incrementIncomingBytes_ = function (args) {\r\n        // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\r\n        var bytesReceived = util.stringify(args).length;\r\n        this.bytesReceived += bytesReceived;\r\n        this.stats_.incrementCounter('bytes_received', bytesReceived);\r\n    };\r\n    return BrowserPollConnection;\r\n}());\r\n/*********************************************************************************************\r\n * A wrapper around an iframe that is used as a long-polling script holder.\r\n * @constructor\r\n *********************************************************************************************/\r\nvar FirebaseIFrameScriptHolder = /** @class */ (function () {\r\n    /**\r\n     * @param commandCB - The callback to be called when control commands are recevied from the server.\r\n     * @param onMessageCB - The callback to be triggered when responses arrive from the server.\r\n     * @param onDisconnect - The callback to be triggered when this tag holder is closed\r\n     * @param urlFn - A function that provides the URL of the endpoint to send data to.\r\n     */\r\n    function FirebaseIFrameScriptHolder(commandCB, onMessageCB, onDisconnect, urlFn) {\r\n        this.onDisconnect = onDisconnect;\r\n        this.urlFn = urlFn;\r\n        //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\r\n        //problems in some browsers.\r\n        /**\r\n         * @type {CountedSet.<number, number>}\r\n         */\r\n        this.outstandingRequests = new CountedSet();\r\n        //A queue of the pending segments waiting for transmission to the server.\r\n        this.pendingSegs = [];\r\n        //A serial number. We use this for two things:\r\n        // 1) A way to ensure the browser doesn't cache responses to polls\r\n        // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\r\n        //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\r\n        //    JSONP code in the order it was added to the iframe.\r\n        this.currentSerial = Math.floor(Math.random() * 100000000);\r\n        // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\r\n        // incoming data from the server that we're waiting for).\r\n        this.sendNewPolls = true;\r\n        if (!util.isNodeSdk()) {\r\n            //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\r\n            //iframes where we put the long-polling script tags. We have two callbacks:\r\n            //   1) Command Callback - Triggered for control issues, like starting a connection.\r\n            //   2) Message Callback - Triggered when new data arrives.\r\n            this.uniqueCallbackIdentifier = LUIDGenerator();\r\n            window[FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier] = commandCB;\r\n            window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] = onMessageCB;\r\n            //Create an iframe for us to add script tags to.\r\n            this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\r\n            // Set the iframe's contents.\r\n            var script = '';\r\n            // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\r\n            // for ie9, but ie8 needs to do it again in the document itself.\r\n            if (this.myIFrame.src &&\r\n                this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:') {\r\n                var currentDomain = document.domain;\r\n                script = '<script>document.domain=\"' + currentDomain + '\";</script>';\r\n            }\r\n            var iframeContents = '<html><body>' + script + '</body></html>';\r\n            try {\r\n                this.myIFrame.doc.open();\r\n                this.myIFrame.doc.write(iframeContents);\r\n                this.myIFrame.doc.close();\r\n            }\r\n            catch (e) {\r\n                log('frame writing exception');\r\n                if (e.stack) {\r\n                    log(e.stack);\r\n                }\r\n                log(e);\r\n            }\r\n        }\r\n        else {\r\n            this.commandCB = commandCB;\r\n            this.onMessageCB = onMessageCB;\r\n        }\r\n    }\r\n    /**\r\n     * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\r\n     * actually use.\r\n     * @private\r\n     * @return {Element}\r\n     */\r\n    FirebaseIFrameScriptHolder.createIFrame_ = function () {\r\n        var iframe = document.createElement('iframe');\r\n        iframe.style.display = 'none';\r\n        // This is necessary in order to initialize the document inside the iframe\r\n        if (document.body) {\r\n            document.body.appendChild(iframe);\r\n            try {\r\n                // If document.domain has been modified in IE, this will throw an error, and we need to set the\r\n                // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\r\n                // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\r\n                var a = iframe.contentWindow.document;\r\n                if (!a) {\r\n                    // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\r\n                    log('No IE domain setting required');\r\n                }\r\n            }\r\n            catch (e) {\r\n                var domain = document.domain;\r\n                iframe.src =\r\n                    \"javascript:void((function(){document.open();document.domain='\" +\r\n                        domain +\r\n                        \"';document.close();})())\";\r\n            }\r\n        }\r\n        else {\r\n            // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\r\n            // never gets hit.\r\n            throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\r\n        }\r\n        // Get the document of the iframe in a browser-specific way.\r\n        if (iframe.contentDocument) {\r\n            iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\r\n        }\r\n        else if (iframe.contentWindow) {\r\n            iframe.doc = iframe.contentWindow.document; // Internet Explorer\r\n        }\r\n        else if (iframe.document) {\r\n            iframe.doc = iframe.document; //others?\r\n        }\r\n        return iframe;\r\n    };\r\n    /**\r\n     * Cancel all outstanding queries and remove the frame.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.close = function () {\r\n        var _this = this;\r\n        //Mark this iframe as dead, so no new requests are sent.\r\n        this.alive = false;\r\n        if (this.myIFrame) {\r\n            //We have to actually remove all of the html inside this iframe before removing it from the\r\n            //window, or IE will continue loading and executing the script tags we've already added, which\r\n            //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\r\n            this.myIFrame.doc.body.innerHTML = '';\r\n            setTimeout(function () {\r\n                if (_this.myIFrame !== null) {\r\n                    document.body.removeChild(_this.myIFrame);\r\n                    _this.myIFrame = null;\r\n                }\r\n            }, Math.floor(0));\r\n        }\r\n        if (util.isNodeSdk() && this.myID) {\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM] = 't';\r\n            urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\r\n            urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\r\n            var theURL = this.urlFn(urlParams);\r\n            FirebaseIFrameScriptHolder.nodeRestRequest(theURL);\r\n        }\r\n        // Protect from being called recursively.\r\n        var onDisconnect = this.onDisconnect;\r\n        if (onDisconnect) {\r\n            this.onDisconnect = null;\r\n            onDisconnect();\r\n        }\r\n    };\r\n    /**\r\n     * Actually start the long-polling session by adding the first script tag(s) to the iframe.\r\n     * @param {!string} id - The ID of this connection\r\n     * @param {!string} pw - The password for this connection\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.startLongPoll = function (id, pw) {\r\n        this.myID = id;\r\n        this.myPW = pw;\r\n        this.alive = true;\r\n        //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\r\n        while (this.newRequest_()) { }\r\n    };\r\n    /**\r\n     * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\r\n     * too many outstanding requests and we are still alive.\r\n     *\r\n     * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\r\n     * needed.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.newRequest_ = function () {\r\n        // We keep one outstanding request open all the time to receive data, but if we need to send data\r\n        // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\r\n        // close the old request.\r\n        if (this.alive &&\r\n            this.sendNewPolls &&\r\n            this.outstandingRequests.count() < (this.pendingSegs.length > 0 ? 2 : 1)) {\r\n            //construct our url\r\n            this.currentSerial++;\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\r\n            urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\r\n            var theURL = this.urlFn(urlParams);\r\n            //Now add as much data as we can.\r\n            var curDataString = '';\r\n            var i = 0;\r\n            while (this.pendingSegs.length > 0) {\r\n                //first, lets see if the next segment will fit.\r\n                var nextSeg = this.pendingSegs[0];\r\n                if (nextSeg.d.length + SEG_HEADER_SIZE + curDataString.length <=\r\n                    MAX_URL_DATA_SIZE) {\r\n                    //great, the segment will fit. Lets append it.\r\n                    var theSeg = this.pendingSegs.shift();\r\n                    curDataString =\r\n                        curDataString +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.seg +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.ts +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_DATA_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.d;\r\n                    i++;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n            theURL = theURL + curDataString;\r\n            this.addLongPollTag_(theURL, this.currentSerial);\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Queue a packet for transmission to the server.\r\n     * @param segnum - A sequential id for this packet segment used for reassembly\r\n     * @param totalsegs - The total number of segments in this packet\r\n     * @param data - The data for this segment.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.enqueueSegment = function (segnum, totalsegs, data) {\r\n        //add this to the queue of segments to send.\r\n        this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\r\n        //send the data immediately if there isn't already data being transmitted, unless\r\n        //startLongPoll hasn't been called yet.\r\n        if (this.alive) {\r\n            this.newRequest_();\r\n        }\r\n    };\r\n    /**\r\n     * Add a script tag for a regular long-poll request.\r\n     * @param {!string} url - The URL of the script tag.\r\n     * @param {!number} serial - The serial number of the request.\r\n     * @private\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addLongPollTag_ = function (url, serial) {\r\n        var _this = this;\r\n        //remember that we sent this request.\r\n        this.outstandingRequests.add(serial, 1);\r\n        var doNewRequest = function () {\r\n            _this.outstandingRequests.remove(serial);\r\n            _this.newRequest_();\r\n        };\r\n        // If this request doesn't return on its own accord (by the server sending us some data), we'll\r\n        // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\r\n        var keepaliveTimeout = setTimeout(doNewRequest, Math.floor(KEEPALIVE_REQUEST_INTERVAL));\r\n        var readyStateCB = function () {\r\n            // Request completed.  Cancel the keepalive.\r\n            clearTimeout(keepaliveTimeout);\r\n            // Trigger a new request so we can continue receiving data.\r\n            doNewRequest();\r\n        };\r\n        this.addTag(url, readyStateCB);\r\n    };\r\n    /**\r\n     * Add an arbitrary script tag to the iframe.\r\n     * @param {!string} url - The URL for the script tag source.\r\n     * @param {!function()} loadCB - A callback to be triggered once the script has loaded.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addTag = function (url, loadCB) {\r\n        var _this = this;\r\n        if (util.isNodeSdk()) {\r\n            this.doNodeLongPoll(url, loadCB);\r\n        }\r\n        else {\r\n            setTimeout(function () {\r\n                try {\r\n                    // if we're already closed, don't add this poll\r\n                    if (!_this.sendNewPolls)\r\n                        return;\r\n                    var newScript_1 = _this.myIFrame.doc.createElement('script');\r\n                    newScript_1.type = 'text/javascript';\r\n                    newScript_1.async = true;\r\n                    newScript_1.src = url;\r\n                    newScript_1.onload = newScript_1.onreadystatechange = function () {\r\n                        var rstate = newScript_1.readyState;\r\n                        if (!rstate || rstate === 'loaded' || rstate === 'complete') {\r\n                            newScript_1.onload = newScript_1.onreadystatechange = null;\r\n                            if (newScript_1.parentNode) {\r\n                                newScript_1.parentNode.removeChild(newScript_1);\r\n                            }\r\n                            loadCB();\r\n                        }\r\n                    };\r\n                    newScript_1.onerror = function () {\r\n                        log('Long-poll script failed to load: ' + url);\r\n                        _this.sendNewPolls = false;\r\n                        _this.close();\r\n                    };\r\n                    _this.myIFrame.doc.body.appendChild(newScript_1);\r\n                }\r\n                catch (e) {\r\n                    // TODO: we should make this error visible somehow\r\n                }\r\n            }, Math.floor(1));\r\n        }\r\n    };\r\n    return FirebaseIFrameScriptHolder;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar WEBSOCKET_MAX_FRAME_SIZE = 16384;\r\nvar WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\r\nvar WebSocketImpl = null;\r\nif (typeof MozWebSocket !== 'undefined') {\r\n    WebSocketImpl = MozWebSocket;\r\n}\r\nelse if (typeof WebSocket !== 'undefined') {\r\n    WebSocketImpl = WebSocket;\r\n}\r\n/**\r\n * Create a new websocket connection with the given callbacks.\r\n * @constructor\r\n * @implements {Transport}\r\n */\r\nvar WebSocketConnection = /** @class */ (function () {\r\n    /**\r\n     * @param {string} connId identifier for this transport\r\n     * @param {RepoInfo} repoInfo The info for the websocket endpoint.\r\n     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\r\n     */\r\n    function WebSocketConnection(connId, repoInfo, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.keepaliveTimer = null;\r\n        this.frames = null;\r\n        this.totalFrames = 0;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.log_ = logWrapper(this.connId);\r\n        this.stats_ = StatsManager.getCollection(repoInfo);\r\n        this.connURL = WebSocketConnection.connectionURL_(repoInfo, transportSessionId, lastSessionId);\r\n    }\r\n    /**\r\n     * @param {RepoInfo} repoInfo The info for the websocket endpoint.\r\n     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\r\n     * @return {string} connection url\r\n     * @private\r\n     */\r\n    WebSocketConnection.connectionURL_ = function (repoInfo, transportSessionId, lastSessionId) {\r\n        var urlParams = {};\r\n        urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n        if (!util.isNodeSdk() &&\r\n            typeof location !== 'undefined' &&\r\n            location.href &&\r\n            location.href.indexOf(FORGE_DOMAIN) !== -1) {\r\n            urlParams[REFERER_PARAM] = FORGE_REF;\r\n        }\r\n        if (transportSessionId) {\r\n            urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\r\n        }\r\n        if (lastSessionId) {\r\n            urlParams[LAST_SESSION_PARAM] = lastSessionId;\r\n        }\r\n        return repoInfo.connectionURL(WEBSOCKET, urlParams);\r\n    };\r\n    /**\r\n     *\r\n     * @param onMessage Callback when messages arrive\r\n     * @param onDisconnect Callback with connection lost.\r\n     */\r\n    WebSocketConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.onDisconnect = onDisconnect;\r\n        this.onMessage = onMessage;\r\n        this.log_('Websocket connecting to ' + this.connURL);\r\n        this.everConnected_ = false;\r\n        // Assume failure until proven otherwise.\r\n        PersistentStorage.set('previous_websocket_failure', true);\r\n        try {\r\n            if (util.isNodeSdk()) {\r\n                var device = util.CONSTANTS.NODE_ADMIN ? 'AdminNode' : 'Node';\r\n                // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\r\n                var options = {\r\n                    headers: {\r\n                        'User-Agent': \"Firebase/\" + PROTOCOL_VERSION + \"/\" + firebase.SDK_VERSION + \"/\" + process.platform + \"/\" + device\r\n                    }\r\n                };\r\n                // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\r\n                var env = process['env'];\r\n                var proxy = this.connURL.indexOf('wss://') == 0\r\n                    ? env['HTTPS_PROXY'] || env['https_proxy']\r\n                    : env['HTTP_PROXY'] || env['http_proxy'];\r\n                if (proxy) {\r\n                    options['proxy'] = { origin: proxy };\r\n                }\r\n                this.mySock = new WebSocketImpl(this.connURL, [], options);\r\n            }\r\n            else {\r\n                this.mySock = new WebSocketImpl(this.connURL);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.log_('Error instantiating WebSocket.');\r\n            var error = e.message || e.data;\r\n            if (error) {\r\n                this.log_(error);\r\n            }\r\n            this.onClosed_();\r\n            return;\r\n        }\r\n        this.mySock.onopen = function () {\r\n            _this.log_('Websocket connected.');\r\n            _this.everConnected_ = true;\r\n        };\r\n        this.mySock.onclose = function () {\r\n            _this.log_('Websocket connection was disconnected.');\r\n            _this.mySock = null;\r\n            _this.onClosed_();\r\n        };\r\n        this.mySock.onmessage = function (m) {\r\n            _this.handleIncomingFrame(m);\r\n        };\r\n        this.mySock.onerror = function (e) {\r\n            _this.log_('WebSocket error.  Closing connection.');\r\n            var error = e.message || e.data;\r\n            if (error) {\r\n                _this.log_(error);\r\n            }\r\n            _this.onClosed_();\r\n        };\r\n    };\r\n    /**\r\n     * No-op for websockets, we don't need to do anything once the connection is confirmed as open\r\n     */\r\n    WebSocketConnection.prototype.start = function () { };\r\n    WebSocketConnection.forceDisallow = function () {\r\n        WebSocketConnection.forceDisallow_ = true;\r\n    };\r\n    WebSocketConnection.isAvailable = function () {\r\n        var isOldAndroid = false;\r\n        if (typeof navigator !== 'undefined' && navigator.userAgent) {\r\n            var oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\r\n            var oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\r\n            if (oldAndroidMatch && oldAndroidMatch.length > 1) {\r\n                if (parseFloat(oldAndroidMatch[1]) < 4.4) {\r\n                    isOldAndroid = true;\r\n                }\r\n            }\r\n        }\r\n        return (!isOldAndroid &&\r\n            WebSocketImpl !== null &&\r\n            !WebSocketConnection.forceDisallow_);\r\n    };\r\n    /**\r\n     * Returns true if we previously failed to connect with this transport.\r\n     * @return {boolean}\r\n     */\r\n    WebSocketConnection.previouslyFailed = function () {\r\n        // If our persistent storage is actually only in-memory storage,\r\n        // we default to assuming that it previously failed to be safe.\r\n        return (PersistentStorage.isInMemoryStorage ||\r\n            PersistentStorage.get('previous_websocket_failure') === true);\r\n    };\r\n    WebSocketConnection.prototype.markConnectionHealthy = function () {\r\n        PersistentStorage.remove('previous_websocket_failure');\r\n    };\r\n    WebSocketConnection.prototype.appendFrame_ = function (data) {\r\n        this.frames.push(data);\r\n        if (this.frames.length == this.totalFrames) {\r\n            var fullMess = this.frames.join('');\r\n            this.frames = null;\r\n            var jsonMess = util.jsonEval(fullMess);\r\n            //handle the message\r\n            this.onMessage(jsonMess);\r\n        }\r\n    };\r\n    /**\r\n     * @param {number} frameCount The number of frames we are expecting from the server\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.handleNewFrameCount_ = function (frameCount) {\r\n        this.totalFrames = frameCount;\r\n        this.frames = [];\r\n    };\r\n    /**\r\n     * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\r\n     * @param {!String} data\r\n     * @return {?String} Any remaining data to be process, or null if there is none\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.extractFrameCount_ = function (data) {\r\n        util.assert(this.frames === null, 'We already have a frame buffer');\r\n        // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\r\n        // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\r\n        if (data.length <= 6) {\r\n            var frameCount = Number(data);\r\n            if (!isNaN(frameCount)) {\r\n                this.handleNewFrameCount_(frameCount);\r\n                return null;\r\n            }\r\n        }\r\n        this.handleNewFrameCount_(1);\r\n        return data;\r\n    };\r\n    /**\r\n     * Process a websocket frame that has arrived from the server.\r\n     * @param mess The frame data\r\n     */\r\n    WebSocketConnection.prototype.handleIncomingFrame = function (mess) {\r\n        if (this.mySock === null)\r\n            return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\r\n        var data = mess['data'];\r\n        this.bytesReceived += data.length;\r\n        this.stats_.incrementCounter('bytes_received', data.length);\r\n        this.resetKeepAlive();\r\n        if (this.frames !== null) {\r\n            // we're buffering\r\n            this.appendFrame_(data);\r\n        }\r\n        else {\r\n            // try to parse out a frame count, otherwise, assume 1 and process it\r\n            var remainingData = this.extractFrameCount_(data);\r\n            if (remainingData !== null) {\r\n                this.appendFrame_(remainingData);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Send a message to the server\r\n     * @param {Object} data The JSON object to transmit\r\n     */\r\n    WebSocketConnection.prototype.send = function (data) {\r\n        this.resetKeepAlive();\r\n        var dataStr = util.stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //We can only fit a certain amount in each websocket frame, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\r\n        //Send the length header\r\n        if (dataSegs.length > 1) {\r\n            this.sendString_(String(dataSegs.length));\r\n        }\r\n        //Send the actual data in segments.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.sendString_(dataSegs[i]);\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.keepaliveTimer) {\r\n            clearInterval(this.keepaliveTimer);\r\n            this.keepaliveTimer = null;\r\n        }\r\n        if (this.mySock) {\r\n            this.mySock.close();\r\n            this.mySock = null;\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is closing itself');\r\n            this.shutdown_();\r\n            // since this is an internal close, trigger the close listener\r\n            if (this.onDisconnect) {\r\n                this.onDisconnect(this.everConnected_);\r\n                this.onDisconnect = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler.\r\n     * Close the websocket and kill the connection.\r\n     */\r\n    WebSocketConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is being closed');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\r\n     * the last activity.\r\n     */\r\n    WebSocketConnection.prototype.resetKeepAlive = function () {\r\n        var _this = this;\r\n        clearInterval(this.keepaliveTimer);\r\n        this.keepaliveTimer = setInterval(function () {\r\n            //If there has been no websocket activity for a while, send a no-op\r\n            if (_this.mySock) {\r\n                _this.sendString_('0');\r\n            }\r\n            _this.resetKeepAlive();\r\n        }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));\r\n    };\r\n    /**\r\n     * Send a string over the websocket.\r\n     *\r\n     * @param {string} str String to send.\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.sendString_ = function (str) {\r\n        // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\r\n        // calls for some unknown reason.  We treat these as an error and disconnect.\r\n        // See https://app.asana.com/0/58926111402292/68021340250410\r\n        try {\r\n            this.mySock.send(str);\r\n        }\r\n        catch (e) {\r\n            this.log_('Exception thrown from WebSocket.send():', e.message || e.data, 'Closing connection.');\r\n            setTimeout(this.onClosed_.bind(this), 0);\r\n        }\r\n    };\r\n    /**\r\n     * Number of response before we consider the connection \"healthy.\"\r\n     * @type {number}\r\n     */\r\n    WebSocketConnection.responsesRequiredToBeHealthy = 2;\r\n    /**\r\n     * Time to wait for the connection te become healthy before giving up.\r\n     * @type {number}\r\n     */\r\n    WebSocketConnection.healthyTimeout = 30000;\r\n    return WebSocketConnection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\r\n * lifecycle.\r\n *\r\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\r\n * they are available.\r\n * @constructor\r\n */\r\nvar TransportManager = /** @class */ (function () {\r\n    /**\r\n     * @param {!RepoInfo} repoInfo Metadata around the namespace we're connecting to\r\n     */\r\n    function TransportManager(repoInfo) {\r\n        this.initTransports_(repoInfo);\r\n    }\r\n    Object.defineProperty(TransportManager, \"ALL_TRANSPORTS\", {\r\n        /**\r\n         * @const\r\n         * @type {!Array.<function(new:Transport, string, RepoInfo, string=)>}\r\n         */\r\n        get: function () {\r\n            return [BrowserPollConnection, WebSocketConnection];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @param {!RepoInfo} repoInfo\r\n     * @private\r\n     */\r\n    TransportManager.prototype.initTransports_ = function (repoInfo) {\r\n        var isWebSocketsAvailable = WebSocketConnection && WebSocketConnection['isAvailable']();\r\n        var isSkipPollConnection = isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\r\n        if (repoInfo.webSocketOnly) {\r\n            if (!isWebSocketsAvailable)\r\n                warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");\r\n            isSkipPollConnection = true;\r\n        }\r\n        if (isSkipPollConnection) {\r\n            this.transports_ = [WebSocketConnection];\r\n        }\r\n        else {\r\n            var transports_1 = (this.transports_ = []);\r\n            each(TransportManager.ALL_TRANSPORTS, function (i, transport) {\r\n                if (transport && transport['isAvailable']()) {\r\n                    transports_1.push(transport);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @return {function(new:Transport, !string, !RepoInfo, string=, string=)} The constructor for the\r\n     * initial transport to use\r\n     */\r\n    TransportManager.prototype.initialTransport = function () {\r\n        if (this.transports_.length > 0) {\r\n            return this.transports_[0];\r\n        }\r\n        else {\r\n            throw new Error('No transports available');\r\n        }\r\n    };\r\n    /**\r\n     * @return {?function(new:Transport, function(),function(), string=)} The constructor for the next\r\n     * transport, or null\r\n     */\r\n    TransportManager.prototype.upgradeTransport = function () {\r\n        if (this.transports_.length > 1) {\r\n            return this.transports_[1];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    return TransportManager;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Abort upgrade attempt if it takes longer than 60s.\r\nvar UPGRADE_TIMEOUT = 60000;\r\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\r\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\r\nvar DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\r\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\r\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\r\n// but we've sent/received enough bytes, we don't cancel the connection.\r\nvar BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\r\nvar BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\r\nvar MESSAGE_TYPE = 't';\r\nvar MESSAGE_DATA = 'd';\r\nvar CONTROL_SHUTDOWN = 's';\r\nvar CONTROL_RESET = 'r';\r\nvar CONTROL_ERROR = 'e';\r\nvar CONTROL_PONG = 'o';\r\nvar SWITCH_ACK = 'a';\r\nvar END_TRANSMISSION = 'n';\r\nvar PING = 'p';\r\nvar SERVER_HELLO = 'h';\r\n/**\r\n * Creates a new real-time connection to the server using whichever method works\r\n * best in the current browser.\r\n *\r\n * @constructor\r\n */\r\nvar Connection = /** @class */ (function () {\r\n    /**\r\n     * @param {!string} id - an id for this connection\r\n     * @param {!RepoInfo} repoInfo_ - the info for the endpoint to connect to\r\n     * @param {function(Object)} onMessage_ - the callback to be triggered when a server-push message arrives\r\n     * @param {function(number, string)} onReady_ - the callback to be triggered when this connection is ready to send messages.\r\n     * @param {function()} onDisconnect_ - the callback to be triggered when a connection was lost\r\n     * @param {function(string)} onKill_ - the callback to be triggered when this connection has permanently shut down.\r\n     * @param {string=} lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\r\n     */\r\n    function Connection(id, repoInfo_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {\r\n        this.id = id;\r\n        this.repoInfo_ = repoInfo_;\r\n        this.onMessage_ = onMessage_;\r\n        this.onReady_ = onReady_;\r\n        this.onDisconnect_ = onDisconnect_;\r\n        this.onKill_ = onKill_;\r\n        this.lastSessionId = lastSessionId;\r\n        this.connectionCount = 0;\r\n        this.pendingDataMessages = [];\r\n        this.state_ = 0 /* CONNECTING */;\r\n        this.log_ = logWrapper('c:' + this.id + ':');\r\n        this.transportManager_ = new TransportManager(repoInfo_);\r\n        this.log_('Connection created');\r\n        this.start_();\r\n    }\r\n    /**\r\n     * Starts a connection attempt\r\n     * @private\r\n     */\r\n    Connection.prototype.start_ = function () {\r\n        var _this = this;\r\n        var conn = this.transportManager_.initialTransport();\r\n        this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, undefined, this.lastSessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessageReceived = this.connReceiver_(this.conn_);\r\n        var onConnectionLost = this.disconnReceiver_(this.conn_);\r\n        this.tx_ = this.conn_;\r\n        this.rx_ = this.conn_;\r\n        this.secondaryConn_ = null;\r\n        this.isHealthy_ = false;\r\n        /*\r\n         * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\r\n         * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\r\n         * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\r\n         * still have the context of your originating frame.\r\n         */\r\n        setTimeout(function () {\r\n            // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\r\n            _this.conn_ && _this.conn_.open(onMessageReceived, onConnectionLost);\r\n        }, Math.floor(0));\r\n        var healthyTimeout_ms = conn['healthyTimeout'] || 0;\r\n        if (healthyTimeout_ms > 0) {\r\n            this.healthyTimeout_ = setTimeoutNonBlocking(function () {\r\n                _this.healthyTimeout_ = null;\r\n                if (!_this.isHealthy_) {\r\n                    if (_this.conn_ &&\r\n                        _this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has received ' +\r\n                            _this.conn_.bytesReceived +\r\n                            ' bytes.  Marking connection healthy.');\r\n                        _this.isHealthy_ = true;\r\n                        _this.conn_.markConnectionHealthy();\r\n                    }\r\n                    else if (_this.conn_ &&\r\n                        _this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has sent ' +\r\n                            _this.conn_.bytesSent +\r\n                            ' bytes.  Leaving connection alive.');\r\n                        // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\r\n                        // the server.\r\n                    }\r\n                    else {\r\n                        _this.log_('Closing unhealthy connection after timeout.');\r\n                        _this.close();\r\n                    }\r\n                }\r\n            }, Math.floor(healthyTimeout_ms));\r\n        }\r\n    };\r\n    /**\r\n     * @return {!string}\r\n     * @private\r\n     */\r\n    Connection.prototype.nextTransportId_ = function () {\r\n        return 'c:' + this.id + ':' + this.connectionCount++;\r\n    };\r\n    Connection.prototype.disconnReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (everConnected) {\r\n            if (conn === _this.conn_) {\r\n                _this.onConnectionLost_(everConnected);\r\n            }\r\n            else if (conn === _this.secondaryConn_) {\r\n                _this.log_('Secondary connection lost.');\r\n                _this.onSecondaryConnectionLost_();\r\n            }\r\n            else {\r\n                _this.log_('closing an old connection');\r\n            }\r\n        };\r\n    };\r\n    Connection.prototype.connReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (message) {\r\n            if (_this.state_ != 2 /* DISCONNECTED */) {\r\n                if (conn === _this.rx_) {\r\n                    _this.onPrimaryMessageReceived_(message);\r\n                }\r\n                else if (conn === _this.secondaryConn_) {\r\n                    _this.onSecondaryMessageReceived_(message);\r\n                }\r\n                else {\r\n                    _this.log_('message on old connection');\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     *\r\n     * @param {Object} dataMsg An arbitrary data message to be sent to the server\r\n     */\r\n    Connection.prototype.sendRequest = function (dataMsg) {\r\n        // wrap in a data message envelope and send it on\r\n        var msg = { t: 'd', d: dataMsg };\r\n        this.sendData_(msg);\r\n    };\r\n    Connection.prototype.tryCleanupConnection = function () {\r\n        if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\r\n            this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);\r\n            this.conn_ = this.secondaryConn_;\r\n            this.secondaryConn_ = null;\r\n            // the server will shutdown the old connection\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryControl_ = function (controlData) {\r\n        if (MESSAGE_TYPE in controlData) {\r\n            var cmd = controlData[MESSAGE_TYPE];\r\n            if (cmd === SWITCH_ACK) {\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // Most likely the session wasn't valid. Abandon the switch attempt\r\n                this.log_('Got a reset on secondary, closing it');\r\n                this.secondaryConn_.close();\r\n                // If we were already using this connection for something, than we need to fully close\r\n                if (this.tx_ === this.secondaryConn_ ||\r\n                    this.rx_ === this.secondaryConn_) {\r\n                    this.close();\r\n                }\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on secondary.');\r\n                this.secondaryResponsesRequired_--;\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryMessageReceived_ = function (parsedData) {\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer == 'c') {\r\n            this.onSecondaryControl_(data);\r\n        }\r\n        else if (layer == 'd') {\r\n            // got a data message, but we're still second connection. Need to buffer it up\r\n            this.pendingDataMessages.push(data);\r\n        }\r\n        else {\r\n            throw new Error('Unknown protocol layer: ' + layer);\r\n        }\r\n    };\r\n    Connection.prototype.upgradeIfSecondaryHealthy_ = function () {\r\n        if (this.secondaryResponsesRequired_ <= 0) {\r\n            this.log_('Secondary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n            this.secondaryConn_.markConnectionHealthy();\r\n            this.proceedWithUpgrade_();\r\n        }\r\n        else {\r\n            // Send a ping to make sure the connection is healthy.\r\n            this.log_('sending ping on secondary.');\r\n            this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.proceedWithUpgrade_ = function () {\r\n        // tell this connection to consider itself open\r\n        this.secondaryConn_.start();\r\n        // send ack\r\n        this.log_('sending client ack on secondary');\r\n        this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\r\n        // send end packet on primary transport, switch to sending on this one\r\n        // can receive on this one, buffer responses until end received on primary transport\r\n        this.log_('Ending transmission on primary');\r\n        this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\r\n        this.tx_ = this.secondaryConn_;\r\n        this.tryCleanupConnection();\r\n    };\r\n    Connection.prototype.onPrimaryMessageReceived_ = function (parsedData) {\r\n        // Must refer to parsedData properties in quotes, so closure doesn't touch them.\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer == 'c') {\r\n            this.onControl_(data);\r\n        }\r\n        else if (layer == 'd') {\r\n            this.onDataMessage_(data);\r\n        }\r\n    };\r\n    Connection.prototype.onDataMessage_ = function (message) {\r\n        this.onPrimaryResponse_();\r\n        // We don't do anything with data messages, just kick them up a level\r\n        this.onMessage_(message);\r\n    };\r\n    Connection.prototype.onPrimaryResponse_ = function () {\r\n        if (!this.isHealthy_) {\r\n            this.primaryResponsesRequired_--;\r\n            if (this.primaryResponsesRequired_ <= 0) {\r\n                this.log_('Primary connection is healthy.');\r\n                this.isHealthy_ = true;\r\n                this.conn_.markConnectionHealthy();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onControl_ = function (controlData) {\r\n        var cmd = requireKey(MESSAGE_TYPE, controlData);\r\n        if (MESSAGE_DATA in controlData) {\r\n            var payload = controlData[MESSAGE_DATA];\r\n            if (cmd === SERVER_HELLO) {\r\n                this.onHandshake_(payload);\r\n            }\r\n            else if (cmd === END_TRANSMISSION) {\r\n                this.log_('recvd end transmission on primary');\r\n                this.rx_ = this.secondaryConn_;\r\n                for (var i = 0; i < this.pendingDataMessages.length; ++i) {\r\n                    this.onDataMessage_(this.pendingDataMessages[i]);\r\n                }\r\n                this.pendingDataMessages = [];\r\n                this.tryCleanupConnection();\r\n            }\r\n            else if (cmd === CONTROL_SHUTDOWN) {\r\n                // This was previously the 'onKill' callback passed to the lower-level connection\r\n                // payload in this case is the reason for the shutdown. Generally a human-readable error\r\n                this.onConnectionShutdown_(payload);\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // payload in this case is the host we should contact\r\n                this.onReset_(payload);\r\n            }\r\n            else if (cmd === CONTROL_ERROR) {\r\n                error('Server Error: ' + payload);\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on primary.');\r\n                this.onPrimaryResponse_();\r\n                this.sendPingOnPrimaryIfNecessary_();\r\n            }\r\n            else {\r\n                error('Unknown control packet command: ' + cmd);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {Object} handshake The handshake data returned from the server\r\n     * @private\r\n     */\r\n    Connection.prototype.onHandshake_ = function (handshake) {\r\n        var timestamp = handshake.ts;\r\n        var version = handshake.v;\r\n        var host = handshake.h;\r\n        this.sessionId = handshake.s;\r\n        this.repoInfo_.updateHost(host);\r\n        // if we've already closed the connection, then don't bother trying to progress further\r\n        if (this.state_ == 0 /* CONNECTING */) {\r\n            this.conn_.start();\r\n            this.onConnectionEstablished_(this.conn_, timestamp);\r\n            if (PROTOCOL_VERSION !== version) {\r\n                warn('Protocol version mismatch detected');\r\n            }\r\n            // TODO: do we want to upgrade? when? maybe a delay?\r\n            this.tryStartUpgrade_();\r\n        }\r\n    };\r\n    Connection.prototype.tryStartUpgrade_ = function () {\r\n        var conn = this.transportManager_.upgradeTransport();\r\n        if (conn) {\r\n            this.startUpgrade_(conn);\r\n        }\r\n    };\r\n    Connection.prototype.startUpgrade_ = function (conn) {\r\n        var _this = this;\r\n        this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.sessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.secondaryResponsesRequired_ =\r\n            conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessage = this.connReceiver_(this.secondaryConn_);\r\n        var onDisconnect = this.disconnReceiver_(this.secondaryConn_);\r\n        this.secondaryConn_.open(onMessage, onDisconnect);\r\n        // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\r\n        setTimeoutNonBlocking(function () {\r\n            if (_this.secondaryConn_) {\r\n                _this.log_('Timed out trying to upgrade.');\r\n                _this.secondaryConn_.close();\r\n            }\r\n        }, Math.floor(UPGRADE_TIMEOUT));\r\n    };\r\n    Connection.prototype.onReset_ = function (host) {\r\n        this.log_('Reset packet received.  New host: ' + host);\r\n        this.repoInfo_.updateHost(host);\r\n        // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\r\n        // We don't currently support resets after the connection has already been established\r\n        if (this.state_ === 1 /* CONNECTED */) {\r\n            this.close();\r\n        }\r\n        else {\r\n            // Close whatever connections we have open and start again.\r\n            this.closeConnections_();\r\n            this.start_();\r\n        }\r\n    };\r\n    Connection.prototype.onConnectionEstablished_ = function (conn, timestamp) {\r\n        var _this = this;\r\n        this.log_('Realtime connection established.');\r\n        this.conn_ = conn;\r\n        this.state_ = 1 /* CONNECTED */;\r\n        if (this.onReady_) {\r\n            this.onReady_(timestamp, this.sessionId);\r\n            this.onReady_ = null;\r\n        }\r\n        // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\r\n        // send some pings.\r\n        if (this.primaryResponsesRequired_ === 0) {\r\n            this.log_('Primary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n        }\r\n        else {\r\n            setTimeoutNonBlocking(function () {\r\n                _this.sendPingOnPrimaryIfNecessary_();\r\n            }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\r\n        }\r\n    };\r\n    Connection.prototype.sendPingOnPrimaryIfNecessary_ = function () {\r\n        // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\r\n        if (!this.isHealthy_ && this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('sending ping on primary.');\r\n            this.sendData_({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryConnectionLost_ = function () {\r\n        var conn = this.secondaryConn_;\r\n        this.secondaryConn_ = null;\r\n        if (this.tx_ === conn || this.rx_ === conn) {\r\n            // we are relying on this connection already in some capacity. Therefore, a failure is real\r\n            this.close();\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {boolean} everConnected Whether or not the connection ever reached a server. Used to determine if\r\n     * we should flush the host cache\r\n     * @private\r\n     */\r\n    Connection.prototype.onConnectionLost_ = function (everConnected) {\r\n        this.conn_ = null;\r\n        // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\r\n        // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\r\n        if (!everConnected && this.state_ === 0 /* CONNECTING */) {\r\n            this.log_('Realtime connection failed.');\r\n            // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\r\n            if (this.repoInfo_.isCacheableHost()) {\r\n                PersistentStorage.remove('host:' + this.repoInfo_.host);\r\n                // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\r\n                this.repoInfo_.internalHost = this.repoInfo_.host;\r\n            }\r\n        }\r\n        else if (this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('Realtime connection lost.');\r\n        }\r\n        this.close();\r\n    };\r\n    /**\r\n     *\r\n     * @param {string} reason\r\n     * @private\r\n     */\r\n    Connection.prototype.onConnectionShutdown_ = function (reason) {\r\n        this.log_('Connection shutdown command received. Shutting down...');\r\n        if (this.onKill_) {\r\n            this.onKill_(reason);\r\n            this.onKill_ = null;\r\n        }\r\n        // We intentionally don't want to fire onDisconnect (kill is a different case),\r\n        // so clear the callback.\r\n        this.onDisconnect_ = null;\r\n        this.close();\r\n    };\r\n    Connection.prototype.sendData_ = function (data) {\r\n        if (this.state_ !== 1 /* CONNECTED */) {\r\n            throw 'Connection is not connected';\r\n        }\r\n        else {\r\n            this.tx_.send(data);\r\n        }\r\n    };\r\n    /**\r\n     * Cleans up this connection, calling the appropriate callbacks\r\n     */\r\n    Connection.prototype.close = function () {\r\n        if (this.state_ !== 2 /* DISCONNECTED */) {\r\n            this.log_('Closing realtime connection.');\r\n            this.state_ = 2 /* DISCONNECTED */;\r\n            this.closeConnections_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_();\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    Connection.prototype.closeConnections_ = function () {\r\n        this.log_('Shutting down all connections');\r\n        if (this.conn_) {\r\n            this.conn_.close();\r\n            this.conn_ = null;\r\n        }\r\n        if (this.secondaryConn_) {\r\n            this.secondaryConn_.close();\r\n            this.secondaryConn_ = null;\r\n        }\r\n        if (this.healthyTimeout_) {\r\n            clearTimeout(this.healthyTimeout_);\r\n            this.healthyTimeout_ = null;\r\n        }\r\n    };\r\n    return Connection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Interface defining the set of actions that can be performed against the Firebase server\r\n * (basically corresponds to our wire protocol).\r\n *\r\n * @interface\r\n */\r\nvar ServerActions = /** @class */ (function () {\r\n    function ServerActions() {\r\n    }\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     * @param {string=} hash\r\n     */\r\n    ServerActions.prototype.put = function (pathString, data, onComplete, hash) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, ?string)} onComplete\r\n     * @param {string=} hash\r\n     */\r\n    ServerActions.prototype.merge = function (pathString, data, onComplete, hash) { };\r\n    /**\r\n     * Refreshes the auth token for the current connection.\r\n     * @param {string} token The authentication token\r\n     */\r\n    ServerActions.prototype.refreshAuthToken = function (token) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectPut = function (pathString, data, onComplete) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectMerge = function (pathString, data, onComplete) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectCancel = function (pathString, onComplete) { };\r\n    /**\r\n     * @param {Object.<string, *>} stats\r\n     */\r\n    ServerActions.prototype.reportStats = function (stats) { };\r\n    return ServerActions;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar RECONNECT_MIN_DELAY = 1000;\r\nvar RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\r\nvar RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\r\nvar RECONNECT_DELAY_MULTIPLIER = 1.3;\r\nvar RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\r\nvar SERVER_KILL_INTERRUPT_REASON = 'server_kill';\r\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\r\nvar INVALID_AUTH_TOKEN_THRESHOLD = 3;\r\n/**\r\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\r\n *\r\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\r\n * in quotes to make sure the closure compiler does not minify them.\r\n */\r\nvar PersistentConnection = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PersistentConnection, _super);\r\n    /**\r\n     * @implements {ServerActions}\r\n     * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\r\n     * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\r\n     * @param onConnectStatus_\r\n     * @param onServerInfoUpdate_\r\n     * @param authTokenProvider_\r\n     * @param authOverride_\r\n     */\r\n    function PersistentConnection(repoInfo_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, authOverride_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.onConnectStatus_ = onConnectStatus_;\r\n        _this.onServerInfoUpdate_ = onServerInfoUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        _this.authOverride_ = authOverride_;\r\n        // Used for diagnostic logging.\r\n        _this.id = PersistentConnection.nextPersistentConnectionId_++;\r\n        _this.log_ = logWrapper('p:' + _this.id + ':');\r\n        /** @private {Object} */\r\n        _this.interruptReasons_ = {};\r\n        _this.listens_ = {};\r\n        _this.outstandingPuts_ = [];\r\n        _this.outstandingPutCount_ = 0;\r\n        _this.onDisconnectRequestQueue_ = [];\r\n        _this.connected_ = false;\r\n        _this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n        _this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\r\n        _this.securityDebugCallback_ = null;\r\n        _this.lastSessionId = null;\r\n        /** @private {number|null} */\r\n        _this.establishConnectionTimer_ = null;\r\n        /** @private {boolean} */\r\n        _this.visible_ = false;\r\n        // Before we get connected, we keep a queue of pending messages to send.\r\n        _this.requestCBHash_ = {};\r\n        _this.requestNumber_ = 0;\r\n        /** @private {?{\r\n         *   sendRequest(Object),\r\n         *   close()\r\n         * }} */\r\n        _this.realtime_ = null;\r\n        /** @private {string|null} */\r\n        _this.authToken_ = null;\r\n        _this.forceTokenRefresh_ = false;\r\n        _this.invalidAuthTokenCount_ = 0;\r\n        _this.firstConnection_ = true;\r\n        _this.lastConnectionAttemptTime_ = null;\r\n        _this.lastConnectionEstablishedTime_ = null;\r\n        if (authOverride_ && !util.isNodeSdk()) {\r\n            throw new Error('Auth override specified in options, but not supported on non Node.js platforms');\r\n        }\r\n        _this.scheduleConnect_(0);\r\n        VisibilityMonitor.getInstance().on('visible', _this.onVisible_, _this);\r\n        if (repoInfo_.host.indexOf('fblocal') === -1) {\r\n            OnlineMonitor.getInstance().on('online', _this.onOnline_, _this);\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {!string} action\r\n     * @param {*} body\r\n     * @param {function(*)=} onResponse\r\n     * @protected\r\n     */\r\n    PersistentConnection.prototype.sendRequest = function (action, body, onResponse) {\r\n        var curReqNum = ++this.requestNumber_;\r\n        var msg = { r: curReqNum, a: action, b: body };\r\n        this.log_(util.stringify(msg));\r\n        util.assert(this.connected_, \"sendRequest call when we're not connected not allowed.\");\r\n        this.realtime_.sendRequest(msg);\r\n        if (onResponse) {\r\n            this.requestCBHash_[curReqNum] = onResponse;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var queryId = query.queryIdentifier();\r\n        var pathString = query.path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + queryId);\r\n        this.listens_[pathString] = this.listens_[pathString] || {};\r\n        util.assert(query.getQueryParams().isDefault() ||\r\n            !query.getQueryParams().loadsAllData(), 'listen() called for non-default but complete query');\r\n        util.assert(!this.listens_[pathString][queryId], 'listen() called twice for same path/queryId.');\r\n        var listenSpec = {\r\n            onComplete: onComplete,\r\n            hashFn: currentHashFn,\r\n            query: query,\r\n            tag: tag\r\n        };\r\n        this.listens_[pathString][queryId] = listenSpec;\r\n        if (this.connected_) {\r\n            this.sendListen_(listenSpec);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!{onComplete(),\r\n     *           hashFn():!string,\r\n     *           query: !Query,\r\n     *           tag: ?number}} listenSpec\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.sendListen_ = function (listenSpec) {\r\n        var _this = this;\r\n        var query = listenSpec.query;\r\n        var pathString = query.path.toString();\r\n        var queryId = query.queryIdentifier();\r\n        this.log_('Listen on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'q';\r\n        // Only bother to send query if it's non-default.\r\n        if (listenSpec.tag) {\r\n            req['q'] = query.queryObject();\r\n            req['t'] = listenSpec.tag;\r\n        }\r\n        req[ /*hash*/'h'] = listenSpec.hashFn();\r\n        this.sendRequest(action, req, function (message) {\r\n            var payload = message[ /*data*/'d'];\r\n            var status = message[ /*status*/'s'];\r\n            // print warnings in any case...\r\n            PersistentConnection.warnOnListenWarnings_(payload, query);\r\n            var currentListenSpec = _this.listens_[pathString] && _this.listens_[pathString][queryId];\r\n            // only trigger actions if the listen hasn't been removed and readded\r\n            if (currentListenSpec === listenSpec) {\r\n                _this.log_('listen response', message);\r\n                if (status !== 'ok') {\r\n                    _this.removeListen_(pathString, queryId);\r\n                }\r\n                if (listenSpec.onComplete) {\r\n                    listenSpec.onComplete(status, payload);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @param {*} payload\r\n     * @param {!Query} query\r\n     * @private\r\n     */\r\n    PersistentConnection.warnOnListenWarnings_ = function (payload, query) {\r\n        if (payload && typeof payload === 'object' && util.contains(payload, 'w')) {\r\n            var warnings = util.safeGet(payload, 'w');\r\n            if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\r\n                var indexSpec = '\".indexOn\": \"' +\r\n                    query\r\n                        .getQueryParams()\r\n                        .getIndex()\r\n                        .toString() +\r\n                    '\"';\r\n                var indexPath = query.path.toString();\r\n                warn(\"Using an unspecified index. Your data will be downloaded and \" +\r\n                    (\"filtered on the client. Consider adding \" + indexSpec + \" at \") +\r\n                    (indexPath + \" to your security rules for better performance.\"));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.refreshAuthToken = function (token) {\r\n        this.authToken_ = token;\r\n        this.log_('Auth token refreshed');\r\n        if (this.authToken_) {\r\n            this.tryAuth();\r\n        }\r\n        else {\r\n            //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\r\n            //the credential so we dont become authenticated next time we connect.\r\n            if (this.connected_) {\r\n                this.sendRequest('unauth', {}, function () { });\r\n            }\r\n        }\r\n        this.reduceReconnectDelayIfAdminCredential_(token);\r\n    };\r\n    /**\r\n     * @param {!string} credential\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_ = function (credential) {\r\n        // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\r\n        // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\r\n        var isFirebaseSecret = credential && credential.length === 40;\r\n        if (isFirebaseSecret || util.isAdmin(credential)) {\r\n            this.log_('Admin auth credential detected.  Reducing max reconnect time.');\r\n            this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n        }\r\n    };\r\n    /**\r\n     * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\r\n     * a auth revoked (the connection is closed).\r\n     */\r\n    PersistentConnection.prototype.tryAuth = function () {\r\n        var _this = this;\r\n        if (this.connected_ && this.authToken_) {\r\n            var token_1 = this.authToken_;\r\n            var authMethod = util.isValidFormat(token_1) ? 'auth' : 'gauth';\r\n            var requestData = { cred: token_1 };\r\n            if (this.authOverride_ === null) {\r\n                requestData['noauth'] = true;\r\n            }\r\n            else if (typeof this.authOverride_ === 'object') {\r\n                requestData['authvar'] = this.authOverride_;\r\n            }\r\n            this.sendRequest(authMethod, requestData, function (res) {\r\n                var status = res[ /*status*/'s'];\r\n                var data = res[ /*data*/'d'] || 'error';\r\n                if (_this.authToken_ === token_1) {\r\n                    if (status === 'ok') {\r\n                        _this.invalidAuthTokenCount_ = 0;\r\n                    }\r\n                    else {\r\n                        // Triggers reconnect and force refresh for auth token\r\n                        _this.onAuthRevoked_(status, data);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.unlisten = function (query, tag) {\r\n        var pathString = query.path.toString();\r\n        var queryId = query.queryIdentifier();\r\n        this.log_('Unlisten called for ' + pathString + ' ' + queryId);\r\n        util.assert(query.getQueryParams().isDefault() ||\r\n            !query.getQueryParams().loadsAllData(), 'unlisten() called for non-default but complete query');\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && this.connected_) {\r\n            this.sendUnlisten_(pathString, queryId, query.queryObject(), tag);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendUnlisten_ = function (pathString, queryId, queryObj, tag) {\r\n        this.log_('Unlisten on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'n';\r\n        // Only bother sending queryId if it's non-default.\r\n        if (tag) {\r\n            req['q'] = queryObj;\r\n            req['t'] = tag;\r\n        }\r\n        this.sendRequest(action, req);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectPut = function (pathString, data, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('o', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'o',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectMerge = function (pathString, data, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('om', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'om',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectCancel = function (pathString, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('oc', pathString, null, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'oc',\r\n                data: null,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendOnDisconnect_ = function (action, pathString, data, onComplete) {\r\n        var request = { /*path*/ p: pathString, /*data*/ d: data };\r\n        this.log_('onDisconnect ' + action, request);\r\n        this.sendRequest(action, request, function (response) {\r\n            if (onComplete) {\r\n                setTimeout(function () {\r\n                    onComplete(response[ /*status*/'s'], response[ /* data */'d']);\r\n                }, Math.floor(0));\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('p', pathString, data, onComplete, hash);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.merge = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('m', pathString, data, onComplete, hash);\r\n    };\r\n    PersistentConnection.prototype.putInternal = function (action, pathString, data, onComplete, hash) {\r\n        var request = {\r\n            /*path*/ p: pathString,\r\n            /*data*/ d: data\r\n        };\r\n        if (hash !== undefined)\r\n            request[ /*hash*/'h'] = hash;\r\n        // TODO: Only keep track of the most recent put for a given path?\r\n        this.outstandingPuts_.push({\r\n            action: action,\r\n            request: request,\r\n            onComplete: onComplete\r\n        });\r\n        this.outstandingPutCount_++;\r\n        var index = this.outstandingPuts_.length - 1;\r\n        if (this.connected_) {\r\n            this.sendPut_(index);\r\n        }\r\n        else {\r\n            this.log_('Buffering put: ' + pathString);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendPut_ = function (index) {\r\n        var _this = this;\r\n        var action = this.outstandingPuts_[index].action;\r\n        var request = this.outstandingPuts_[index].request;\r\n        var onComplete = this.outstandingPuts_[index].onComplete;\r\n        this.outstandingPuts_[index].queued = this.connected_;\r\n        this.sendRequest(action, request, function (message) {\r\n            _this.log_(action + ' response', message);\r\n            delete _this.outstandingPuts_[index];\r\n            _this.outstandingPutCount_--;\r\n            // Clean up array occasionally.\r\n            if (_this.outstandingPutCount_ === 0) {\r\n                _this.outstandingPuts_ = [];\r\n            }\r\n            if (onComplete)\r\n                onComplete(message[ /*status*/'s'], message[ /* data */'d']);\r\n        });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.reportStats = function (stats) {\r\n        var _this = this;\r\n        // If we're not connected, we just drop the stats.\r\n        if (this.connected_) {\r\n            var request = { /*counters*/ c: stats };\r\n            this.log_('reportStats', request);\r\n            this.sendRequest(/*stats*/ 's', request, function (result) {\r\n                var status = result[ /*status*/'s'];\r\n                if (status !== 'ok') {\r\n                    var errorReason = result[ /* data */'d'];\r\n                    _this.log_('reportStats', 'Error sending stats: ' + errorReason);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @param {*} message\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.onDataMessage_ = function (message) {\r\n        if ('r' in message) {\r\n            // this is a response\r\n            this.log_('from server: ' + util.stringify(message));\r\n            var reqNum = message['r'];\r\n            var onResponse = this.requestCBHash_[reqNum];\r\n            if (onResponse) {\r\n                delete this.requestCBHash_[reqNum];\r\n                onResponse(message[ /*body*/'b']);\r\n            }\r\n        }\r\n        else if ('error' in message) {\r\n            throw 'A server-side error has occurred: ' + message['error'];\r\n        }\r\n        else if ('a' in message) {\r\n            // a and b are action and body, respectively\r\n            this.onDataPush_(message['a'], message['b']);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDataPush_ = function (action, body) {\r\n        this.log_('handleServerMessage', action, body);\r\n        if (action === 'd')\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge*/ false, body['t']);\r\n        else if (action === 'm')\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge=*/ true, body['t']);\r\n        else if (action === 'c')\r\n            this.onListenRevoked_(body[ /*path*/'p'], body[ /*query*/'q']);\r\n        else if (action === 'ac')\r\n            this.onAuthRevoked_(body[ /*status code*/'s'], body[ /* explanation */'d']);\r\n        else if (action === 'sd')\r\n            this.onSecurityDebugPacket_(body);\r\n        else\r\n            error('Unrecognized action received from server: ' +\r\n                util.stringify(action) +\r\n                '\\nAre you using the latest client?');\r\n    };\r\n    PersistentConnection.prototype.onReady_ = function (timestamp, sessionId) {\r\n        this.log_('connection ready');\r\n        this.connected_ = true;\r\n        this.lastConnectionEstablishedTime_ = new Date().getTime();\r\n        this.handleTimestamp_(timestamp);\r\n        this.lastSessionId = sessionId;\r\n        if (this.firstConnection_) {\r\n            this.sendConnectStats_();\r\n        }\r\n        this.restoreState_();\r\n        this.firstConnection_ = false;\r\n        this.onConnectStatus_(true);\r\n    };\r\n    PersistentConnection.prototype.scheduleConnect_ = function (timeout) {\r\n        var _this = this;\r\n        util.assert(!this.realtime_, \"Scheduling a connect when we're already connected/ing?\");\r\n        if (this.establishConnectionTimer_) {\r\n            clearTimeout(this.establishConnectionTimer_);\r\n        }\r\n        // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\r\n        // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\r\n        this.establishConnectionTimer_ = setTimeout(function () {\r\n            _this.establishConnectionTimer_ = null;\r\n            _this.establishConnection_();\r\n        }, Math.floor(timeout));\r\n    };\r\n    /**\r\n     * @param {boolean} visible\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.onVisible_ = function (visible) {\r\n        // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\r\n        if (visible &&\r\n            !this.visible_ &&\r\n            this.reconnectDelay_ === this.maxReconnectDelay_) {\r\n            this.log_('Window became visible.  Reducing delay.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        this.visible_ = visible;\r\n    };\r\n    PersistentConnection.prototype.onOnline_ = function (online) {\r\n        if (online) {\r\n            this.log_('Browser went online.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        else {\r\n            this.log_('Browser went offline.  Killing connection.');\r\n            if (this.realtime_) {\r\n                this.realtime_.close();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onRealtimeDisconnect_ = function () {\r\n        this.log_('data client disconnected');\r\n        this.connected_ = false;\r\n        this.realtime_ = null;\r\n        // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\r\n        this.cancelSentTransactions_();\r\n        // Clear out the pending requests.\r\n        this.requestCBHash_ = {};\r\n        if (this.shouldReconnect_()) {\r\n            if (!this.visible_) {\r\n                this.log_(\"Window isn't visible.  Delaying reconnect.\");\r\n                this.reconnectDelay_ = this.maxReconnectDelay_;\r\n                this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            }\r\n            else if (this.lastConnectionEstablishedTime_) {\r\n                // If we've been connected long enough, reset reconnect delay to minimum.\r\n                var timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;\r\n                if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT)\r\n                    this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n                this.lastConnectionEstablishedTime_ = null;\r\n            }\r\n            var timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;\r\n            var reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);\r\n            reconnectDelay = Math.random() * reconnectDelay;\r\n            this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\r\n            this.scheduleConnect_(reconnectDelay);\r\n            // Adjust reconnect delay for next time.\r\n            this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);\r\n        }\r\n        this.onConnectStatus_(false);\r\n    };\r\n    PersistentConnection.prototype.establishConnection_ = function () {\r\n        if (this.shouldReconnect_()) {\r\n            this.log_('Making a connection attempt');\r\n            this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            this.lastConnectionEstablishedTime_ = null;\r\n            var onDataMessage_1 = this.onDataMessage_.bind(this);\r\n            var onReady_1 = this.onReady_.bind(this);\r\n            var onDisconnect_1 = this.onRealtimeDisconnect_.bind(this);\r\n            var connId_1 = this.id + ':' + PersistentConnection.nextConnectionId_++;\r\n            var self_1 = this;\r\n            var lastSessionId_1 = this.lastSessionId;\r\n            var canceled_1 = false;\r\n            var connection_1 = null;\r\n            var closeFn_1 = function () {\r\n                if (connection_1) {\r\n                    connection_1.close();\r\n                }\r\n                else {\r\n                    canceled_1 = true;\r\n                    onDisconnect_1();\r\n                }\r\n            };\r\n            var sendRequestFn = function (msg) {\r\n                util.assert(connection_1, \"sendRequest call when we're not connected not allowed.\");\r\n                connection_1.sendRequest(msg);\r\n            };\r\n            this.realtime_ = {\r\n                close: closeFn_1,\r\n                sendRequest: sendRequestFn\r\n            };\r\n            var forceRefresh = this.forceTokenRefresh_;\r\n            this.forceTokenRefresh_ = false;\r\n            // First fetch auth token, and establish connection after fetching the token was successful\r\n            this.authTokenProvider_\r\n                .getToken(forceRefresh)\r\n                .then(function (result) {\r\n                if (!canceled_1) {\r\n                    log('getToken() completed. Creating connection.');\r\n                    self_1.authToken_ = result && result.accessToken;\r\n                    connection_1 = new Connection(connId_1, self_1.repoInfo_, onDataMessage_1, onReady_1, onDisconnect_1, \r\n                    /* onKill= */ function (reason) {\r\n                        warn(reason + ' (' + self_1.repoInfo_.toString() + ')');\r\n                        self_1.interrupt(SERVER_KILL_INTERRUPT_REASON);\r\n                    }, lastSessionId_1);\r\n                }\r\n                else {\r\n                    log('getToken() completed but was canceled');\r\n                }\r\n            })\r\n                .then(null, function (error) {\r\n                self_1.log_('Failed to get token: ' + error);\r\n                if (!canceled_1) {\r\n                    if (util.CONSTANTS.NODE_ADMIN) {\r\n                        // This may be a critical error for the Admin Node.js SDK, so log a warning.\r\n                        // But getToken() may also just have temporarily failed, so we still want to\r\n                        // continue retrying.\r\n                        warn(error);\r\n                    }\r\n                    closeFn_1();\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} reason\r\n     */\r\n    PersistentConnection.prototype.interrupt = function (reason) {\r\n        log('Interrupting connection for reason: ' + reason);\r\n        this.interruptReasons_[reason] = true;\r\n        if (this.realtime_) {\r\n            this.realtime_.close();\r\n        }\r\n        else {\r\n            if (this.establishConnectionTimer_) {\r\n                clearTimeout(this.establishConnectionTimer_);\r\n                this.establishConnectionTimer_ = null;\r\n            }\r\n            if (this.connected_) {\r\n                this.onRealtimeDisconnect_();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} reason\r\n     */\r\n    PersistentConnection.prototype.resume = function (reason) {\r\n        log('Resuming connection for reason: ' + reason);\r\n        delete this.interruptReasons_[reason];\r\n        if (util.isEmpty(this.interruptReasons_)) {\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.handleTimestamp_ = function (timestamp) {\r\n        var delta = timestamp - new Date().getTime();\r\n        this.onServerInfoUpdate_({ serverTimeOffset: delta });\r\n    };\r\n    PersistentConnection.prototype.cancelSentTransactions_ = function () {\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            var put = this.outstandingPuts_[i];\r\n            if (put && /*hash*/ 'h' in put.request && put.queued) {\r\n                if (put.onComplete)\r\n                    put.onComplete('disconnect');\r\n                delete this.outstandingPuts_[i];\r\n                this.outstandingPutCount_--;\r\n            }\r\n        }\r\n        // Clean up array occasionally.\r\n        if (this.outstandingPutCount_ === 0)\r\n            this.outstandingPuts_ = [];\r\n    };\r\n    /**\r\n     * @param {!string} pathString\r\n     * @param {Array.<*>=} query\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.onListenRevoked_ = function (pathString, query) {\r\n        // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\r\n        var queryId;\r\n        if (!query) {\r\n            queryId = 'default';\r\n        }\r\n        else {\r\n            queryId = query.map(function (q) { return ObjectToUniqueKey(q); }).join('$');\r\n        }\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && listen.onComplete)\r\n            listen.onComplete('permission_denied');\r\n    };\r\n    /**\r\n     * @param {!string} pathString\r\n     * @param {!string} queryId\r\n     * @return {{queries:Array.<Query>, onComplete:function(string)}}\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.removeListen_ = function (pathString, queryId) {\r\n        var normalizedPathString = new Path(pathString).toString(); // normalize path.\r\n        var listen;\r\n        if (this.listens_[normalizedPathString] !== undefined) {\r\n            listen = this.listens_[normalizedPathString][queryId];\r\n            delete this.listens_[normalizedPathString][queryId];\r\n            if (util.getCount(this.listens_[normalizedPathString]) === 0) {\r\n                delete this.listens_[normalizedPathString];\r\n            }\r\n        }\r\n        else {\r\n            // all listens for this path has already been removed\r\n            listen = undefined;\r\n        }\r\n        return listen;\r\n    };\r\n    PersistentConnection.prototype.onAuthRevoked_ = function (statusCode, explanation) {\r\n        log('Auth token revoked: ' + statusCode + '/' + explanation);\r\n        this.authToken_ = null;\r\n        this.forceTokenRefresh_ = true;\r\n        this.realtime_.close();\r\n        if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\r\n            // We'll wait a couple times before logging the warning / increasing the\r\n            // retry period since oauth tokens will report as \"invalid\" if they're\r\n            // just expired. Plus there may be transient issues that resolve themselves.\r\n            this.invalidAuthTokenCount_++;\r\n            if (this.invalidAuthTokenCount_ >= INVALID_AUTH_TOKEN_THRESHOLD) {\r\n                // Set a long reconnect delay because recovery is unlikely\r\n                this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n                // Notify the auth token provider that the token is invalid, which will log\r\n                // a warning\r\n                this.authTokenProvider_.notifyForInvalidToken();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onSecurityDebugPacket_ = function (body) {\r\n        if (this.securityDebugCallback_) {\r\n            this.securityDebugCallback_(body);\r\n        }\r\n        else {\r\n            if ('msg' in body) {\r\n                console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.restoreState_ = function () {\r\n        var _this = this;\r\n        //Re-authenticate ourselves if we have a credential stored.\r\n        this.tryAuth();\r\n        // Puts depend on having received the corresponding data update from the server before they complete, so we must\r\n        // make sure to send listens before puts.\r\n        util.forEach(this.listens_, function (pathString, queries) {\r\n            util.forEach(queries, function (key, listenSpec) {\r\n                _this.sendListen_(listenSpec);\r\n            });\r\n        });\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            if (this.outstandingPuts_[i])\r\n                this.sendPut_(i);\r\n        }\r\n        while (this.onDisconnectRequestQueue_.length) {\r\n            var request = this.onDisconnectRequestQueue_.shift();\r\n            this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);\r\n        }\r\n    };\r\n    /**\r\n     * Sends client stats for first connection\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.sendConnectStats_ = function () {\r\n        var stats = {};\r\n        var clientName = 'js';\r\n        if (util.CONSTANTS.NODE_ADMIN) {\r\n            clientName = 'admin_node';\r\n        }\r\n        else if (util.CONSTANTS.NODE_CLIENT) {\r\n            clientName = 'node';\r\n        }\r\n        stats['sdk.' + clientName + '.' + firebase.SDK_VERSION.replace(/\\./g, '-')] = 1;\r\n        if (util.isMobileCordova()) {\r\n            stats['framework.cordova'] = 1;\r\n        }\r\n        else if (util.isReactNative()) {\r\n            stats['framework.reactnative'] = 1;\r\n        }\r\n        this.reportStats(stats);\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.shouldReconnect_ = function () {\r\n        var online = OnlineMonitor.getInstance().currentlyOnline();\r\n        return util.isEmpty(this.interruptReasons_) && online;\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    PersistentConnection.nextPersistentConnectionId_ = 0;\r\n    /**\r\n     * Counter for number of connections created. Mainly used for tagging in the logs\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    PersistentConnection.nextConnectionId_ = 0;\r\n    return PersistentConnection;\r\n}(ServerActions));\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of ServerActions that communicates with the server via REST requests.\r\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\r\n * persistent connection (using WebSockets or long-polling)\r\n */\r\nvar ReadonlyRestClient = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ReadonlyRestClient, _super);\r\n    /**\r\n     * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\r\n     * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\r\n     * @param {AuthTokenProvider} authTokenProvider_\r\n     * @implements {ServerActions}\r\n     */\r\n    function ReadonlyRestClient(repoInfo_, onDataUpdate_, authTokenProvider_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        /** @private {function(...[*])} */\r\n        _this.log_ = logWrapper('p:rest:');\r\n        /**\r\n         * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\r\n         * that's been removed. :-/\r\n         *\r\n         * @private {!Object.<string, !Object>}\r\n         */\r\n        _this.listens_ = {};\r\n        return _this;\r\n    }\r\n    ReadonlyRestClient.prototype.reportStats = function (stats) {\r\n        throw new Error('Method not implemented.');\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @param {?number=} tag\r\n     * @return {string}\r\n     * @private\r\n     */\r\n    ReadonlyRestClient.getListenId_ = function (query, tag) {\r\n        if (tag !== undefined) {\r\n            return 'tag$' + tag;\r\n        }\r\n        else {\r\n            util.assert(query.getQueryParams().isDefault(), \"should have a tag if it's not a default query.\");\r\n            return query.path.toString();\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var _this = this;\r\n        var pathString = query.path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + query.queryIdentifier());\r\n        // Mark this listener so we can tell if it's removed.\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        var thisListen = {};\r\n        this.listens_[listenId] = thisListen;\r\n        var queryStringParameters = query\r\n            .getQueryParams()\r\n            .toRestQueryStringParameters();\r\n        this.restRequest_(pathString + '.json', queryStringParameters, function (error, result) {\r\n            var data = result;\r\n            if (error === 404) {\r\n                data = null;\r\n                error = null;\r\n            }\r\n            if (error === null) {\r\n                _this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\r\n            }\r\n            if (util.safeGet(_this.listens_, listenId) === thisListen) {\r\n                var status_1;\r\n                if (!error) {\r\n                    status_1 = 'ok';\r\n                }\r\n                else if (error == 401) {\r\n                    status_1 = 'permission_denied';\r\n                }\r\n                else {\r\n                    status_1 = 'rest_error:' + error;\r\n                }\r\n                onComplete(status_1, null);\r\n            }\r\n        });\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.unlisten = function (query, tag) {\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        delete this.listens_[listenId];\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.refreshAuthToken = function (token) {\r\n        // no-op since we just always call getToken.\r\n    };\r\n    /**\r\n     * Performs a REST request to the given path, with the provided query string parameters,\r\n     * and any auth credentials we have.\r\n     *\r\n     * @param {!string} pathString\r\n     * @param {!Object.<string, *>} queryStringParameters\r\n     * @param {?function(?number, *=)} callback\r\n     * @private\r\n     */\r\n    ReadonlyRestClient.prototype.restRequest_ = function (pathString, queryStringParameters, callback) {\r\n        var _this = this;\r\n        if (queryStringParameters === void 0) { queryStringParameters = {}; }\r\n        queryStringParameters['format'] = 'export';\r\n        this.authTokenProvider_\r\n            .getToken(/*forceRefresh=*/ false)\r\n            .then(function (authTokenData) {\r\n            var authToken = authTokenData && authTokenData.accessToken;\r\n            if (authToken) {\r\n                queryStringParameters['auth'] = authToken;\r\n            }\r\n            var url = (_this.repoInfo_.secure ? 'https://' : 'http://') +\r\n                _this.repoInfo_.host +\r\n                pathString +\r\n                '?' +\r\n                'ns=' +\r\n                _this.repoInfo_.namespace +\r\n                util.querystring(queryStringParameters);\r\n            _this.log_('Sending REST request for ' + url);\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = function () {\r\n                if (callback && xhr.readyState === 4) {\r\n                    _this.log_('REST Response for ' + url + ' received. status:', xhr.status, 'response:', xhr.responseText);\r\n                    var res = null;\r\n                    if (xhr.status >= 200 && xhr.status < 300) {\r\n                        try {\r\n                            res = util.jsonEval(xhr.responseText);\r\n                        }\r\n                        catch (e) {\r\n                            warn('Failed to parse JSON response for ' +\r\n                                url +\r\n                                ': ' +\r\n                                xhr.responseText);\r\n                        }\r\n                        callback(null, res);\r\n                    }\r\n                    else {\r\n                        // 401 and 404 are expected.\r\n                        if (xhr.status !== 401 && xhr.status !== 404) {\r\n                            warn('Got unsuccessful REST response for ' +\r\n                                url +\r\n                                ' Status: ' +\r\n                                xhr.status);\r\n                        }\r\n                        callback(xhr.status);\r\n                    }\r\n                    callback = null;\r\n                }\r\n            };\r\n            xhr.open('GET', url, /*asynchronous=*/ true);\r\n            xhr.send();\r\n        });\r\n    };\r\n    return ReadonlyRestClient;\r\n}(ServerActions));\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar INTERRUPT_REASON = 'repo_interrupt';\r\n/**\r\n * A connection to a single data repository.\r\n */\r\nvar Repo = /** @class */ (function () {\r\n    /**\r\n     * @param {!RepoInfo} repoInfo_\r\n     * @param {boolean} forceRestClient\r\n     * @param {!FirebaseApp} app\r\n     */\r\n    function Repo(repoInfo_, forceRestClient, app) {\r\n        var _this = this;\r\n        this.repoInfo_ = repoInfo_;\r\n        this.app = app;\r\n        this.dataUpdateCount = 0;\r\n        this.statsListener_ = null;\r\n        this.eventQueue_ = new EventQueue();\r\n        this.nextWriteId_ = 1;\r\n        this.interceptServerDataCallback_ = null;\r\n        // A list of data pieces and paths to be set when this client disconnects.\r\n        this.onDisconnect_ = new SparseSnapshotTree();\r\n        /**\r\n         * TODO: This should be @private but it's used by test_access.js and internal.js\r\n         * @type {?PersistentConnection}\r\n         */\r\n        this.persistentConnection_ = null;\r\n        /** @type {!AuthTokenProvider} */\r\n        var authTokenProvider = new AuthTokenProvider(app);\r\n        this.stats_ = StatsManager.getCollection(repoInfo_);\r\n        if (forceRestClient || beingCrawled()) {\r\n            this.server_ = new ReadonlyRestClient(this.repoInfo_, this.onDataUpdate_.bind(this), authTokenProvider);\r\n            // Minor hack: Fire onConnect immediately, since there's no actual connection.\r\n            setTimeout(this.onConnectStatus_.bind(this, true), 0);\r\n        }\r\n        else {\r\n            var authOverride = app.options['databaseAuthVariableOverride'];\r\n            // Validate authOverride\r\n            if (typeof authOverride !== 'undefined' && authOverride !== null) {\r\n                if (typeof authOverride !== 'object') {\r\n                    throw new Error('Only objects are supported for option databaseAuthVariableOverride');\r\n                }\r\n                try {\r\n                    util.stringify(authOverride);\r\n                }\r\n                catch (e) {\r\n                    throw new Error('Invalid authOverride provided: ' + e);\r\n                }\r\n            }\r\n            this.persistentConnection_ = new PersistentConnection(this.repoInfo_, this.onDataUpdate_.bind(this), this.onConnectStatus_.bind(this), this.onServerInfoUpdate_.bind(this), authTokenProvider, authOverride);\r\n            this.server_ = this.persistentConnection_;\r\n        }\r\n        authTokenProvider.addTokenChangeListener(function (token) {\r\n            _this.server_.refreshAuthToken(token);\r\n        });\r\n        // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\r\n        // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\r\n        this.statsReporter_ = StatsManager.getOrCreateReporter(repoInfo_, function () { return new StatsReporter(_this.stats_, _this.server_); });\r\n        this.transactions_init_();\r\n        // Used for .info.\r\n        this.infoData_ = new SnapshotHolder();\r\n        this.infoSyncTree_ = new SyncTree({\r\n            startListening: function (query, tag, currentHashFn, onComplete) {\r\n                var infoEvents = [];\r\n                var node = _this.infoData_.getNode(query.path);\r\n                // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\r\n                // on initial data...\r\n                if (!node.isEmpty()) {\r\n                    infoEvents = _this.infoSyncTree_.applyServerOverwrite(query.path, node);\r\n                    setTimeout(function () {\r\n                        onComplete('ok');\r\n                    }, 0);\r\n                }\r\n                return infoEvents;\r\n            },\r\n            stopListening: function () { }\r\n        });\r\n        this.updateInfo_('connected', false);\r\n        this.serverSyncTree_ = new SyncTree({\r\n            startListening: function (query, tag, currentHashFn, onComplete) {\r\n                _this.server_.listen(query, currentHashFn, tag, function (status, data) {\r\n                    var events = onComplete(status, data);\r\n                    _this.eventQueue_.raiseEventsForChangedPath(query.path, events);\r\n                });\r\n                // No synchronous events for network-backed sync trees\r\n                return [];\r\n            },\r\n            stopListening: function (query, tag) {\r\n                _this.server_.unlisten(query, tag);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @return {string}  The URL corresponding to the root of this Firebase.\r\n     */\r\n    Repo.prototype.toString = function () {\r\n        return ((this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host);\r\n    };\r\n    /**\r\n     * @return {!string} The namespace represented by the repo.\r\n     */\r\n    Repo.prototype.name = function () {\r\n        return this.repoInfo_.namespace;\r\n    };\r\n    /**\r\n     * @return {!number} The time in milliseconds, taking the server offset into account if we have one.\r\n     */\r\n    Repo.prototype.serverTime = function () {\r\n        var offsetNode = this.infoData_.getNode(new Path('.info/serverTimeOffset'));\r\n        var offset = offsetNode.val() || 0;\r\n        return new Date().getTime() + offset;\r\n    };\r\n    /**\r\n     * Generate ServerValues using some variables from the repo object.\r\n     * @return {!Object}\r\n     */\r\n    Repo.prototype.generateServerValues = function () {\r\n        return generateWithValues({\r\n            timestamp: this.serverTime()\r\n        });\r\n    };\r\n    /**\r\n     * Called by realtime when we get new messages from the server.\r\n     *\r\n     * @private\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {boolean} isMerge\r\n     * @param {?number} tag\r\n     */\r\n    Repo.prototype.onDataUpdate_ = function (pathString, data, isMerge, tag) {\r\n        // For testing.\r\n        this.dataUpdateCount++;\r\n        var path = new Path(pathString);\r\n        data = this.interceptServerDataCallback_\r\n            ? this.interceptServerDataCallback_(pathString, data)\r\n            : data;\r\n        var events = [];\r\n        if (tag) {\r\n            if (isMerge) {\r\n                var taggedChildren = util.map(data, function (raw) {\r\n                    return nodeFromJSON$1(raw);\r\n                });\r\n                events = this.serverSyncTree_.applyTaggedQueryMerge(path, taggedChildren, tag);\r\n            }\r\n            else {\r\n                var taggedSnap = nodeFromJSON$1(data);\r\n                events = this.serverSyncTree_.applyTaggedQueryOverwrite(path, taggedSnap, tag);\r\n            }\r\n        }\r\n        else if (isMerge) {\r\n            var changedChildren = util.map(data, function (raw) {\r\n                return nodeFromJSON$1(raw);\r\n            });\r\n            events = this.serverSyncTree_.applyServerMerge(path, changedChildren);\r\n        }\r\n        else {\r\n            var snap = nodeFromJSON$1(data);\r\n            events = this.serverSyncTree_.applyServerOverwrite(path, snap);\r\n        }\r\n        var affectedPath = path;\r\n        if (events.length > 0) {\r\n            // Since we have a listener outstanding for each transaction, receiving any events\r\n            // is a proxy for some change having occurred.\r\n            affectedPath = this.rerunTransactions_(path);\r\n        }\r\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, events);\r\n    };\r\n    /**\r\n     * TODO: This should be @private but it's used by test_access.js and internal.js\r\n     * @param {?function(!string, *):*} callback\r\n     * @private\r\n     */\r\n    Repo.prototype.interceptServerData_ = function (callback) {\r\n        this.interceptServerDataCallback_ = callback;\r\n    };\r\n    /**\r\n     * @param {!boolean} connectStatus\r\n     * @private\r\n     */\r\n    Repo.prototype.onConnectStatus_ = function (connectStatus) {\r\n        this.updateInfo_('connected', connectStatus);\r\n        if (connectStatus === false) {\r\n            this.runOnDisconnectEvents_();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Object} updates\r\n     * @private\r\n     */\r\n    Repo.prototype.onServerInfoUpdate_ = function (updates) {\r\n        var _this = this;\r\n        each(updates, function (value, key) {\r\n            _this.updateInfo_(key, value);\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param {!string} pathString\r\n     * @param {*} value\r\n     * @private\r\n     */\r\n    Repo.prototype.updateInfo_ = function (pathString, value) {\r\n        var path = new Path('/.info/' + pathString);\r\n        var newNode = nodeFromJSON$1(value);\r\n        this.infoData_.updateSnapshot(path, newNode);\r\n        var events = this.infoSyncTree_.applyServerOverwrite(path, newNode);\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n    };\r\n    /**\r\n     * @return {!number}\r\n     * @private\r\n     */\r\n    Repo.prototype.getNextWriteId_ = function () {\r\n        return this.nextWriteId_++;\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} newVal\r\n     * @param {number|string|null} newPriority\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.setWithPriority = function (path, newVal, newPriority, onComplete) {\r\n        var _this = this;\r\n        this.log_('set', {\r\n            path: path.toString(),\r\n            value: newVal,\r\n            priority: newPriority\r\n        });\r\n        // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\r\n        // (b) store unresolved paths on JSON parse\r\n        var serverValues = this.generateServerValues();\r\n        var newNodeUnresolved = nodeFromJSON$1(newVal, newPriority);\r\n        var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\r\n        var writeId = this.getNextWriteId_();\r\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, writeId, true);\r\n        this.eventQueue_.queueEvents(events);\r\n        this.server_.put(path.toString(), newNodeUnresolved.val(/*export=*/ true), function (status, errorReason) {\r\n            var success = status === 'ok';\r\n            if (!success) {\r\n                warn('set at ' + path + ' failed: ' + status);\r\n            }\r\n            var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId, !success);\r\n            _this.eventQueue_.raiseEventsForChangedPath(path, clearEvents);\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n        var affectedPath = this.abortTransactions_(path);\r\n        this.rerunTransactions_(affectedPath);\r\n        // We queued the events above, so just flush the queue here\r\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, []);\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!Object} childrenToMerge\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.update = function (path, childrenToMerge, onComplete) {\r\n        var _this = this;\r\n        this.log_('update', { path: path.toString(), value: childrenToMerge });\r\n        // Start with our existing data and merge each child into it.\r\n        var empty = true;\r\n        var serverValues = this.generateServerValues();\r\n        var changedChildren = {};\r\n        util.forEach(childrenToMerge, function (changedKey, changedValue) {\r\n            empty = false;\r\n            var newNodeUnresolved = nodeFromJSON$1(changedValue);\r\n            changedChildren[changedKey] = resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\r\n        });\r\n        if (!empty) {\r\n            var writeId_1 = this.getNextWriteId_();\r\n            var events = this.serverSyncTree_.applyUserMerge(path, changedChildren, writeId_1);\r\n            this.eventQueue_.queueEvents(events);\r\n            this.server_.merge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n                var success = status === 'ok';\r\n                if (!success) {\r\n                    warn('update at ' + path + ' failed: ' + status);\r\n                }\r\n                var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId_1, !success);\r\n                var affectedPath = clearEvents.length > 0 ? _this.rerunTransactions_(path) : path;\r\n                _this.eventQueue_.raiseEventsForChangedPath(affectedPath, clearEvents);\r\n                _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n            });\r\n            util.forEach(childrenToMerge, function (changedPath) {\r\n                var affectedPath = _this.abortTransactions_(path.child(changedPath));\r\n                _this.rerunTransactions_(affectedPath);\r\n            });\r\n            // We queued the events above, so just flush the queue here\r\n            this.eventQueue_.raiseEventsForChangedPath(path, []);\r\n        }\r\n        else {\r\n            log(\"update() called with empty data.  Don't do anything.\");\r\n            this.callOnCompleteCallback(onComplete, 'ok');\r\n        }\r\n    };\r\n    /**\r\n     * Applies all of the changes stored up in the onDisconnect_ tree.\r\n     * @private\r\n     */\r\n    Repo.prototype.runOnDisconnectEvents_ = function () {\r\n        var _this = this;\r\n        this.log_('onDisconnectEvents');\r\n        var serverValues = this.generateServerValues();\r\n        var resolvedOnDisconnectTree = resolveDeferredValueTree(this.onDisconnect_, serverValues);\r\n        var events = [];\r\n        resolvedOnDisconnectTree.forEachTree(Path.Empty, function (path, snap) {\r\n            events = events.concat(_this.serverSyncTree_.applyServerOverwrite(path, snap));\r\n            var affectedPath = _this.abortTransactions_(path);\r\n            _this.rerunTransactions_(affectedPath);\r\n        });\r\n        this.onDisconnect_ = new SparseSnapshotTree();\r\n        this.eventQueue_.raiseEventsForChangedPath(Path.Empty, events);\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.onDisconnectCancel = function (path, onComplete) {\r\n        var _this = this;\r\n        this.server_.onDisconnectCancel(path.toString(), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.forget(path);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} value\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.onDisconnectSet = function (path, value, onComplete) {\r\n        var _this = this;\r\n        var newNode = nodeFromJSON$1(value);\r\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.remember(path, newNode);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} value\r\n     * @param {*} priority\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.onDisconnectSetWithPriority = function (path, value, priority, onComplete) {\r\n        var _this = this;\r\n        var newNode = nodeFromJSON$1(value, priority);\r\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.remember(path, newNode);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} childrenToMerge\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.onDisconnectUpdate = function (path, childrenToMerge, onComplete) {\r\n        var _this = this;\r\n        if (util.isEmpty(childrenToMerge)) {\r\n            log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\r\n            this.callOnCompleteCallback(onComplete, 'ok');\r\n            return;\r\n        }\r\n        this.server_.onDisconnectMerge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                util.forEach(childrenToMerge, function (childName, childNode) {\r\n                    var newChildNode = nodeFromJSON$1(childNode);\r\n                    _this.onDisconnect_.remember(path.child(childName), newChildNode);\r\n                });\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @param {!EventRegistration} eventRegistration\r\n     */\r\n    Repo.prototype.addEventCallbackForQuery = function (query, eventRegistration) {\r\n        var events;\r\n        if (query.path.getFront() === '.info') {\r\n            events = this.infoSyncTree_.addEventRegistration(query, eventRegistration);\r\n        }\r\n        else {\r\n            events = this.serverSyncTree_.addEventRegistration(query, eventRegistration);\r\n        }\r\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @param {?EventRegistration} eventRegistration\r\n     */\r\n    Repo.prototype.removeEventCallbackForQuery = function (query, eventRegistration) {\r\n        // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\r\n        // a little bit by handling the return values anyways.\r\n        var events;\r\n        if (query.path.getFront() === '.info') {\r\n            events = this.infoSyncTree_.removeEventRegistration(query, eventRegistration);\r\n        }\r\n        else {\r\n            events = this.serverSyncTree_.removeEventRegistration(query, eventRegistration);\r\n        }\r\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\r\n    };\r\n    Repo.prototype.interrupt = function () {\r\n        if (this.persistentConnection_) {\r\n            this.persistentConnection_.interrupt(INTERRUPT_REASON);\r\n        }\r\n    };\r\n    Repo.prototype.resume = function () {\r\n        if (this.persistentConnection_) {\r\n            this.persistentConnection_.resume(INTERRUPT_REASON);\r\n        }\r\n    };\r\n    Repo.prototype.stats = function (showDelta) {\r\n        if (showDelta === void 0) { showDelta = false; }\r\n        if (typeof console === 'undefined')\r\n            return;\r\n        var stats;\r\n        if (showDelta) {\r\n            if (!this.statsListener_)\r\n                this.statsListener_ = new StatsListener(this.stats_);\r\n            stats = this.statsListener_.get();\r\n        }\r\n        else {\r\n            stats = this.stats_.get();\r\n        }\r\n        var longestName = Object.keys(stats).reduce(function (previousValue, currentValue) {\r\n            return Math.max(currentValue.length, previousValue);\r\n        }, 0);\r\n        util.forEach(stats, function (stat, value) {\r\n            // pad stat names to be the same length (plus 2 extra spaces).\r\n            for (var i = stat.length; i < longestName + 2; i++)\r\n                stat += ' ';\r\n            console.log(stat + value);\r\n        });\r\n    };\r\n    Repo.prototype.statsIncrementCounter = function (metric) {\r\n        this.stats_.incrementCounter(metric);\r\n        this.statsReporter_.includeStat(metric);\r\n    };\r\n    /**\r\n     * @param {...*} var_args\r\n     * @private\r\n     */\r\n    Repo.prototype.log_ = function () {\r\n        var var_args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            var_args[_i] = arguments[_i];\r\n        }\r\n        var prefix = '';\r\n        if (this.persistentConnection_) {\r\n            prefix = this.persistentConnection_.id + ':';\r\n        }\r\n        log.apply(void 0, [prefix].concat(var_args));\r\n    };\r\n    /**\r\n     * @param {?function(?Error, *=)} callback\r\n     * @param {!string} status\r\n     * @param {?string=} errorReason\r\n     */\r\n    Repo.prototype.callOnCompleteCallback = function (callback, status, errorReason) {\r\n        if (callback) {\r\n            exceptionGuard(function () {\r\n                if (status == 'ok') {\r\n                    callback(null);\r\n                }\r\n                else {\r\n                    var code = (status || 'error').toUpperCase();\r\n                    var message = code;\r\n                    if (errorReason)\r\n                        message += ': ' + errorReason;\r\n                    var error = new Error(message);\r\n                    error.code = code;\r\n                    callback(error);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    Object.defineProperty(Repo.prototype, \"database\", {\r\n        get: function () {\r\n            return this.__database || (this.__database = new Database(this));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Repo;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\r\nvar RangedFilter = /** @class */ (function () {\r\n    /**\r\n     * @param {!QueryParams} params\r\n     */\r\n    function RangedFilter(params) {\r\n        this.indexedFilter_ = new IndexedFilter(params.getIndex());\r\n        this.index_ = params.getIndex();\r\n        this.startPost_ = RangedFilter.getStartPost_(params);\r\n        this.endPost_ = RangedFilter.getEndPost_(params);\r\n    }\r\n    /**\r\n     * @return {!NamedNode}\r\n     */\r\n    RangedFilter.prototype.getStartPost = function () {\r\n        return this.startPost_;\r\n    };\r\n    /**\r\n     * @return {!NamedNode}\r\n     */\r\n    RangedFilter.prototype.getEndPost = function () {\r\n        return this.endPost_;\r\n    };\r\n    /**\r\n     * @param {!NamedNode} node\r\n     * @return {boolean}\r\n     */\r\n    RangedFilter.prototype.matches = function (node) {\r\n        return (this.index_.compare(this.getStartPost(), node) <= 0 &&\r\n            this.index_.compare(node, this.getEndPost()) <= 0);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        return this.indexedFilter_.updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (newSnap.isLeafNode()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            newSnap = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var filtered = newSnap.withIndex(this.index_);\r\n        // Don't support priorities on queries\r\n        filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n        var self = this;\r\n        newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            if (!self.matches(new NamedNode(key, childNode))) {\r\n                filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\r\n            }\r\n        });\r\n        return this.indexedFilter_.updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.getIndexedFilter = function () {\r\n        return this.indexedFilter_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @param {!QueryParams} params\r\n     * @return {!NamedNode}\r\n     * @private\r\n     */\r\n    RangedFilter.getStartPost_ = function (params) {\r\n        if (params.hasStart()) {\r\n            var startName = params.getIndexStartName();\r\n            return params.getIndex().makePost(params.getIndexStartValue(), startName);\r\n        }\r\n        else {\r\n            return params.getIndex().minPost();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!QueryParams} params\r\n     * @return {!NamedNode}\r\n     * @private\r\n     */\r\n    RangedFilter.getEndPost_ = function (params) {\r\n        if (params.hasEnd()) {\r\n            var endName = params.getIndexEndName();\r\n            return params.getIndex().makePost(params.getIndexEndValue(), endName);\r\n        }\r\n        else {\r\n            return params.getIndex().maxPost();\r\n        }\r\n    };\r\n    return RangedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\r\nvar LimitedFilter = /** @class */ (function () {\r\n    /**\r\n     * @param {!QueryParams} params\r\n     */\r\n    function LimitedFilter(params) {\r\n        this.rangedFilter_ = new RangedFilter(params);\r\n        this.index_ = params.getIndex();\r\n        this.limit_ = params.getLimit();\r\n        this.reverse_ = !params.isViewFromLeft();\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        if (snap.getImmediateChild(key).equals(newChild)) {\r\n            // No change\r\n            return snap;\r\n        }\r\n        else if (snap.numChildren() < this.limit_) {\r\n            return this.rangedFilter_\r\n                .getIndexedFilter()\r\n                .updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n        }\r\n        else {\r\n            return this.fullLimitUpdateChild_(snap, key, newChild, source, optChangeAccumulator);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        var filtered;\r\n        if (newSnap.isLeafNode() || newSnap.isEmpty()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n        }\r\n        else {\r\n            if (this.limit_ * 2 < newSnap.numChildren() &&\r\n                newSnap.isIndexed(this.index_)) {\r\n                // Easier to build up a snapshot, since what we're given has more than twice the elements we want\r\n                filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n                // anchor to the startPost, endPost, or last element as appropriate\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_);\r\n                }\r\n                else {\r\n                    iterator = newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_);\r\n                }\r\n                var count = 0;\r\n                while (iterator.hasNext() && count < this.limit_) {\r\n                    var next = iterator.getNext();\r\n                    var inRange = void 0;\r\n                    if (this.reverse_) {\r\n                        inRange =\r\n                            this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\r\n                    }\r\n                    else {\r\n                        inRange =\r\n                            this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\r\n                    }\r\n                    if (inRange) {\r\n                        filtered = filtered.updateImmediateChild(next.name, next.node);\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        // if we have reached the end post, we cannot keep adding elemments\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\r\n                filtered = newSnap.withIndex(this.index_);\r\n                // Don't support priorities on queries\r\n                filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n                var startPost = void 0;\r\n                var endPost = void 0;\r\n                var cmp = void 0;\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = filtered.getReverseIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getEndPost();\r\n                    endPost = this.rangedFilter_.getStartPost();\r\n                    var indexCompare_1 = this.index_.getCompare();\r\n                    cmp = function (a, b) { return indexCompare_1(b, a); };\r\n                }\r\n                else {\r\n                    iterator = filtered.getIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getStartPost();\r\n                    endPost = this.rangedFilter_.getEndPost();\r\n                    cmp = this.index_.getCompare();\r\n                }\r\n                var count = 0;\r\n                var foundStartPost = false;\r\n                while (iterator.hasNext()) {\r\n                    var next = iterator.getNext();\r\n                    if (!foundStartPost && cmp(startPost, next) <= 0) {\r\n                        // start adding\r\n                        foundStartPost = true;\r\n                    }\r\n                    var inRange = foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\r\n                    if (inRange) {\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        filtered = filtered.updateImmediateChild(next.name, ChildrenNode.EMPTY_NODE);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this.rangedFilter_\r\n            .getIndexedFilter()\r\n            .updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.getIndexedFilter = function () {\r\n        return this.rangedFilter_.getIndexedFilter();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @param {!Node} snap\r\n     * @param {string} childKey\r\n     * @param {!Node} childSnap\r\n     * @param {!CompleteChildSource} source\r\n     * @param {?ChildChangeAccumulator} changeAccumulator\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    LimitedFilter.prototype.fullLimitUpdateChild_ = function (snap, childKey, childSnap, source, changeAccumulator) {\r\n        // TODO: rename all cache stuff etc to general snap terminology\r\n        var cmp;\r\n        if (this.reverse_) {\r\n            var indexCmp_1 = this.index_.getCompare();\r\n            cmp = function (a, b) { return indexCmp_1(b, a); };\r\n        }\r\n        else {\r\n            cmp = this.index_.getCompare();\r\n        }\r\n        var oldEventCache = snap;\r\n        util.assert(oldEventCache.numChildren() == this.limit_, '');\r\n        var newChildNamedNode = new NamedNode(childKey, childSnap);\r\n        var windowBoundary = this.reverse_\r\n            ? oldEventCache.getFirstChild(this.index_)\r\n            : oldEventCache.getLastChild(this.index_);\r\n        var inRange = this.rangedFilter_.matches(newChildNamedNode);\r\n        if (oldEventCache.hasChild(childKey)) {\r\n            var oldChildSnap = oldEventCache.getImmediateChild(childKey);\r\n            var nextChild = source.getChildAfterChild(this.index_, windowBoundary, this.reverse_);\r\n            while (nextChild != null &&\r\n                (nextChild.name == childKey || oldEventCache.hasChild(nextChild.name))) {\r\n                // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\r\n                // been applied to the limited filter yet. Ignore this next child which will be updated later in\r\n                // the limited filter...\r\n                nextChild = source.getChildAfterChild(this.index_, nextChild, this.reverse_);\r\n            }\r\n            var compareNext = nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\r\n            var remainsInWindow = inRange && !childSnap.isEmpty() && compareNext >= 0;\r\n            if (remainsInWindow) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childChangedChange(childKey, childSnap, oldChildSnap));\r\n                }\r\n                return oldEventCache.updateImmediateChild(childKey, childSnap);\r\n            }\r\n            else {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childRemovedChange(childKey, oldChildSnap));\r\n                }\r\n                var newEventCache = oldEventCache.updateImmediateChild(childKey, ChildrenNode.EMPTY_NODE);\r\n                var nextChildInRange = nextChild != null && this.rangedFilter_.matches(nextChild);\r\n                if (nextChildInRange) {\r\n                    if (changeAccumulator != null) {\r\n                        changeAccumulator.trackChildChange(Change.childAddedChange(nextChild.name, nextChild.node));\r\n                    }\r\n                    return newEventCache.updateImmediateChild(nextChild.name, nextChild.node);\r\n                }\r\n                else {\r\n                    return newEventCache;\r\n                }\r\n            }\r\n        }\r\n        else if (childSnap.isEmpty()) {\r\n            // we're deleting a node, but it was not in the window, so ignore it\r\n            return snap;\r\n        }\r\n        else if (inRange) {\r\n            if (cmp(windowBoundary, newChildNamedNode) >= 0) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childRemovedChange(windowBoundary.name, windowBoundary.node));\r\n                    changeAccumulator.trackChildChange(Change.childAddedChange(childKey, childSnap));\r\n                }\r\n                return oldEventCache\r\n                    .updateImmediateChild(childKey, childSnap)\r\n                    .updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\r\n            }\r\n            else {\r\n                return snap;\r\n            }\r\n        }\r\n        else {\r\n            return snap;\r\n        }\r\n    };\r\n    return LimitedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\r\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\r\n * user-facing API level, so it is not done here.\r\n * @constructor\r\n */\r\nvar QueryParams = /** @class */ (function () {\r\n    function QueryParams() {\r\n        this.limitSet_ = false;\r\n        this.startSet_ = false;\r\n        this.startNameSet_ = false;\r\n        this.endSet_ = false;\r\n        this.endNameSet_ = false;\r\n        this.limit_ = 0;\r\n        this.viewFrom_ = '';\r\n        this.indexStartValue_ = null;\r\n        this.indexStartName_ = '';\r\n        this.indexEndValue_ = null;\r\n        this.indexEndName_ = '';\r\n        this.index_ = PRIORITY_INDEX;\r\n    }\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasStart = function () {\r\n        return this.startSet_;\r\n    };\r\n    /**\r\n     * @return {boolean} True if it would return from left.\r\n     */\r\n    QueryParams.prototype.isViewFromLeft = function () {\r\n        if (this.viewFrom_ === '') {\r\n            // limit(), rather than limitToFirst or limitToLast was called.\r\n            // This means that only one of startSet_ and endSet_ is true. Use them\r\n            // to calculate which side of the view to anchor to. If neither is set,\r\n            // anchor to the end.\r\n            return this.startSet_;\r\n        }\r\n        else {\r\n            return (this.viewFrom_ === QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT);\r\n        }\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true\r\n     * @return {*}\r\n     */\r\n    QueryParams.prototype.getIndexStartValue = function () {\r\n        util.assert(this.startSet_, 'Only valid if start has been set');\r\n        return this.indexStartValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true.\r\n     * Returns the starting key name for the range defined by these query parameters\r\n     * @return {!string}\r\n     */\r\n    QueryParams.prototype.getIndexStartName = function () {\r\n        util.assert(this.startSet_, 'Only valid if start has been set');\r\n        if (this.startNameSet_) {\r\n            return this.indexStartName_;\r\n        }\r\n        else {\r\n            return MIN_NAME;\r\n        }\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasEnd = function () {\r\n        return this.endSet_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * @return {*}\r\n     */\r\n    QueryParams.prototype.getIndexEndValue = function () {\r\n        util.assert(this.endSet_, 'Only valid if end has been set');\r\n        return this.indexEndValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * Returns the end key name for the range defined by these query parameters\r\n     * @return {!string}\r\n     */\r\n    QueryParams.prototype.getIndexEndName = function () {\r\n        util.assert(this.endSet_, 'Only valid if end has been set');\r\n        if (this.endNameSet_) {\r\n            return this.indexEndName_;\r\n        }\r\n        else {\r\n            return MAX_NAME;\r\n        }\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasLimit = function () {\r\n        return this.limitSet_;\r\n    };\r\n    /**\r\n     * @return {boolean} True if a limit has been set and it has been explicitly anchored\r\n     */\r\n    QueryParams.prototype.hasAnchoredLimit = function () {\r\n        return this.limitSet_ && this.viewFrom_ !== '';\r\n    };\r\n    /**\r\n     * Only valid to call if hasLimit() returns true\r\n     * @return {!number}\r\n     */\r\n    QueryParams.prototype.getLimit = function () {\r\n        util.assert(this.limitSet_, 'Only valid if limit has been set');\r\n        return this.limit_;\r\n    };\r\n    /**\r\n     * @return {!Index}\r\n     */\r\n    QueryParams.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @return {!QueryParams}\r\n     * @private\r\n     */\r\n    QueryParams.prototype.copy_ = function () {\r\n        var copy = new QueryParams();\r\n        copy.limitSet_ = this.limitSet_;\r\n        copy.limit_ = this.limit_;\r\n        copy.startSet_ = this.startSet_;\r\n        copy.indexStartValue_ = this.indexStartValue_;\r\n        copy.startNameSet_ = this.startNameSet_;\r\n        copy.indexStartName_ = this.indexStartName_;\r\n        copy.endSet_ = this.endSet_;\r\n        copy.indexEndValue_ = this.indexEndValue_;\r\n        copy.endNameSet_ = this.endNameSet_;\r\n        copy.indexEndName_ = this.indexEndName_;\r\n        copy.index_ = this.index_;\r\n        copy.viewFrom_ = this.viewFrom_;\r\n        return copy;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limit = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = '';\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limitToFirst = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limitToLast = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_RIGHT;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {?string=} key\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.startAt = function (indexValue, key) {\r\n        var newParams = this.copy_();\r\n        newParams.startSet_ = true;\r\n        if (!(indexValue !== undefined)) {\r\n            indexValue = null;\r\n        }\r\n        newParams.indexStartValue_ = indexValue;\r\n        if (key != null) {\r\n            newParams.startNameSet_ = true;\r\n            newParams.indexStartName_ = key;\r\n        }\r\n        else {\r\n            newParams.startNameSet_ = false;\r\n            newParams.indexStartName_ = '';\r\n        }\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {?string=} key\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.endAt = function (indexValue, key) {\r\n        var newParams = this.copy_();\r\n        newParams.endSet_ = true;\r\n        if (!(indexValue !== undefined)) {\r\n            indexValue = null;\r\n        }\r\n        newParams.indexEndValue_ = indexValue;\r\n        if (key !== undefined) {\r\n            newParams.endNameSet_ = true;\r\n            newParams.indexEndName_ = key;\r\n        }\r\n        else {\r\n            newParams.endNameSet_ = false;\r\n            newParams.indexEndName_ = '';\r\n        }\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!Index} index\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.orderBy = function (index) {\r\n        var newParams = this.copy_();\r\n        newParams.index_ = index;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @return {!Object}\r\n     */\r\n    QueryParams.prototype.getQueryObject = function () {\r\n        var WIRE_PROTOCOL_CONSTANTS = QueryParams.WIRE_PROTOCOL_CONSTANTS_;\r\n        var obj = {};\r\n        if (this.startSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] = this.indexStartValue_;\r\n            if (this.startNameSet_) {\r\n                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] = this.indexStartName_;\r\n            }\r\n        }\r\n        if (this.endSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = this.indexEndValue_;\r\n            if (this.endNameSet_) {\r\n                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = this.indexEndName_;\r\n            }\r\n        }\r\n        if (this.limitSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = this.limit_;\r\n            var viewFrom = this.viewFrom_;\r\n            if (viewFrom === '') {\r\n                if (this.isViewFromLeft()) {\r\n                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\r\n                }\r\n                else {\r\n                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\r\n                }\r\n            }\r\n            obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;\r\n        }\r\n        // For now, priority index is the default, so we only specify if it's some other index\r\n        if (this.index_ !== PRIORITY_INDEX) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = this.index_.toString();\r\n        }\r\n        return obj;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.loadsAllData = function () {\r\n        return !(this.startSet_ || this.endSet_ || this.limitSet_);\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.isDefault = function () {\r\n        return this.loadsAllData() && this.index_ == PRIORITY_INDEX;\r\n    };\r\n    /**\r\n     * @return {!NodeFilter}\r\n     */\r\n    QueryParams.prototype.getNodeFilter = function () {\r\n        if (this.loadsAllData()) {\r\n            return new IndexedFilter(this.getIndex());\r\n        }\r\n        else if (this.hasLimit()) {\r\n            return new LimitedFilter(this);\r\n        }\r\n        else {\r\n            return new RangedFilter(this);\r\n        }\r\n    };\r\n    /**\r\n     * Returns a set of REST query string parameters representing this query.\r\n     *\r\n     * @return {!Object.<string,*>} query string parameters\r\n     */\r\n    QueryParams.prototype.toRestQueryStringParameters = function () {\r\n        var REST_CONSTANTS = QueryParams.REST_QUERY_CONSTANTS_;\r\n        var qs = {};\r\n        if (this.isDefault()) {\r\n            return qs;\r\n        }\r\n        var orderBy;\r\n        if (this.index_ === PRIORITY_INDEX) {\r\n            orderBy = REST_CONSTANTS.PRIORITY_INDEX;\r\n        }\r\n        else if (this.index_ === VALUE_INDEX) {\r\n            orderBy = REST_CONSTANTS.VALUE_INDEX;\r\n        }\r\n        else if (this.index_ === KEY_INDEX) {\r\n            orderBy = REST_CONSTANTS.KEY_INDEX;\r\n        }\r\n        else {\r\n            util.assert(this.index_ instanceof PathIndex, 'Unrecognized index type!');\r\n            orderBy = this.index_.toString();\r\n        }\r\n        qs[REST_CONSTANTS.ORDER_BY] = util.stringify(orderBy);\r\n        if (this.startSet_) {\r\n            qs[REST_CONSTANTS.START_AT] = util.stringify(this.indexStartValue_);\r\n            if (this.startNameSet_) {\r\n                qs[REST_CONSTANTS.START_AT] += ',' + util.stringify(this.indexStartName_);\r\n            }\r\n        }\r\n        if (this.endSet_) {\r\n            qs[REST_CONSTANTS.END_AT] = util.stringify(this.indexEndValue_);\r\n            if (this.endNameSet_) {\r\n                qs[REST_CONSTANTS.END_AT] += ',' + util.stringify(this.indexEndName_);\r\n            }\r\n        }\r\n        if (this.limitSet_) {\r\n            if (this.isViewFromLeft()) {\r\n                qs[REST_CONSTANTS.LIMIT_TO_FIRST] = this.limit_;\r\n            }\r\n            else {\r\n                qs[REST_CONSTANTS.LIMIT_TO_LAST] = this.limit_;\r\n            }\r\n        }\r\n        return qs;\r\n    };\r\n    /**\r\n     * Wire Protocol Constants\r\n     * @const\r\n     * @enum {string}\r\n     * @private\r\n     */\r\n    QueryParams.WIRE_PROTOCOL_CONSTANTS_ = {\r\n        INDEX_START_VALUE: 'sp',\r\n        INDEX_START_NAME: 'sn',\r\n        INDEX_END_VALUE: 'ep',\r\n        INDEX_END_NAME: 'en',\r\n        LIMIT: 'l',\r\n        VIEW_FROM: 'vf',\r\n        VIEW_FROM_LEFT: 'l',\r\n        VIEW_FROM_RIGHT: 'r',\r\n        INDEX: 'i'\r\n    };\r\n    /**\r\n     * REST Query Constants\r\n     * @const\r\n     * @enum {string}\r\n     * @private\r\n     */\r\n    QueryParams.REST_QUERY_CONSTANTS_ = {\r\n        ORDER_BY: 'orderBy',\r\n        PRIORITY_INDEX: '$priority',\r\n        VALUE_INDEX: '$value',\r\n        KEY_INDEX: '$key',\r\n        START_AT: 'startAt',\r\n        END_AT: 'endAt',\r\n        LIMIT_TO_FIRST: 'limitToFirst',\r\n        LIMIT_TO_LAST: 'limitToLast'\r\n    };\r\n    /**\r\n     * Default, empty query parameters\r\n     * @type {!QueryParams}\r\n     * @const\r\n     */\r\n    QueryParams.DEFAULT = new QueryParams();\r\n    return QueryParams;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Reference = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Reference, _super);\r\n    /**\r\n     * Call options:\r\n     *   new Reference(Repo, Path) or\r\n     *   new Reference(url: string, string|RepoManager)\r\n     *\r\n     * Externally - this is the firebase.database.Reference type.\r\n     *\r\n     * @param {!Repo} repo\r\n     * @param {(!Path)} path\r\n     * @extends {Query}\r\n     */\r\n    function Reference(repo, path) {\r\n        var _this = this;\r\n        if (!(repo instanceof Repo)) {\r\n            throw new Error('new Reference() no longer supported - use app.database().');\r\n        }\r\n        // call Query's constructor, passing in the repo and path.\r\n        _this = _super.call(this, repo, path, QueryParams.DEFAULT, false) || this;\r\n        return _this;\r\n    }\r\n    /** @return {?string} */\r\n    Reference.prototype.getKey = function () {\r\n        util.validateArgCount('Reference.key', 0, 0, arguments.length);\r\n        if (this.path.isEmpty())\r\n            return null;\r\n        else\r\n            return this.path.getBack();\r\n    };\r\n    /**\r\n     * @param {!(string|Path)} pathString\r\n     * @return {!Reference}\r\n     */\r\n    Reference.prototype.child = function (pathString) {\r\n        util.validateArgCount('Reference.child', 1, 1, arguments.length);\r\n        if (typeof pathString === 'number') {\r\n            pathString = String(pathString);\r\n        }\r\n        else if (!(pathString instanceof Path)) {\r\n            if (this.path.getFront() === null)\r\n                validateRootPathString('Reference.child', 1, pathString, false);\r\n            else\r\n                validatePathString('Reference.child', 1, pathString, false);\r\n        }\r\n        return new Reference(this.repo, this.path.child(pathString));\r\n    };\r\n    /** @return {?Reference} */\r\n    Reference.prototype.getParent = function () {\r\n        util.validateArgCount('Reference.parent', 0, 0, arguments.length);\r\n        var parentPath = this.path.parent();\r\n        return parentPath === null ? null : new Reference(this.repo, parentPath);\r\n    };\r\n    /** @return {!Reference} */\r\n    Reference.prototype.getRoot = function () {\r\n        util.validateArgCount('Reference.root', 0, 0, arguments.length);\r\n        var ref = this;\r\n        while (ref.getParent() !== null) {\r\n            ref = ref.getParent();\r\n        }\r\n        return ref;\r\n    };\r\n    /** @return {!Database} */\r\n    Reference.prototype.databaseProp = function () {\r\n        return this.repo.database;\r\n    };\r\n    /**\r\n     * @param {*} newVal\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.set = function (newVal, onComplete) {\r\n        util.validateArgCount('Reference.set', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.set', this.path);\r\n        validateFirebaseDataArg('Reference.set', 1, newVal, this.path, false);\r\n        util.validateCallback('Reference.set', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path, newVal, \r\n        /*priority=*/ null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {!Object} objectToMerge\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.update = function (objectToMerge, onComplete) {\r\n        util.validateArgCount('Reference.update', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.update', this.path);\r\n        if (Array.isArray(objectToMerge)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < objectToMerge.length; ++i) {\r\n                newObjectToMerge['' + i] = objectToMerge[i];\r\n            }\r\n            objectToMerge = newObjectToMerge;\r\n            warn('Passing an Array to Firebase.update() is deprecated. ' +\r\n                'Use set() if you want to overwrite the existing data, or ' +\r\n                'an Object with integer keys if you really do want to ' +\r\n                'only update some of the children.');\r\n        }\r\n        validateFirebaseMergeDataArg('Reference.update', 1, objectToMerge, this.path, false);\r\n        util.validateCallback('Reference.update', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.update(this.path, objectToMerge, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} newVal\r\n     * @param {string|number|null} newPriority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.setWithPriority = function (newVal, newPriority, onComplete) {\r\n        util.validateArgCount('Reference.setWithPriority', 2, 3, arguments.length);\r\n        validateWritablePath('Reference.setWithPriority', this.path);\r\n        validateFirebaseDataArg('Reference.setWithPriority', 1, newVal, this.path, false);\r\n        validatePriority('Reference.setWithPriority', 2, newPriority, false);\r\n        util.validateCallback('Reference.setWithPriority', 3, onComplete, true);\r\n        if (this.getKey() === '.length' || this.getKey() === '.keys')\r\n            throw 'Reference.setWithPriority failed: ' +\r\n                this.getKey() +\r\n                ' is a read-only object.';\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path, newVal, newPriority, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.remove = function (onComplete) {\r\n        util.validateArgCount('Reference.remove', 0, 1, arguments.length);\r\n        validateWritablePath('Reference.remove', this.path);\r\n        util.validateCallback('Reference.remove', 1, onComplete, true);\r\n        return this.set(null, onComplete);\r\n    };\r\n    /**\r\n     * @param {function(*):*} transactionUpdate\r\n     * @param {(function(?Error, boolean, ?DataSnapshot))=} onComplete\r\n     * @param {boolean=} applyLocally\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.transaction = function (transactionUpdate, onComplete, applyLocally) {\r\n        util.validateArgCount('Reference.transaction', 1, 3, arguments.length);\r\n        validateWritablePath('Reference.transaction', this.path);\r\n        util.validateCallback('Reference.transaction', 1, transactionUpdate, false);\r\n        util.validateCallback('Reference.transaction', 2, onComplete, true);\r\n        // NOTE: applyLocally is an internal-only option for now.  We need to decide if we want to keep it and how\r\n        // to expose it.\r\n        validateBoolean('Reference.transaction', 3, applyLocally, true);\r\n        if (this.getKey() === '.length' || this.getKey() === '.keys')\r\n            throw 'Reference.transaction failed: ' +\r\n                this.getKey() +\r\n                ' is a read-only object.';\r\n        if (applyLocally === undefined)\r\n            applyLocally = true;\r\n        var deferred = new util.Deferred();\r\n        if (typeof onComplete === 'function') {\r\n            deferred.promise.catch(function () { });\r\n        }\r\n        var promiseComplete = function (error, committed, snapshot) {\r\n            if (error) {\r\n                deferred.reject(error);\r\n            }\r\n            else {\r\n                deferred.resolve(new TransactionResult(committed, snapshot));\r\n            }\r\n            if (typeof onComplete === 'function') {\r\n                onComplete(error, committed, snapshot);\r\n            }\r\n        };\r\n        this.repo.startTransaction(this.path, transactionUpdate, promiseComplete, applyLocally);\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {string|number|null} priority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.setPriority = function (priority, onComplete) {\r\n        util.validateArgCount('Reference.setPriority', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.setPriority', this.path);\r\n        validatePriority('Reference.setPriority', 1, priority, false);\r\n        util.validateCallback('Reference.setPriority', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path.child('.priority'), priority, null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*=} value\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Reference}\r\n     */\r\n    Reference.prototype.push = function (value, onComplete) {\r\n        util.validateArgCount('Reference.push', 0, 2, arguments.length);\r\n        validateWritablePath('Reference.push', this.path);\r\n        validateFirebaseDataArg('Reference.push', 1, value, this.path, true);\r\n        util.validateCallback('Reference.push', 2, onComplete, true);\r\n        var now = this.repo.serverTime();\r\n        var name = nextPushId(now);\r\n        // push() returns a ThennableReference whose promise is fulfilled with a regular Reference.\r\n        // We use child() to create handles to two different references. The first is turned into a\r\n        // ThennableReference below by adding then() and catch() methods and is used as the\r\n        // return value of push(). The second remains a regular Reference and is used as the fulfilled\r\n        // value of the first ThennableReference.\r\n        var thennablePushRef = this.child(name);\r\n        var pushRef = this.child(name);\r\n        var promise;\r\n        if (value != null) {\r\n            promise = thennablePushRef.set(value, onComplete).then(function () { return pushRef; });\r\n        }\r\n        else {\r\n            promise = Promise.resolve(pushRef);\r\n        }\r\n        thennablePushRef.then = promise.then.bind(promise);\r\n        thennablePushRef.catch = promise.then.bind(promise, undefined);\r\n        if (typeof onComplete === 'function') {\r\n            promise.catch(function () { });\r\n        }\r\n        return thennablePushRef;\r\n    };\r\n    /**\r\n     * @return {!OnDisconnect}\r\n     */\r\n    Reference.prototype.onDisconnect = function () {\r\n        validateWritablePath('Reference.onDisconnect', this.path);\r\n        return new OnDisconnect(this.repo, this.path);\r\n    };\r\n    Object.defineProperty(Reference.prototype, \"database\", {\r\n        get: function () {\r\n            return this.databaseProp();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"key\", {\r\n        get: function () {\r\n            return this.getKey();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"parent\", {\r\n        get: function () {\r\n            return this.getParent();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"root\", {\r\n        get: function () {\r\n            return this.getRoot();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Reference;\r\n}(Query));\r\n/**\r\n * Define reference constructor in various modules\r\n *\r\n * We are doing this here to avoid several circular\r\n * dependency issues\r\n */\r\nQuery.__referenceConstructor = Reference;\r\nSyncPoint.__referenceConstructor = Reference;\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Node in a Tree.\r\n */\r\nvar TreeNode = /** @class */ (function () {\r\n    function TreeNode() {\r\n        // TODO: Consider making accessors that create children and value lazily or\r\n        // separate Internal / Leaf 'types'.\r\n        this.children = {};\r\n        this.childCount = 0;\r\n        this.value = null;\r\n    }\r\n    return TreeNode;\r\n}());\r\n/**\r\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\r\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\r\n * children.\r\n */\r\nvar Tree = /** @class */ (function () {\r\n    /**\r\n     * @template T\r\n     * @param {string=} name_ Optional name of the node.\r\n     * @param {Tree=} parent_ Optional parent node.\r\n     * @param {TreeNode=} node_ Optional node to wrap.\r\n     */\r\n    function Tree(name_, parent_, node_) {\r\n        if (name_ === void 0) { name_ = ''; }\r\n        if (parent_ === void 0) { parent_ = null; }\r\n        if (node_ === void 0) { node_ = new TreeNode(); }\r\n        this.name_ = name_;\r\n        this.parent_ = parent_;\r\n        this.node_ = node_;\r\n    }\r\n    /**\r\n     * Returns a sub-Tree for the given path.\r\n     *\r\n     * @param {!(string|Path)} pathObj Path to look up.\r\n     * @return {!Tree.<T>} Tree for path.\r\n     */\r\n    Tree.prototype.subTree = function (pathObj) {\r\n        // TODO: Require pathObj to be Path?\r\n        var path = pathObj instanceof Path ? pathObj : new Path(pathObj);\r\n        var child = this, next;\r\n        while ((next = path.getFront()) !== null) {\r\n            var childNode = util.safeGet(child.node_.children, next) || new TreeNode();\r\n            child = new Tree(next, child, childNode);\r\n            path = path.popFront();\r\n        }\r\n        return child;\r\n    };\r\n    /**\r\n     * Returns the data associated with this tree node.\r\n     *\r\n     * @return {?T} The data or null if no data exists.\r\n     */\r\n    Tree.prototype.getValue = function () {\r\n        return this.node_.value;\r\n    };\r\n    /**\r\n     * Sets data to this tree node.\r\n     *\r\n     * @param {!T} value Value to set.\r\n     */\r\n    Tree.prototype.setValue = function (value) {\r\n        util.assert(typeof value !== 'undefined', 'Cannot set value to undefined');\r\n        this.node_.value = value;\r\n        this.updateParents_();\r\n    };\r\n    /**\r\n     * Clears the contents of the tree node (its value and all children).\r\n     */\r\n    Tree.prototype.clear = function () {\r\n        this.node_.value = null;\r\n        this.node_.children = {};\r\n        this.node_.childCount = 0;\r\n        this.updateParents_();\r\n    };\r\n    /**\r\n     * @return {boolean} Whether the tree has any children.\r\n     */\r\n    Tree.prototype.hasChildren = function () {\r\n        return this.node_.childCount > 0;\r\n    };\r\n    /**\r\n     * @return {boolean} Whether the tree is empty (no value or children).\r\n     */\r\n    Tree.prototype.isEmpty = function () {\r\n        return this.getValue() === null && !this.hasChildren();\r\n    };\r\n    /**\r\n     * Calls action for each child of this tree node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     */\r\n    Tree.prototype.forEachChild = function (action) {\r\n        var _this = this;\r\n        util.forEach(this.node_.children, function (child, childTree) {\r\n            action(new Tree(child, _this, childTree));\r\n        });\r\n    };\r\n    /**\r\n     * Does a depth-first traversal of this node's descendants, calling action for each one.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     * @param {boolean=} includeSelf Whether to call action on this node as well. Defaults to\r\n     *   false.\r\n     * @param {boolean=} childrenFirst Whether to call action on children before calling it on\r\n     *   parent.\r\n     */\r\n    Tree.prototype.forEachDescendant = function (action, includeSelf, childrenFirst) {\r\n        if (includeSelf && !childrenFirst)\r\n            action(this);\r\n        this.forEachChild(function (child) {\r\n            child.forEachDescendant(action, /*includeSelf=*/ true, childrenFirst);\r\n        });\r\n        if (includeSelf && childrenFirst)\r\n            action(this);\r\n    };\r\n    /**\r\n     * Calls action on each ancestor node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called on each parent; return\r\n     *   true to abort.\r\n     * @param {boolean=} includeSelf Whether to call action on this node as well.\r\n     * @return {boolean} true if the action callback returned true.\r\n     */\r\n    Tree.prototype.forEachAncestor = function (action, includeSelf) {\r\n        var node = includeSelf ? this : this.parent();\r\n        while (node !== null) {\r\n            if (action(node)) {\r\n                return true;\r\n            }\r\n            node = node.parent();\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Does a depth-first traversal of this node's descendants.  When a descendant with a value\r\n     * is found, action is called on it and traversal does not continue inside the node.\r\n     * Action is *not* called on this node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     */\r\n    Tree.prototype.forEachImmediateDescendantWithValue = function (action) {\r\n        this.forEachChild(function (child) {\r\n            if (child.getValue() !== null)\r\n                action(child);\r\n            else\r\n                child.forEachImmediateDescendantWithValue(action);\r\n        });\r\n    };\r\n    /**\r\n     * @return {!Path} The path of this tree node, as a Path.\r\n     */\r\n    Tree.prototype.path = function () {\r\n        return new Path(this.parent_ === null\r\n            ? this.name_\r\n            : this.parent_.path() + '/' + this.name_);\r\n    };\r\n    /**\r\n     * @return {string} The name of the tree node.\r\n     */\r\n    Tree.prototype.name = function () {\r\n        return this.name_;\r\n    };\r\n    /**\r\n     * @return {?Tree} The parent tree node, or null if this is the root of the tree.\r\n     */\r\n    Tree.prototype.parent = function () {\r\n        return this.parent_;\r\n    };\r\n    /**\r\n     * Adds or removes this child from its parent based on whether it's empty or not.\r\n     *\r\n     * @private\r\n     */\r\n    Tree.prototype.updateParents_ = function () {\r\n        if (this.parent_ !== null)\r\n            this.parent_.updateChild_(this.name_, this);\r\n    };\r\n    /**\r\n     * Adds or removes the passed child to this tree node, depending on whether it's empty.\r\n     *\r\n     * @param {string} childName The name of the child to update.\r\n     * @param {!Tree.<T>} child The child to update.\r\n     * @private\r\n     */\r\n    Tree.prototype.updateChild_ = function (childName, child) {\r\n        var childEmpty = child.isEmpty();\r\n        var childExists = util.contains(this.node_.children, childName);\r\n        if (childEmpty && childExists) {\r\n            delete this.node_.children[childName];\r\n            this.node_.childCount--;\r\n            this.updateParents_();\r\n        }\r\n        else if (!childEmpty && !childExists) {\r\n            this.node_.children[childName] = child.node_;\r\n            this.node_.childCount++;\r\n            this.updateParents_();\r\n        }\r\n    };\r\n    return Tree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: This is pretty messy.  Ideally, a lot of this would move into FirebaseData, or a transaction-specific\r\n// component used by FirebaseData, but it has ties to user callbacks (transaction update and onComplete) as well\r\n// as the realtime connection (to send transactions to the server).  So that all needs to be decoupled first.\r\n// For now it's part of Repo, but in its own file.\r\n/**\r\n * @enum {number}\r\n */\r\nvar TransactionStatus;\r\n(function (TransactionStatus) {\r\n    // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\r\n    // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\r\n    // mismatched hash.\r\n    TransactionStatus[TransactionStatus[\"RUN\"] = 0] = \"RUN\";\r\n    // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\r\n    // or rejected yet).\r\n    TransactionStatus[TransactionStatus[\"SENT\"] = 1] = \"SENT\";\r\n    // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\r\n    // removed when we get a chance to prune completed ones.\r\n    TransactionStatus[TransactionStatus[\"COMPLETED\"] = 2] = \"COMPLETED\";\r\n    // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\r\n    // If it comes back as unsuccessful, we'll abort it.\r\n    TransactionStatus[TransactionStatus[\"SENT_NEEDS_ABORT\"] = 3] = \"SENT_NEEDS_ABORT\";\r\n    // Temporary state used to mark transactions that need to be aborted.\r\n    TransactionStatus[TransactionStatus[\"NEEDS_ABORT\"] = 4] = \"NEEDS_ABORT\";\r\n})(TransactionStatus || (TransactionStatus = {}));\r\n/**\r\n * If a transaction does not succeed after 25 retries, we abort it.  Among other things this ensure that if there's\r\n * ever a bug causing a mismatch between client / server hashes for some data, we won't retry indefinitely.\r\n * @type {number}\r\n * @const\r\n * @private\r\n */\r\nRepo.MAX_TRANSACTION_RETRIES_ = 25;\r\n/**\r\n * Setup the transaction data structures\r\n * @private\r\n */\r\nRepo.prototype.transactions_init_ = function () {\r\n    /**\r\n     * Stores queues of outstanding transactions for Firebase locations.\r\n     *\r\n     * @type {!Tree.<Array.<!Transaction>>}\r\n     * @private\r\n     */\r\n    this.transactionQueueTree_ = new Tree();\r\n};\r\n/**\r\n * Creates a new transaction, adds it to the transactions we're tracking, and sends it to the server if possible.\r\n *\r\n * @param {!Path} path Path at which to do transaction.\r\n * @param {function(*):*} transactionUpdate Update callback.\r\n * @param {?function(?Error, boolean, ?DataSnapshot)} onComplete Completion callback.\r\n * @param {boolean} applyLocally Whether or not to make intermediate results visible\r\n */\r\nRepo.prototype.startTransaction = function (path, transactionUpdate, onComplete, applyLocally) {\r\n    this.log_('transaction on ' + path);\r\n    // Add a watch to make sure we get server updates.\r\n    var valueCallback = function () { };\r\n    var watchRef = new Reference(this, path);\r\n    watchRef.on('value', valueCallback);\r\n    var unwatcher = function () {\r\n        watchRef.off('value', valueCallback);\r\n    };\r\n    // Initialize transaction.\r\n    var transaction = {\r\n        path: path,\r\n        update: transactionUpdate,\r\n        onComplete: onComplete,\r\n        // One of TransactionStatus enums.\r\n        status: null,\r\n        // Used when combining transactions at different locations to figure out which one goes first.\r\n        order: LUIDGenerator(),\r\n        // Whether to raise local events for this transaction.\r\n        applyLocally: applyLocally,\r\n        // Count of how many times we've retried the transaction.\r\n        retryCount: 0,\r\n        // Function to call to clean up our .on() listener.\r\n        unwatcher: unwatcher,\r\n        // Stores why a transaction was aborted.\r\n        abortReason: null,\r\n        currentWriteId: null,\r\n        currentInputSnapshot: null,\r\n        currentOutputSnapshotRaw: null,\r\n        currentOutputSnapshotResolved: null\r\n    };\r\n    // Run transaction initially.\r\n    var currentState = this.getLatestState_(path);\r\n    transaction.currentInputSnapshot = currentState;\r\n    var newVal = transaction.update(currentState.val());\r\n    if (newVal === undefined) {\r\n        // Abort transaction.\r\n        transaction.unwatcher();\r\n        transaction.currentOutputSnapshotRaw = null;\r\n        transaction.currentOutputSnapshotResolved = null;\r\n        if (transaction.onComplete) {\r\n            // We just set the input snapshot, so this cast should be safe\r\n            var snapshot = new DataSnapshot(transaction.currentInputSnapshot, new Reference(this, transaction.path), PRIORITY_INDEX);\r\n            transaction.onComplete(null, false, snapshot);\r\n        }\r\n    }\r\n    else {\r\n        validateFirebaseData('transaction failed: Data returned ', newVal, transaction.path);\r\n        // Mark as run and add to our queue.\r\n        transaction.status = TransactionStatus.RUN;\r\n        var queueNode = this.transactionQueueTree_.subTree(path);\r\n        var nodeQueue = queueNode.getValue() || [];\r\n        nodeQueue.push(transaction);\r\n        queueNode.setValue(nodeQueue);\r\n        // Update visibleData and raise events\r\n        // Note: We intentionally raise events after updating all of our transaction state, since the user could\r\n        // start new transactions from the event callbacks.\r\n        var priorityForNode = void 0;\r\n        if (typeof newVal === 'object' &&\r\n            newVal !== null &&\r\n            util.contains(newVal, '.priority')) {\r\n            priorityForNode = util.safeGet(newVal, '.priority');\r\n            util.assert(isValidPriority(priorityForNode), 'Invalid priority returned by transaction. ' +\r\n                'Priority must be a valid string, finite number, server value, or null.');\r\n        }\r\n        else {\r\n            var currentNode = this.serverSyncTree_.calcCompleteEventCache(path) ||\r\n                ChildrenNode.EMPTY_NODE;\r\n            priorityForNode = currentNode.getPriority().val();\r\n        }\r\n        priorityForNode /** @type {null|number|string} */ = priorityForNode;\r\n        var serverValues = this.generateServerValues();\r\n        var newNodeUnresolved = nodeFromJSON$1(newVal, priorityForNode);\r\n        var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\r\n        transaction.currentOutputSnapshotRaw = newNodeUnresolved;\r\n        transaction.currentOutputSnapshotResolved = newNode;\r\n        transaction.currentWriteId = this.getNextWriteId_();\r\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, transaction.currentWriteId, transaction.applyLocally);\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n        this.sendReadyTransactions_();\r\n    }\r\n};\r\n/**\r\n * @param {!Path} path\r\n * @param {Array.<number>=} excludeSets A specific set to exclude\r\n * @return {Node}\r\n * @private\r\n */\r\nRepo.prototype.getLatestState_ = function (path, excludeSets) {\r\n    return (this.serverSyncTree_.calcCompleteEventCache(path, excludeSets) ||\r\n        ChildrenNode.EMPTY_NODE);\r\n};\r\n/**\r\n * Sends any already-run transactions that aren't waiting for outstanding transactions to\r\n * complete.\r\n *\r\n * Externally it's called with no arguments, but it calls itself recursively with a particular\r\n * transactionQueueTree node to recurse through the tree.\r\n *\r\n * @param {Tree.<Array.<Transaction>>=} node  transactionQueueTree node to start at.\r\n * @private\r\n */\r\nRepo.prototype.sendReadyTransactions_ = function (node) {\r\n    var _this = this;\r\n    if (node === void 0) { node = this.transactionQueueTree_; }\r\n    // Before recursing, make sure any completed transactions are removed.\r\n    if (!node) {\r\n        this.pruneCompletedTransactionsBelowNode_(node);\r\n    }\r\n    if (node.getValue() !== null) {\r\n        var queue = this.buildTransactionQueue_(node);\r\n        util.assert(queue.length > 0, 'Sending zero length transaction queue');\r\n        var allRun = queue.every(function (transaction) { return transaction.status === TransactionStatus.RUN; });\r\n        // If they're all run (and not sent), we can send them.  Else, we must wait.\r\n        if (allRun) {\r\n            this.sendTransactionQueue_(node.path(), queue);\r\n        }\r\n    }\r\n    else if (node.hasChildren()) {\r\n        node.forEachChild(function (childNode) {\r\n            _this.sendReadyTransactions_(childNode);\r\n        });\r\n    }\r\n};\r\n/**\r\n * Given a list of run transactions, send them to the server and then handle the result (success or failure).\r\n *\r\n * @param {!Path} path The location of the queue.\r\n * @param {!Array.<Transaction>} queue Queue of transactions under the specified location.\r\n * @private\r\n */\r\nRepo.prototype.sendTransactionQueue_ = function (path, queue) {\r\n    var _this = this;\r\n    // Mark transactions as sent and increment retry count!\r\n    var setsToIgnore = queue.map(function (txn) {\r\n        return txn.currentWriteId;\r\n    });\r\n    var latestState = this.getLatestState_(path, setsToIgnore);\r\n    var snapToSend = latestState;\r\n    var latestHash = latestState.hash();\r\n    for (var i = 0; i < queue.length; i++) {\r\n        var txn = queue[i];\r\n        util.assert(txn.status === TransactionStatus.RUN, 'tryToSendTransactionQueue_: items in queue should all be run.');\r\n        txn.status = TransactionStatus.SENT;\r\n        txn.retryCount++;\r\n        var relativePath = Path.relativePath(path, txn.path);\r\n        // If we've gotten to this point, the output snapshot must be defined.\r\n        snapToSend = snapToSend.updateChild(relativePath /**@type {!Node} */, txn.currentOutputSnapshotRaw);\r\n    }\r\n    var dataToSend = snapToSend.val(true);\r\n    var pathToSend = path;\r\n    // Send the put.\r\n    this.server_.put(pathToSend.toString(), dataToSend, function (status) {\r\n        _this.log_('transaction put response', {\r\n            path: pathToSend.toString(),\r\n            status: status\r\n        });\r\n        var events = [];\r\n        if (status === 'ok') {\r\n            // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n            // the callback could trigger more transactions or sets.\r\n            var callbacks = [];\r\n            for (var i = 0; i < queue.length; i++) {\r\n                queue[i].status = TransactionStatus.COMPLETED;\r\n                events = events.concat(_this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId));\r\n                if (queue[i].onComplete) {\r\n                    // We never unset the output snapshot, and given that this transaction is complete, it should be set\r\n                    var node = queue[i].currentOutputSnapshotResolved;\r\n                    var ref = new Reference(_this, queue[i].path);\r\n                    var snapshot = new DataSnapshot(node, ref, PRIORITY_INDEX);\r\n                    callbacks.push(queue[i].onComplete.bind(null, null, true, snapshot));\r\n                }\r\n                queue[i].unwatcher();\r\n            }\r\n            // Now remove the completed transactions.\r\n            _this.pruneCompletedTransactionsBelowNode_(_this.transactionQueueTree_.subTree(path));\r\n            // There may be pending transactions that we can now send.\r\n            _this.sendReadyTransactions_();\r\n            _this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n            // Finally, trigger onComplete callbacks.\r\n            for (var i = 0; i < callbacks.length; i++) {\r\n                exceptionGuard(callbacks[i]);\r\n            }\r\n        }\r\n        else {\r\n            // transactions are no longer sent.  Update their status appropriately.\r\n            if (status === 'datastale') {\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT)\r\n                        queue[i].status = TransactionStatus.NEEDS_ABORT;\r\n                    else\r\n                        queue[i].status = TransactionStatus.RUN;\r\n                }\r\n            }\r\n            else {\r\n                warn('transaction at ' + pathToSend.toString() + ' failed: ' + status);\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    queue[i].status = TransactionStatus.NEEDS_ABORT;\r\n                    queue[i].abortReason = status;\r\n                }\r\n            }\r\n            _this.rerunTransactions_(path);\r\n        }\r\n    }, latestHash);\r\n};\r\n/**\r\n * Finds all transactions dependent on the data at changedPath and reruns them.\r\n *\r\n * Should be called any time cached data changes.\r\n *\r\n * Return the highest path that was affected by rerunning transactions.  This is the path at which events need to\r\n * be raised for.\r\n *\r\n * @param {!Path} changedPath The path in mergedData that changed.\r\n * @return {!Path} The rootmost path that was affected by rerunning transactions.\r\n * @private\r\n */\r\nRepo.prototype.rerunTransactions_ = function (changedPath) {\r\n    var rootMostTransactionNode = this.getAncestorTransactionNode_(changedPath);\r\n    var path = rootMostTransactionNode.path();\r\n    var queue = this.buildTransactionQueue_(rootMostTransactionNode);\r\n    this.rerunTransactionQueue_(queue, path);\r\n    return path;\r\n};\r\n/**\r\n * Does all the work of rerunning transactions (as well as cleans up aborted transactions and whatnot).\r\n *\r\n * @param {Array.<Transaction>} queue The queue of transactions to run.\r\n * @param {!Path} path The path the queue is for.\r\n * @private\r\n */\r\nRepo.prototype.rerunTransactionQueue_ = function (queue, path) {\r\n    if (queue.length === 0) {\r\n        return; // Nothing to do!\r\n    }\r\n    // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n    // the callback could trigger more transactions or sets.\r\n    var callbacks = [];\r\n    var events = [];\r\n    // Ignore all of the sets we're going to re-run.\r\n    var txnsToRerun = queue.filter(function (q) {\r\n        return q.status === TransactionStatus.RUN;\r\n    });\r\n    var setsToIgnore = txnsToRerun.map(function (q) {\r\n        return q.currentWriteId;\r\n    });\r\n    for (var i = 0; i < queue.length; i++) {\r\n        var transaction = queue[i];\r\n        var relativePath = Path.relativePath(path, transaction.path);\r\n        var abortTransaction = false, abortReason = void 0;\r\n        util.assert(relativePath !== null, 'rerunTransactionsUnderNode_: relativePath should not be null.');\r\n        if (transaction.status === TransactionStatus.NEEDS_ABORT) {\r\n            abortTransaction = true;\r\n            abortReason = transaction.abortReason;\r\n            events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n        }\r\n        else if (transaction.status === TransactionStatus.RUN) {\r\n            if (transaction.retryCount >= Repo.MAX_TRANSACTION_RETRIES_) {\r\n                abortTransaction = true;\r\n                abortReason = 'maxretry';\r\n                events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n            }\r\n            else {\r\n                // This code reruns a transaction\r\n                var currentNode = this.getLatestState_(transaction.path, setsToIgnore);\r\n                transaction.currentInputSnapshot = currentNode;\r\n                var newData = queue[i].update(currentNode.val());\r\n                if (newData !== undefined) {\r\n                    validateFirebaseData('transaction failed: Data returned ', newData, transaction.path);\r\n                    var newDataNode = nodeFromJSON$1(newData);\r\n                    var hasExplicitPriority = typeof newData === 'object' &&\r\n                        newData != null &&\r\n                        util.contains(newData, '.priority');\r\n                    if (!hasExplicitPriority) {\r\n                        // Keep the old priority if there wasn't a priority explicitly specified.\r\n                        newDataNode = newDataNode.updatePriority(currentNode.getPriority());\r\n                    }\r\n                    var oldWriteId = transaction.currentWriteId;\r\n                    var serverValues = this.generateServerValues();\r\n                    var newNodeResolved = resolveDeferredValueSnapshot(newDataNode, serverValues);\r\n                    transaction.currentOutputSnapshotRaw = newDataNode;\r\n                    transaction.currentOutputSnapshotResolved = newNodeResolved;\r\n                    transaction.currentWriteId = this.getNextWriteId_();\r\n                    // Mutates setsToIgnore in place\r\n                    setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\r\n                    events = events.concat(this.serverSyncTree_.applyUserOverwrite(transaction.path, newNodeResolved, transaction.currentWriteId, transaction.applyLocally));\r\n                    events = events.concat(this.serverSyncTree_.ackUserWrite(oldWriteId, true));\r\n                }\r\n                else {\r\n                    abortTransaction = true;\r\n                    abortReason = 'nodata';\r\n                    events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n                }\r\n            }\r\n        }\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n        events = [];\r\n        if (abortTransaction) {\r\n            // Abort.\r\n            queue[i].status = TransactionStatus.COMPLETED;\r\n            // Removing a listener can trigger pruning which can muck with mergedData/visibleData (as it prunes data).\r\n            // So defer the unwatcher until we're done.\r\n            (function (unwatcher) {\r\n                setTimeout(unwatcher, Math.floor(0));\r\n            })(queue[i].unwatcher);\r\n            if (queue[i].onComplete) {\r\n                if (abortReason === 'nodata') {\r\n                    var ref = new Reference(this, queue[i].path);\r\n                    // We set this field immediately, so it's safe to cast to an actual snapshot\r\n                    var lastInput /** @type {!Node} */ = queue[i].currentInputSnapshot;\r\n                    var snapshot = new DataSnapshot(lastInput, ref, PRIORITY_INDEX);\r\n                    callbacks.push(queue[i].onComplete.bind(null, null, false, snapshot));\r\n                }\r\n                else {\r\n                    callbacks.push(queue[i].onComplete.bind(null, new Error(abortReason), false, null));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // Clean up completed transactions.\r\n    this.pruneCompletedTransactionsBelowNode_(this.transactionQueueTree_);\r\n    // Now fire callbacks, now that we're in a good, known state.\r\n    for (var i = 0; i < callbacks.length; i++) {\r\n        exceptionGuard(callbacks[i]);\r\n    }\r\n    // Try to send the transaction result to the server.\r\n    this.sendReadyTransactions_();\r\n};\r\n/**\r\n * Returns the rootmost ancestor node of the specified path that has a pending transaction on it, or just returns\r\n * the node for the given path if there are no pending transactions on any ancestor.\r\n *\r\n * @param {!Path} path The location to start at.\r\n * @return {!Tree.<Array.<!Transaction>>} The rootmost node with a transaction.\r\n * @private\r\n */\r\nRepo.prototype.getAncestorTransactionNode_ = function (path) {\r\n    var front;\r\n    // Start at the root and walk deeper into the tree towards path until we find a node with pending transactions.\r\n    var transactionNode = this.transactionQueueTree_;\r\n    while ((front = path.getFront()) !== null &&\r\n        transactionNode.getValue() === null) {\r\n        transactionNode = transactionNode.subTree(front);\r\n        path = path.popFront();\r\n    }\r\n    return transactionNode;\r\n};\r\n/**\r\n * Builds the queue of all transactions at or below the specified transactionNode.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} transactionNode\r\n * @return {Array.<Transaction>} The generated queue.\r\n * @private\r\n */\r\nRepo.prototype.buildTransactionQueue_ = function (transactionNode) {\r\n    // Walk any child transaction queues and aggregate them into a single queue.\r\n    var transactionQueue = [];\r\n    this.aggregateTransactionQueuesForNode_(transactionNode, transactionQueue);\r\n    // Sort them by the order the transactions were created.\r\n    transactionQueue.sort(function (a, b) {\r\n        return a.order - b.order;\r\n    });\r\n    return transactionQueue;\r\n};\r\n/**\r\n * @param {!Tree.<Array.<Transaction>>} node\r\n * @param {Array.<Transaction>} queue\r\n * @private\r\n */\r\nRepo.prototype.aggregateTransactionQueuesForNode_ = function (node, queue) {\r\n    var _this = this;\r\n    var nodeQueue = node.getValue();\r\n    if (nodeQueue !== null) {\r\n        for (var i = 0; i < nodeQueue.length; i++) {\r\n            queue.push(nodeQueue[i]);\r\n        }\r\n    }\r\n    node.forEachChild(function (child) {\r\n        _this.aggregateTransactionQueuesForNode_(child, queue);\r\n    });\r\n};\r\n/**\r\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\r\n *\r\n * @param {!Tree.<Array.<!Transaction>>} node\r\n * @private\r\n */\r\nRepo.prototype.pruneCompletedTransactionsBelowNode_ = function (node) {\r\n    var _this = this;\r\n    var queue = node.getValue();\r\n    if (queue) {\r\n        var to = 0;\r\n        for (var from = 0; from < queue.length; from++) {\r\n            if (queue[from].status !== TransactionStatus.COMPLETED) {\r\n                queue[to] = queue[from];\r\n                to++;\r\n            }\r\n        }\r\n        queue.length = to;\r\n        node.setValue(queue.length > 0 ? queue : null);\r\n    }\r\n    node.forEachChild(function (childNode) {\r\n        _this.pruneCompletedTransactionsBelowNode_(childNode);\r\n    });\r\n};\r\n/**\r\n * Aborts all transactions on ancestors or descendants of the specified path.  Called when doing a set() or update()\r\n * since we consider them incompatible with transactions.\r\n *\r\n * @param {!Path} path Path for which we want to abort related transactions.\r\n * @return {!Path}\r\n * @private\r\n */\r\nRepo.prototype.abortTransactions_ = function (path) {\r\n    var _this = this;\r\n    var affectedPath = this.getAncestorTransactionNode_(path).path();\r\n    var transactionNode = this.transactionQueueTree_.subTree(path);\r\n    transactionNode.forEachAncestor(function (node) {\r\n        _this.abortTransactionsOnNode_(node);\r\n    });\r\n    this.abortTransactionsOnNode_(transactionNode);\r\n    transactionNode.forEachDescendant(function (node) {\r\n        _this.abortTransactionsOnNode_(node);\r\n    });\r\n    return affectedPath;\r\n};\r\n/**\r\n * Abort transactions stored in this transaction queue node.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} node Node to abort transactions for.\r\n * @private\r\n */\r\nRepo.prototype.abortTransactionsOnNode_ = function (node) {\r\n    var queue = node.getValue();\r\n    if (queue !== null) {\r\n        // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n        // the callback could trigger more transactions or sets.\r\n        var callbacks = [];\r\n        // Go through queue.  Any already-sent transactions must be marked for abort, while the unsent ones\r\n        // can be immediately aborted and removed.\r\n        var events = [];\r\n        var lastSent = -1;\r\n        for (var i = 0; i < queue.length; i++) {\r\n            if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) ;\r\n            else if (queue[i].status === TransactionStatus.SENT) {\r\n                util.assert(lastSent === i - 1, 'All SENT items should be at beginning of queue.');\r\n                lastSent = i;\r\n                // Mark transaction for abort when it comes back.\r\n                queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\r\n                queue[i].abortReason = 'set';\r\n            }\r\n            else {\r\n                util.assert(queue[i].status === TransactionStatus.RUN, 'Unexpected transaction status in abort');\r\n                // We can abort it immediately.\r\n                queue[i].unwatcher();\r\n                events = events.concat(this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId, true));\r\n                if (queue[i].onComplete) {\r\n                    var snapshot = null;\r\n                    callbacks.push(queue[i].onComplete.bind(null, new Error('set'), false, snapshot));\r\n                }\r\n            }\r\n        }\r\n        if (lastSent === -1) {\r\n            // We're not waiting for any sent transactions.  We can clear the queue.\r\n            node.setValue(null);\r\n        }\r\n        else {\r\n            // Remove the transactions we aborted.\r\n            queue.length = lastSent + 1;\r\n        }\r\n        // Now fire the callbacks.\r\n        this.eventQueue_.raiseEventsForChangedPath(node.path(), events);\r\n        for (var i = 0; i < callbacks.length; i++) {\r\n            exceptionGuard(callbacks[i]);\r\n        }\r\n    }\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** @const {string} */\r\nvar DATABASE_URL_OPTION = 'databaseURL';\r\nvar _staticInstance;\r\n/**\r\n * Creates and caches Repo instances.\r\n */\r\nvar RepoManager = /** @class */ (function () {\r\n    function RepoManager() {\r\n        /**\r\n         * @private {!Object.<string, Object<string, !fb.core.Repo>>}\r\n         */\r\n        this.repos_ = {};\r\n        /**\r\n         * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\r\n         * @private {boolean}\r\n         */\r\n        this.useRestClient_ = false;\r\n    }\r\n    RepoManager.getInstance = function () {\r\n        if (!_staticInstance) {\r\n            _staticInstance = new RepoManager();\r\n        }\r\n        return _staticInstance;\r\n    };\r\n    // TODO(koss): Remove these functions unless used in tests?\r\n    RepoManager.prototype.interrupt = function () {\r\n        for (var appName in this.repos_) {\r\n            for (var dbUrl in this.repos_[appName]) {\r\n                this.repos_[appName][dbUrl].interrupt();\r\n            }\r\n        }\r\n    };\r\n    RepoManager.prototype.resume = function () {\r\n        for (var appName in this.repos_) {\r\n            for (var dbUrl in this.repos_[appName]) {\r\n                this.repos_[appName][dbUrl].resume();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * This function should only ever be called to CREATE a new database instance.\r\n     *\r\n     * @param {!FirebaseApp} app\r\n     * @return {!Database}\r\n     */\r\n    RepoManager.prototype.databaseFromApp = function (app, url) {\r\n        var dbUrl = url || app.options[DATABASE_URL_OPTION];\r\n        if (dbUrl === undefined) {\r\n            fatal(\"Can't determine Firebase Database URL.  Be sure to include \" +\r\n                DATABASE_URL_OPTION +\r\n                ' option when calling firebase.initializeApp().');\r\n        }\r\n        var parsedUrl = parseRepoInfo(dbUrl);\r\n        var repoInfo = parsedUrl.repoInfo;\r\n        validateUrl('Invalid Firebase Database URL', 1, parsedUrl);\r\n        if (!parsedUrl.path.isEmpty()) {\r\n            fatal('Database URL must point to the root of a Firebase Database ' +\r\n                '(not including a child path).');\r\n        }\r\n        var repo = this.createRepo(repoInfo, app);\r\n        return repo.database;\r\n    };\r\n    /**\r\n     * Remove the repo and make sure it is disconnected.\r\n     *\r\n     * @param {!Repo} repo\r\n     */\r\n    RepoManager.prototype.deleteRepo = function (repo) {\r\n        var appRepos = util.safeGet(this.repos_, repo.app.name);\r\n        // This should never happen...\r\n        if (!appRepos || util.safeGet(appRepos, repo.repoInfo_.toURLString()) !== repo) {\r\n            fatal(\"Database \" + repo.app.name + \"(\" + repo.repoInfo_ + \") has already been deleted.\");\r\n        }\r\n        repo.interrupt();\r\n        delete appRepos[repo.repoInfo_.toURLString()];\r\n    };\r\n    /**\r\n     * Ensures a repo doesn't already exist and then creates one using the\r\n     * provided app.\r\n     *\r\n     * @param {!RepoInfo} repoInfo The metadata about the Repo\r\n     * @param {!FirebaseApp} app\r\n     * @return {!Repo} The Repo object for the specified server / repoName.\r\n     */\r\n    RepoManager.prototype.createRepo = function (repoInfo, app) {\r\n        var appRepos = util.safeGet(this.repos_, app.name);\r\n        if (!appRepos) {\r\n            appRepos = {};\r\n            this.repos_[app.name] = appRepos;\r\n        }\r\n        var repo = util.safeGet(appRepos, repoInfo.toURLString());\r\n        if (repo) {\r\n            fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');\r\n        }\r\n        repo = new Repo(repoInfo, this.useRestClient_, app);\r\n        appRepos[repoInfo.toURLString()] = repo;\r\n        return repo;\r\n    };\r\n    /**\r\n     * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\r\n     * @param {boolean} forceRestClient\r\n     */\r\n    RepoManager.prototype.forceRestClient = function (forceRestClient) {\r\n        this.useRestClient_ = forceRestClient;\r\n    };\r\n    return RepoManager;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase database.\r\n * @implements {FirebaseService}\r\n */\r\nvar Database = /** @class */ (function () {\r\n    /**\r\n     * The constructor should not be called by users of our public API.\r\n     * @param {!Repo} repo_\r\n     */\r\n    function Database(repo_) {\r\n        this.repo_ = repo_;\r\n        if (!(repo_ instanceof Repo)) {\r\n            fatal(\"Don't call new Database() directly - please use firebase.database().\");\r\n        }\r\n        /** @type {Reference} */\r\n        this.root_ = new Reference(repo_, Path.Empty);\r\n        this.INTERNAL = new DatabaseInternals(this);\r\n    }\r\n    Object.defineProperty(Database.prototype, \"app\", {\r\n        get: function () {\r\n            return this.repo_.app;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Database.prototype.ref = function (path) {\r\n        this.checkDeleted_('ref');\r\n        util.validateArgCount('database.ref', 0, 1, arguments.length);\r\n        if (path instanceof Reference) {\r\n            return this.refFromURL(path.toString());\r\n        }\r\n        return path !== undefined ? this.root_.child(path) : this.root_;\r\n    };\r\n    /**\r\n     * Returns a reference to the root or the path specified in url.\r\n     * We throw a exception if the url is not in the same domain as the\r\n     * current repo.\r\n     * @param {string} url\r\n     * @return {!Reference} Firebase reference.\r\n     */\r\n    Database.prototype.refFromURL = function (url) {\r\n        /** @const {string} */\r\n        var apiName = 'database.refFromURL';\r\n        this.checkDeleted_(apiName);\r\n        util.validateArgCount(apiName, 1, 1, arguments.length);\r\n        var parsedURL = parseRepoInfo(url);\r\n        validateUrl(apiName, 1, parsedURL);\r\n        var repoInfo = parsedURL.repoInfo;\r\n        if (repoInfo.host !== this.repo_.repoInfo_.host) {\r\n            fatal(apiName +\r\n                ': Host name does not match the current database: ' +\r\n                '(found ' +\r\n                repoInfo.host +\r\n                ' but expected ' +\r\n                this.repo_.repoInfo_.host +\r\n                ')');\r\n        }\r\n        return this.ref(parsedURL.path.toString());\r\n    };\r\n    /**\r\n     * @param {string} apiName\r\n     */\r\n    Database.prototype.checkDeleted_ = function (apiName) {\r\n        if (this.repo_ === null) {\r\n            fatal('Cannot call ' + apiName + ' on a deleted database.');\r\n        }\r\n    };\r\n    // Make individual repo go offline.\r\n    Database.prototype.goOffline = function () {\r\n        util.validateArgCount('database.goOffline', 0, 0, arguments.length);\r\n        this.checkDeleted_('goOffline');\r\n        this.repo_.interrupt();\r\n    };\r\n    Database.prototype.goOnline = function () {\r\n        util.validateArgCount('database.goOnline', 0, 0, arguments.length);\r\n        this.checkDeleted_('goOnline');\r\n        this.repo_.resume();\r\n    };\r\n    Database.ServerValue = {\r\n        TIMESTAMP: {\r\n            '.sv': 'timestamp'\r\n        }\r\n    };\r\n    return Database;\r\n}());\r\nvar DatabaseInternals = /** @class */ (function () {\r\n    /** @param {!Database} database */\r\n    function DatabaseInternals(database) {\r\n        this.database = database;\r\n    }\r\n    /** @return {Promise<void>} */\r\n    DatabaseInternals.prototype.delete = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                this.database.checkDeleted_('delete');\r\n                RepoManager.getInstance().deleteRepo(this.database.repo_);\r\n                this.database.repo_ = null;\r\n                this.database.root_ = null;\r\n                this.database.INTERNAL = null;\r\n                this.database = null;\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    return DatabaseInternals;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * INTERNAL methods for internal-use only (tests, etc.).\r\n *\r\n * Customers shouldn't use these or else should be aware that they could break at any time.\r\n *\r\n * @const\r\n */\r\nvar forceLongPolling = function () {\r\n    WebSocketConnection.forceDisallow();\r\n    BrowserPollConnection.forceAllow();\r\n};\r\nvar forceWebSockets = function () {\r\n    BrowserPollConnection.forceDisallow();\r\n};\r\n/* Used by App Manager */\r\nvar isWebSocketsAvailable = function () {\r\n    return WebSocketConnection['isAvailable']();\r\n};\r\nvar setSecurityDebugCallback = function (ref, callback) {\r\n    ref.repo.persistentConnection_.securityDebugCallback_ = callback;\r\n};\r\nvar stats = function (ref, showDelta) {\r\n    ref.repo.stats(showDelta);\r\n};\r\nvar statsIncrementCounter = function (ref, metric) {\r\n    ref.repo.statsIncrementCounter(metric);\r\n};\r\nvar dataUpdateCount = function (ref) {\r\n    return ref.repo.dataUpdateCount;\r\n};\r\nvar interceptServerData = function (ref, callback) {\r\n    return ref.repo.interceptServerData_(callback);\r\n};\n\nvar INTERNAL = /*#__PURE__*/Object.freeze({\n  forceLongPolling: forceLongPolling,\n  forceWebSockets: forceWebSockets,\n  isWebSocketsAvailable: isWebSocketsAvailable,\n  setSecurityDebugCallback: setSecurityDebugCallback,\n  stats: stats,\n  statsIncrementCounter: statsIncrementCounter,\n  dataUpdateCount: dataUpdateCount,\n  interceptServerData: interceptServerData\n});\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DataConnection = PersistentConnection;\r\n/**\r\n * @param {!string} pathString\r\n * @param {function(*)} onComplete\r\n */\r\nPersistentConnection.prototype.simpleListen = function (pathString, onComplete) {\r\n    this.sendRequest('q', { p: pathString }, onComplete);\r\n};\r\n/**\r\n * @param {*} data\r\n * @param {function(*)} onEcho\r\n */\r\nPersistentConnection.prototype.echo = function (data, onEcho) {\r\n    this.sendRequest('echo', { d: data }, onEcho);\r\n};\r\n// RealTimeConnection properties that we use in tests.\r\nvar RealTimeConnection = Connection;\r\n/**\r\n * @param {function(): string} newHash\r\n * @return {function()}\r\n */\r\nvar hijackHash = function (newHash) {\r\n    var oldPut = PersistentConnection.prototype.put;\r\n    PersistentConnection.prototype.put = function (pathString, data, opt_onComplete, opt_hash) {\r\n        if (opt_hash !== undefined) {\r\n            opt_hash = newHash();\r\n        }\r\n        oldPut.call(this, pathString, data, opt_onComplete, opt_hash);\r\n    };\r\n    return function () {\r\n        PersistentConnection.prototype.put = oldPut;\r\n    };\r\n};\r\n/**\r\n * @type {function(new:RepoInfo, !string, boolean, !string, boolean): undefined}\r\n */\r\nvar ConnectionTarget = RepoInfo;\r\n/**\r\n * @param {!Query} query\r\n * @return {!string}\r\n */\r\nvar queryIdentifier = function (query) {\r\n    return query.queryIdentifier();\r\n};\r\n/**\r\n * @param {!Query} firebaseRef\r\n * @return {!Object}\r\n */\r\nvar listens = function (firebaseRef) {\r\n    return firebaseRef.repo.persistentConnection_.listens_;\r\n};\r\n/**\r\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\r\n *\r\n * @param {boolean} forceRestClient\r\n */\r\nvar forceRestClient = function (forceRestClient) {\r\n    RepoManager.getInstance().forceRestClient(forceRestClient);\r\n};\n\nvar TEST_ACCESS = /*#__PURE__*/Object.freeze({\n  DataConnection: DataConnection,\n  RealTimeConnection: RealTimeConnection,\n  hijackHash: hijackHash,\n  ConnectionTarget: ConnectionTarget,\n  queryIdentifier: queryIdentifier,\n  listens: listens,\n  forceRestClient: forceRestClient\n});\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ServerValue = Database.ServerValue;\r\nfunction registerDatabase(instance) {\r\n    // Register the Database Service with the 'firebase' namespace.\r\n    var namespace = instance.INTERNAL.registerService('database', function (app, unused, url) { return RepoManager.getInstance().databaseFromApp(app, url); }, \r\n    // firebase.database namespace properties\r\n    {\r\n        Reference: Reference,\r\n        Query: Query,\r\n        Database: Database,\r\n        enableLogging: enableLogging,\r\n        INTERNAL: INTERNAL,\r\n        ServerValue: ServerValue,\r\n        TEST_ACCESS: TEST_ACCESS\r\n    }, null, true);\r\n    if (util.isNodeSdk()) {\r\n        module.exports = namespace;\r\n    }\r\n}\r\nregisterDatabase(firebase);\n\nexports.registerDatabase = registerDatabase;\nexports.Database = Database;\nexports.Query = Query;\nexports.Reference = Reference;\nexports.enableLogging = enableLogging;\nexports.ServerValue = ServerValue;\nexports.DataSnapshot = DataSnapshot;\nexports.OnDisconnect = OnDisconnect;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/index.cjs.js\n// module id = jE0U\n// module chunks = 0","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/_has.js\n// module id = jr2+\n// module chunks = 0","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/_enum-bug-keys.js\n// module id = kDp+\n// module chunks = 0","require('../../modules/es6.symbol');\nrequire('../../modules/es6.object.to-string');\nrequire('../../modules/es7.symbol.async-iterator');\nrequire('../../modules/es7.symbol.observable');\nmodule.exports = require('../../modules/_core').Symbol;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/fn/symbol/index.js\n// module id = kR/g\n// module chunks = 0","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/_is-object.js\n// module id = kebJ\n// module chunks = 0","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ')\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = options.status === undefined ? 200 : options.status\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/whatwg-fetch/fetch.js\n// module id = ls6R\n// module chunks = 0","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/_an-object.js\n// module id = mB5N\n// module chunks = 0","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/_to-primitive.js\n// module id = mBpW\n// module chunks = 0","module.exports = false;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/_library.js\n// module id = n1LN\n// module chunks = 0","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = require('./_has');\nvar toObject = require('./_to-object');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/_object-gpo.js\n// module id = n65i\n// module chunks = 0","// 7.2.8 IsRegExp(argument)\nvar isObject = require('./_is-object');\nvar cof = require('./_cof');\nvar MATCH = require('./_wks')('match');\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/_is-regexp.js\n// module id = oI33\n// module chunks = 0","require('../../modules/es6.string.iterator');\nrequire('../../modules/web.dom.iterable');\nmodule.exports = require('../../modules/_wks-ext').f('iterator');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/fn/symbol/iterator.js\n// module id = rR+z\n// module chunks = 0","'use strict';\n// 19.1.3.6 Object.prototype.toString()\nvar classof = require('./_classof');\nvar test = {};\ntest[require('./_wks')('toStringTag')] = 'z';\nif (test + '' != '[object z]') {\n  require('./_redefine')(Object.prototype, 'toString', function toString() {\n    return '[object ' + classof(this) + ']';\n  }, true);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/es6.object.to-string.js\n// module id = rqd7\n// module chunks = 0","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/_object-dp.js\n// module id = sTnx\n// module chunks = 0","'use strict';\n\n// Store setTimeout reference so promise-polyfill will be unaffected by\n// other code modifying setTimeout (like sinon.useFakeTimers())\nvar setTimeoutFunc = setTimeout;\n\nfunction noop() {}\n\n// Polyfill for Function.prototype.bind\nfunction bind(fn, thisArg) {\n  return function() {\n    fn.apply(thisArg, arguments);\n  };\n}\n\nfunction Promise(fn) {\n  if (!(this instanceof Promise))\n    throw new TypeError('Promises must be constructed via new');\n  if (typeof fn !== 'function') throw new TypeError('not a function');\n  this._state = 0;\n  this._handled = false;\n  this._value = undefined;\n  this._deferreds = [];\n\n  doResolve(fn, this);\n}\n\nfunction handle(self, deferred) {\n  while (self._state === 3) {\n    self = self._value;\n  }\n  if (self._state === 0) {\n    self._deferreds.push(deferred);\n    return;\n  }\n  self._handled = true;\n  Promise._immediateFn(function() {\n    var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      (self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n      return;\n    }\n    var ret;\n    try {\n      ret = cb(self._value);\n    } catch (e) {\n      reject(deferred.promise, e);\n      return;\n    }\n    resolve(deferred.promise, ret);\n  });\n}\n\nfunction resolve(self, newValue) {\n  try {\n    // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n    if (newValue === self)\n      throw new TypeError('A promise cannot be resolved with itself.');\n    if (\n      newValue &&\n      (typeof newValue === 'object' || typeof newValue === 'function')\n    ) {\n      var then = newValue.then;\n      if (newValue instanceof Promise) {\n        self._state = 3;\n        self._value = newValue;\n        finale(self);\n        return;\n      } else if (typeof then === 'function') {\n        doResolve(bind(then, newValue), self);\n        return;\n      }\n    }\n    self._state = 1;\n    self._value = newValue;\n    finale(self);\n  } catch (e) {\n    reject(self, e);\n  }\n}\n\nfunction reject(self, newValue) {\n  self._state = 2;\n  self._value = newValue;\n  finale(self);\n}\n\nfunction finale(self) {\n  if (self._state === 2 && self._deferreds.length === 0) {\n    Promise._immediateFn(function() {\n      if (!self._handled) {\n        Promise._unhandledRejectionFn(self._value);\n      }\n    });\n  }\n\n  for (var i = 0, len = self._deferreds.length; i < len; i++) {\n    handle(self, self._deferreds[i]);\n  }\n  self._deferreds = null;\n}\n\nfunction Handler(onFulfilled, onRejected, promise) {\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, self) {\n  var done = false;\n  try {\n    fn(\n      function(value) {\n        if (done) return;\n        done = true;\n        resolve(self, value);\n      },\n      function(reason) {\n        if (done) return;\n        done = true;\n        reject(self, reason);\n      }\n    );\n  } catch (ex) {\n    if (done) return;\n    done = true;\n    reject(self, ex);\n  }\n}\n\nPromise.prototype['catch'] = function(onRejected) {\n  return this.then(null, onRejected);\n};\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  var prom = new this.constructor(noop);\n\n  handle(this, new Handler(onFulfilled, onRejected, prom));\n  return prom;\n};\n\nPromise.prototype['finally'] = function(callback) {\n  var constructor = this.constructor;\n  return this.then(\n    function(value) {\n      return constructor.resolve(callback()).then(function() {\n        return value;\n      });\n    },\n    function(reason) {\n      return constructor.resolve(callback()).then(function() {\n        return constructor.reject(reason);\n      });\n    }\n  );\n};\n\nPromise.all = function(arr) {\n  return new Promise(function(resolve, reject) {\n    if (!arr || typeof arr.length === 'undefined')\n      throw new TypeError('Promise.all accepts an array');\n    var args = Array.prototype.slice.call(arr);\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n\n    function res(i, val) {\n      try {\n        if (val && (typeof val === 'object' || typeof val === 'function')) {\n          var then = val.then;\n          if (typeof then === 'function') {\n            then.call(\n              val,\n              function(val) {\n                res(i, val);\n              },\n              reject\n            );\n            return;\n          }\n        }\n        args[i] = val;\n        if (--remaining === 0) {\n          resolve(args);\n        }\n      } catch (ex) {\n        reject(ex);\n      }\n    }\n\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.resolve = function(value) {\n  if (value && typeof value === 'object' && value.constructor === Promise) {\n    return value;\n  }\n\n  return new Promise(function(resolve) {\n    resolve(value);\n  });\n};\n\nPromise.reject = function(value) {\n  return new Promise(function(resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function(values) {\n  return new Promise(function(resolve, reject) {\n    for (var i = 0, len = values.length; i < len; i++) {\n      values[i].then(resolve, reject);\n    }\n  });\n};\n\n// Use polyfill for setImmediate for performance gains\nPromise._immediateFn =\n  (typeof setImmediate === 'function' &&\n    function(fn) {\n      setImmediate(fn);\n    }) ||\n  function(fn) {\n    setTimeoutFunc(fn, 0);\n  };\n\nPromise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n  if (typeof console !== 'undefined' && console) {\n    console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n  }\n};\n\nvar globalNS = (function() {\n  // the only reliable means to get the global object is\n  // `Function('return this')()`\n  // However, this causes CSP violations in Chrome apps.\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('unable to locate global object');\n})();\n\nif (!globalNS.Promise) {\n  globalNS.Promise = Promise;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/promise-polyfill/lib/polyfill.js\n// module id = tf1T\n// module chunks = 0","// 7.2.2 IsArray(argument)\nvar cof = require('./_cof');\nmodule.exports = Array.isArray || function isArray(arg) {\n  return cof(arg) == 'Array';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/_is-array.js\n// module id = thl1\n// module chunks = 0","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = require('./_an-object');\nvar dPs = require('./_object-dps');\nvar enumBugKeys = require('./_enum-bug-keys');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/_object-create.js\n// module id = vHLQ\n// module chunks = 0","require('../../modules/es6.string.starts-with');\nmodule.exports = require('../../modules/_core').String.startsWith;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/fn/string/starts-with.js\n// module id = vrI+\n// module chunks = 0","require('../../modules/es6.array.find');\nmodule.exports = require('../../modules/_core').Array.find;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/fn/array/find.js\n// module id = xRo3\n// module chunks = 0","// 19.1.3.1 Object.assign(target, source)\nvar $export = require('./_export');\n\n$export($export.S + $export.F, 'Object', { assign: require('./_object-assign') });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/es6.object.assign.js\n// module id = xZT8\n// module chunks = 0","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/_property-desc.js\n// module id = xoyA\n// module chunks = 0","var global = require('./_global');\nvar core = require('./_core');\nvar hide = require('./_hide');\nvar redefine = require('./_redefine');\nvar ctx = require('./_ctx');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n  var key, own, out, exp;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    // export native or passed\n    out = (own ? target : source)[key];\n    // bind timers to global for call from export context\n    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // extend global\n    if (target) redefine(target, key, out, type & $export.U);\n    // export\n    if (exports[key] != out) hide(exports, key, exp);\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n  }\n};\nglobal.core = core;\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/_export.js\n// module id = xujQ\n// module chunks = 0","module.exports = {};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/_iterators.js\n// module id = xvaT\n// module chunks = 0","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/_to-iobject.js\n// module id = xznQ\n// module chunks = 0","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/_dom-create.js\n// module id = yMAN\n// module chunks = 0","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof');\nvar TAG = require('./_wks')('toStringTag');\n// ES3 wrong here\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/_classof.js\n// module id = yQK4\n// module chunks = 0","exports.f = {}.propertyIsEnumerable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/_object-pie.js\n// module id = ysPy\n// module chunks = 0","'use strict';\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nrequire('@firebase/polyfill');\nvar firebase = _interopDefault(require('@firebase/app'));\n\n/**\r\n * @license\r\n * Copyright 2018 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nmodule.exports = firebase;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/firebase/app/dist/index.cjs.js\n// module id = yviF\n// module chunks = 0","var toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/node_modules/core-js/modules/_to-absolute-index.js\n// module id = zx1G\n// module chunks = 0"],"sourceRoot":""}